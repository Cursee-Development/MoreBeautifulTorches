package com.lupin.more_beautiful_torches.core;

import com.lupin.more_beautiful_torches.CommonConstants;
import net.minecraft.core.Direction;
import net.minecraft.core.particles.ParticleTypes;
import net.minecraft.core.registries.BuiltInRegistries;
import net.minecraft.world.item.Item;
import net.minecraft.world.item.StandingAndWallBlockItem;
import net.minecraft.world.level.block.*;
import net.minecraft.world.level.block.state.BlockBehaviour;
import net.minecraft.world.level.material.PushReaction;
import net.neoforged.bus.api.IEventBus;
import net.neoforged.neoforge.registries.DeferredHolder;
import net.neoforged.neoforge.registries.DeferredRegister;

import java.util.function.Supplier;

import static net.minecraft.world.level.block.Blocks.*;

public class ModBlocks {
	public static final DeferredRegister<Item> MOD_ITEM_REGISTRY = DeferredRegister.create(BuiltInRegistries.ITEM, CommonConstants.MOD_ID);
	public static final DeferredRegister<Block> MOD_BLOCK_REGISTRY = DeferredRegister.create(BuiltInRegistries.BLOCK, CommonConstants.MOD_ID);
	
	// public static final Block REDSTONE_TORCH = register("redstone_torch", new RedstoneTorchBlock(BlockBehaviour.Properties.of().noCollission().instabreak().lightLevel(litBlockEmission(7)).sound(SoundType.WOOD).pushReaction(PushReaction.DESTROY).pushReaction(PushReaction.DESTROY)));
	// public static final Block REDSTONE_WALL_TORCH = register("redstone_wall_torch", new RedstoneWallTorchBlock(BlockBehaviour.Properties.of().noCollission().instabreak().lightLevel(litBlockEmission(7)).sound(SoundType.WOOD).pushReaction(PushReaction.DESTROY).dropsLike(REDSTONE_TORCH).pushReaction(PushReaction.DESTROY)));
	
	public static final DeferredHolder<Block, Block> ACACIA_LOG_REDSTONE_TORCH = registerBlock("acacia_log_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> ACACIA_LOG_REDSTONE_WALL_TORCH = registerBlock("acacia_log_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> ACACIA_LOG_SOUL_TORCH = registerBlock("acacia_log_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> ACACIA_LOG_SOUL_WALL_TORCH = registerBlock("acacia_log_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> ACACIA_LOG_TORCH = registerBlock("acacia_log_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> ACACIA_LOG_WALL_TORCH = registerBlock("acacia_log_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> ACACIA_PLANKS_REDSTONE_TORCH = registerBlock("acacia_planks_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> ACACIA_PLANKS_REDSTONE_WALL_TORCH = registerBlock("acacia_planks_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> ACACIA_PLANKS_SOUL_TORCH = registerBlock("acacia_planks_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> ACACIA_PLANKS_SOUL_WALL_TORCH = registerBlock("acacia_planks_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> ACACIA_PLANKS_TORCH = registerBlock("acacia_planks_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> ACACIA_PLANKS_WALL_TORCH = registerBlock("acacia_planks_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> AMETHYST_BLOCK_REDSTONE_TORCH = registerBlock("amethyst_block_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> AMETHYST_BLOCK_REDSTONE_WALL_TORCH = registerBlock("amethyst_block_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> AMETHYST_BLOCK_SOUL_TORCH = registerBlock("amethyst_block_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> AMETHYST_BLOCK_SOUL_WALL_TORCH = registerBlock("amethyst_block_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> AMETHYST_BLOCK_TORCH = registerBlock("amethyst_block_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> AMETHYST_BLOCK_WALL_TORCH = registerBlock("amethyst_block_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> AMETHYST_CLUSTER_REDSTONE_TORCH = registerBlock("amethyst_cluster_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> AMETHYST_CLUSTER_REDSTONE_WALL_TORCH = registerBlock("amethyst_cluster_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> AMETHYST_CLUSTER_SOUL_TORCH = registerBlock("amethyst_cluster_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> AMETHYST_CLUSTER_SOUL_WALL_TORCH = registerBlock("amethyst_cluster_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> AMETHYST_CLUSTER_TORCH = registerBlock("amethyst_cluster_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> AMETHYST_CLUSTER_WALL_TORCH = registerBlock("amethyst_cluster_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> ANCIENT_DEBRIS_REDSTONE_TORCH = registerBlock("ancient_debris_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> ANCIENT_DEBRIS_REDSTONE_WALL_TORCH = registerBlock("ancient_debris_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> ANCIENT_DEBRIS_SOUL_TORCH = registerBlock("ancient_debris_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> ANCIENT_DEBRIS_SOUL_WALL_TORCH = registerBlock("ancient_debris_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> ANCIENT_DEBRIS_TORCH = registerBlock("ancient_debris_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> ANCIENT_DEBRIS_WALL_TORCH = registerBlock("ancient_debris_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> ANDESITE_REDSTONE_TORCH = registerBlock("andesite_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> ANDESITE_REDSTONE_WALL_TORCH = registerBlock("andesite_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> ANDESITE_SOUL_TORCH = registerBlock("andesite_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> ANDESITE_SOUL_WALL_TORCH = registerBlock("andesite_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> ANDESITE_TORCH = registerBlock("andesite_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> ANDESITE_WALL_TORCH = registerBlock("andesite_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	
	
	public static final DeferredHolder<Block, Block> STRIPPED_BAMBOO_BLOCK_REDSTONE_TORCH = registerBlock(      "stripped_bamboo_block_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_BAMBOO_BLOCK_REDSTONE_WALL_TORCH = registerBlock( "stripped_bamboo_block_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_BAMBOO_BLOCK_SOUL_TORCH = registerBlock(          "stripped_bamboo_block_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_BAMBOO_BLOCK_SOUL_WALL_TORCH = registerBlock(     "stripped_bamboo_block_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_BAMBOO_BLOCK_TORCH = registerBlock(               "stripped_bamboo_block_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_BAMBOO_BLOCK_WALL_TORCH = registerBlock(          "stripped_bamboo_block_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	
	public static final DeferredHolder<Block, Block> BAMBOO_BLOCK_REDSTONE_TORCH = registerBlock(      "bamboo_block_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> BAMBOO_BLOCK_REDSTONE_WALL_TORCH = registerBlock( "bamboo_block_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BAMBOO_BLOCK_SOUL_TORCH = registerBlock(          "bamboo_block_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> BAMBOO_BLOCK_SOUL_WALL_TORCH = registerBlock(     "bamboo_block_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BAMBOO_BLOCK_TORCH = registerBlock(               "bamboo_block_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> BAMBOO_BLOCK_WALL_TORCH = registerBlock(          "bamboo_block_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BAMBOO_PLANKS_REDSTONE_TORCH = registerBlock(     "bamboo_planks_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> BAMBOO_PLANKS_REDSTONE_WALL_TORCH = registerBlock("bamboo_planks_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BAMBOO_PLANKS_SOUL_TORCH = registerBlock(         "bamboo_planks_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> BAMBOO_PLANKS_SOUL_WALL_TORCH = registerBlock(    "bamboo_planks_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BAMBOO_PLANKS_TORCH = registerBlock(              "bamboo_planks_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> BAMBOO_PLANKS_WALL_TORCH = registerBlock(         "bamboo_planks_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	
	public static final DeferredHolder<Block, Block> BASALT_REDSTONE_TORCH = registerBlock("basalt_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> BASALT_REDSTONE_WALL_TORCH = registerBlock("basalt_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BASALT_SOUL_TORCH = registerBlock("basalt_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> BASALT_SOUL_WALL_TORCH = registerBlock("basalt_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BASALT_TORCH = registerBlock("basalt_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> BASALT_WALL_TORCH = registerBlock("basalt_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BEEHIVE_REDSTONE_TORCH = registerBlock("beehive_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> BEEHIVE_REDSTONE_WALL_TORCH = registerBlock("beehive_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BEEHIVE_SOUL_TORCH = registerBlock("beehive_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> BEEHIVE_SOUL_WALL_TORCH = registerBlock("beehive_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BEEHIVE_TORCH = registerBlock("beehive_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> BEEHIVE_WALL_TORCH = registerBlock("beehive_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BEE_NEST_REDSTONE_TORCH = registerBlock("bee_nest_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> BEE_NEST_REDSTONE_WALL_TORCH = registerBlock("bee_nest_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BEE_NEST_SOUL_TORCH = registerBlock("bee_nest_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> BEE_NEST_SOUL_WALL_TORCH = registerBlock("bee_nest_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BEE_NEST_TORCH = registerBlock("bee_nest_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> BEE_NEST_WALL_TORCH = registerBlock("bee_nest_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BIRCH_LOG_REDSTONE_TORCH = registerBlock("birch_log_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> BIRCH_LOG_REDSTONE_WALL_TORCH = registerBlock("birch_log_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BIRCH_LOG_SOUL_TORCH = registerBlock("birch_log_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> BIRCH_LOG_SOUL_WALL_TORCH = registerBlock("birch_log_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BIRCH_LOG_TORCH = registerBlock("birch_log_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> BIRCH_LOG_WALL_TORCH = registerBlock("birch_log_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BIRCH_PLANKS_REDSTONE_TORCH = registerBlock("birch_planks_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> BIRCH_PLANKS_REDSTONE_WALL_TORCH = registerBlock("birch_planks_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BIRCH_PLANKS_SOUL_TORCH = registerBlock("birch_planks_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> BIRCH_PLANKS_SOUL_WALL_TORCH = registerBlock("birch_planks_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BIRCH_PLANKS_TORCH = registerBlock("birch_planks_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> BIRCH_PLANKS_WALL_TORCH = registerBlock("birch_planks_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BLACKSTONE_REDSTONE_TORCH = registerBlock("blackstone_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> BLACKSTONE_REDSTONE_WALL_TORCH = registerBlock("blackstone_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BLACKSTONE_SOUL_TORCH = registerBlock("blackstone_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> BLACKSTONE_SOUL_WALL_TORCH = registerBlock("blackstone_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BLACKSTONE_TORCH = registerBlock("blackstone_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> BLACKSTONE_WALL_TORCH = registerBlock("blackstone_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BLACK_TERRACOTTA_REDSTONE_TORCH = registerBlock("black_terracotta_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> BLACK_TERRACOTTA_REDSTONE_WALL_TORCH = registerBlock("black_terracotta_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BLACK_TERRACOTTA_SOUL_TORCH = registerBlock("black_terracotta_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> BLACK_TERRACOTTA_SOUL_WALL_TORCH = registerBlock("black_terracotta_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BLACK_TERRACOTTA_TORCH = registerBlock("black_terracotta_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> BLACK_TERRACOTTA_WALL_TORCH = registerBlock("black_terracotta_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BLACK_WOOL_REDSTONE_TORCH = registerBlock("black_wool_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> BLACK_WOOL_REDSTONE_WALL_TORCH = registerBlock("black_wool_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BLACK_WOOL_SOUL_TORCH = registerBlock("black_wool_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> BLACK_WOOL_SOUL_WALL_TORCH = registerBlock("black_wool_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BLACK_WOOL_TORCH = registerBlock("black_wool_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> BLACK_WOOL_WALL_TORCH = registerBlock("black_wool_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BLUE_ICE_REDSTONE_TORCH = registerBlock("blue_ice_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> BLUE_ICE_REDSTONE_WALL_TORCH = registerBlock("blue_ice_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BLUE_ICE_SOUL_TORCH = registerBlock("blue_ice_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> BLUE_ICE_SOUL_WALL_TORCH = registerBlock("blue_ice_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BLUE_ICE_TORCH = registerBlock("blue_ice_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> BLUE_ICE_WALL_TORCH = registerBlock("blue_ice_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BLUE_TERRACOTTA_REDSTONE_TORCH = registerBlock("blue_terracotta_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> BLUE_TERRACOTTA_REDSTONE_WALL_TORCH = registerBlock("blue_terracotta_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BLUE_TERRACOTTA_SOUL_TORCH = registerBlock("blue_terracotta_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> BLUE_TERRACOTTA_SOUL_WALL_TORCH = registerBlock("blue_terracotta_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BLUE_TERRACOTTA_TORCH = registerBlock("blue_terracotta_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> BLUE_TERRACOTTA_WALL_TORCH = registerBlock("blue_terracotta_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BLUE_WOOL_REDSTONE_TORCH = registerBlock("blue_wool_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> BLUE_WOOL_REDSTONE_WALL_TORCH = registerBlock("blue_wool_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BLUE_WOOL_SOUL_TORCH = registerBlock("blue_wool_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> BLUE_WOOL_SOUL_WALL_TORCH = registerBlock("blue_wool_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BLUE_WOOL_TORCH = registerBlock("blue_wool_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> BLUE_WOOL_WALL_TORCH = registerBlock("blue_wool_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BONE_BLOCK_REDSTONE_TORCH = registerBlock("bone_block_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> BONE_BLOCK_REDSTONE_WALL_TORCH = registerBlock("bone_block_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BONE_BLOCK_SOUL_TORCH = registerBlock("bone_block_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> BONE_BLOCK_SOUL_WALL_TORCH = registerBlock("bone_block_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BONE_BLOCK_TORCH = registerBlock("bone_block_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> BONE_BLOCK_WALL_TORCH = registerBlock("bone_block_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BOOKSHELF_REDSTONE_TORCH = registerBlock("bookshelf_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> BOOKSHELF_REDSTONE_WALL_TORCH = registerBlock("bookshelf_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BOOKSHELF_SOUL_TORCH = registerBlock("bookshelf_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> BOOKSHELF_SOUL_WALL_TORCH = registerBlock("bookshelf_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BOOKSHELF_TORCH = registerBlock("bookshelf_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> BOOKSHELF_WALL_TORCH = registerBlock("bookshelf_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BRAIN_CORAL_BLOCK_REDSTONE_TORCH = registerBlock("brain_coral_block_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> BRAIN_CORAL_BLOCK_REDSTONE_WALL_TORCH = registerBlock("brain_coral_block_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BRAIN_CORAL_BLOCK_SOUL_TORCH = registerBlock("brain_coral_block_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> BRAIN_CORAL_BLOCK_SOUL_WALL_TORCH = registerBlock("brain_coral_block_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BRAIN_CORAL_BLOCK_TORCH = registerBlock("brain_coral_block_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> BRAIN_CORAL_BLOCK_WALL_TORCH = registerBlock("brain_coral_block_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BRICKS_REDSTONE_TORCH = registerBlock("bricks_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> BRICKS_REDSTONE_WALL_TORCH = registerBlock("bricks_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BRICKS_SOUL_TORCH = registerBlock("bricks_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> BRICKS_SOUL_WALL_TORCH = registerBlock("bricks_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BRICKS_TORCH = registerBlock("bricks_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> BRICKS_WALL_TORCH = registerBlock("bricks_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BROWN_MUSHROOM_REDSTONE_TORCH = registerBlock("brown_mushroom_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> BROWN_MUSHROOM_REDSTONE_WALL_TORCH = registerBlock("brown_mushroom_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BROWN_MUSHROOM_SOUL_TORCH = registerBlock("brown_mushroom_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> BROWN_MUSHROOM_SOUL_WALL_TORCH = registerBlock("brown_mushroom_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BROWN_MUSHROOM_TORCH = registerBlock("brown_mushroom_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> BROWN_MUSHROOM_WALL_TORCH = registerBlock("brown_mushroom_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BROWN_MUSHROOM_BLOCK_REDSTONE_TORCH = registerBlock("brown_mushroom_block_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> BROWN_MUSHROOM_BLOCK_REDSTONE_WALL_TORCH = registerBlock("brown_mushroom_block_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BROWN_MUSHROOM_BLOCK_SOUL_TORCH = registerBlock("brown_mushroom_block_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> BROWN_MUSHROOM_BLOCK_SOUL_WALL_TORCH = registerBlock("brown_mushroom_block_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BROWN_MUSHROOM_BLOCK_TORCH = registerBlock("brown_mushroom_block_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> BROWN_MUSHROOM_BLOCK_WALL_TORCH = registerBlock("brown_mushroom_block_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BROWN_TERRACOTTA_REDSTONE_TORCH = registerBlock("brown_terracotta_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> BROWN_TERRACOTTA_REDSTONE_WALL_TORCH = registerBlock("brown_terracotta_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BROWN_TERRACOTTA_SOUL_TORCH = registerBlock("brown_terracotta_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> BROWN_TERRACOTTA_SOUL_WALL_TORCH = registerBlock("brown_terracotta_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BROWN_TERRACOTTA_TORCH = registerBlock("brown_terracotta_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> BROWN_TERRACOTTA_WALL_TORCH = registerBlock("brown_terracotta_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BROWN_WOOL_REDSTONE_TORCH = registerBlock("brown_wool_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> BROWN_WOOL_REDSTONE_WALL_TORCH = registerBlock("brown_wool_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BROWN_WOOL_SOUL_TORCH = registerBlock("brown_wool_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> BROWN_WOOL_SOUL_WALL_TORCH = registerBlock("brown_wool_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BROWN_WOOL_TORCH = registerBlock("brown_wool_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> BROWN_WOOL_WALL_TORCH = registerBlock("brown_wool_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BUBBLE_CORAL_BLOCK_REDSTONE_TORCH = registerBlock("bubble_coral_block_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> BUBBLE_CORAL_BLOCK_REDSTONE_WALL_TORCH = registerBlock("bubble_coral_block_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BUBBLE_CORAL_BLOCK_SOUL_TORCH = registerBlock("bubble_coral_block_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> BUBBLE_CORAL_BLOCK_SOUL_WALL_TORCH = registerBlock("bubble_coral_block_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BUBBLE_CORAL_BLOCK_TORCH = registerBlock("bubble_coral_block_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> BUBBLE_CORAL_BLOCK_WALL_TORCH = registerBlock("bubble_coral_block_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BUDDING_AMETHYST_REDSTONE_TORCH = registerBlock("budding_amethyst_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> BUDDING_AMETHYST_REDSTONE_WALL_TORCH = registerBlock("budding_amethyst_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BUDDING_AMETHYST_SOUL_TORCH = registerBlock("budding_amethyst_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> BUDDING_AMETHYST_SOUL_WALL_TORCH = registerBlock("budding_amethyst_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> BUDDING_AMETHYST_TORCH = registerBlock("budding_amethyst_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> BUDDING_AMETHYST_WALL_TORCH = registerBlock("budding_amethyst_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CALCITE_REDSTONE_TORCH = registerBlock("calcite_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> CALCITE_REDSTONE_WALL_TORCH = registerBlock("calcite_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CALCITE_SOUL_TORCH = registerBlock("calcite_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> CALCITE_SOUL_WALL_TORCH = registerBlock("calcite_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CALCITE_TORCH = registerBlock("calcite_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> CALCITE_WALL_TORCH = registerBlock("calcite_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CHISELED_DEEPSLATE_REDSTONE_TORCH = registerBlock("chiseled_deepslate_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> CHISELED_DEEPSLATE_REDSTONE_WALL_TORCH = registerBlock("chiseled_deepslate_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CHISELED_DEEPSLATE_SOUL_TORCH = registerBlock("chiseled_deepslate_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> CHISELED_DEEPSLATE_SOUL_WALL_TORCH = registerBlock("chiseled_deepslate_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CHISELED_DEEPSLATE_TORCH = registerBlock("chiseled_deepslate_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> CHISELED_DEEPSLATE_WALL_TORCH = registerBlock("chiseled_deepslate_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CHISELED_NETHER_BRICKS_REDSTONE_TORCH = registerBlock("chiseled_nether_bricks_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> CHISELED_NETHER_BRICKS_REDSTONE_WALL_TORCH = registerBlock("chiseled_nether_bricks_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CHISELED_NETHER_BRICKS_SOUL_TORCH = registerBlock("chiseled_nether_bricks_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> CHISELED_NETHER_BRICKS_SOUL_WALL_TORCH = registerBlock("chiseled_nether_bricks_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CHISELED_NETHER_BRICKS_TORCH = registerBlock("chiseled_nether_bricks_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> CHISELED_NETHER_BRICKS_WALL_TORCH = registerBlock("chiseled_nether_bricks_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CHISELED_POLISHED_BLACKSTONE_REDSTONE_TORCH = registerBlock("chiseled_polished_blackstone_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> CHISELED_POLISHED_BLACKSTONE_REDSTONE_WALL_TORCH = registerBlock("chiseled_polished_blackstone_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CHISELED_POLISHED_BLACKSTONE_SOUL_TORCH = registerBlock("chiseled_polished_blackstone_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> CHISELED_POLISHED_BLACKSTONE_SOUL_WALL_TORCH = registerBlock("chiseled_polished_blackstone_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CHISELED_POLISHED_BLACKSTONE_TORCH = registerBlock("chiseled_polished_blackstone_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> CHISELED_POLISHED_BLACKSTONE_WALL_TORCH = registerBlock("chiseled_polished_blackstone_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CHISELED_QUARTZ_BLOCK_REDSTONE_TORCH = registerBlock("chiseled_quartz_block_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> CHISELED_QUARTZ_BLOCK_REDSTONE_WALL_TORCH = registerBlock("chiseled_quartz_block_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CHISELED_QUARTZ_BLOCK_SOUL_TORCH = registerBlock("chiseled_quartz_block_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> CHISELED_QUARTZ_BLOCK_SOUL_WALL_TORCH = registerBlock("chiseled_quartz_block_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CHISELED_QUARTZ_BLOCK_TORCH = registerBlock("chiseled_quartz_block_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> CHISELED_QUARTZ_BLOCK_WALL_TORCH = registerBlock("chiseled_quartz_block_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CHISELED_RED_SANDSTONE_REDSTONE_TORCH = registerBlock("chiseled_red_sandstone_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> CHISELED_RED_SANDSTONE_REDSTONE_WALL_TORCH = registerBlock("chiseled_red_sandstone_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CHISELED_RED_SANDSTONE_SOUL_TORCH = registerBlock("chiseled_red_sandstone_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> CHISELED_RED_SANDSTONE_SOUL_WALL_TORCH = registerBlock("chiseled_red_sandstone_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CHISELED_RED_SANDSTONE_TORCH = registerBlock("chiseled_red_sandstone_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> CHISELED_RED_SANDSTONE_WALL_TORCH = registerBlock("chiseled_red_sandstone_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CHISELED_SANDSTONE_REDSTONE_TORCH = registerBlock("chiseled_sandstone_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> CHISELED_SANDSTONE_REDSTONE_WALL_TORCH = registerBlock("chiseled_sandstone_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CHISELED_SANDSTONE_SOUL_TORCH = registerBlock("chiseled_sandstone_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> CHISELED_SANDSTONE_SOUL_WALL_TORCH = registerBlock("chiseled_sandstone_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CHISELED_SANDSTONE_TORCH = registerBlock("chiseled_sandstone_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> CHISELED_SANDSTONE_WALL_TORCH = registerBlock("chiseled_sandstone_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CHISELED_STONE_BRICKS_REDSTONE_TORCH = registerBlock("chiseled_stone_bricks_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> CHISELED_STONE_BRICKS_REDSTONE_WALL_TORCH = registerBlock("chiseled_stone_bricks_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CHISELED_STONE_BRICKS_SOUL_TORCH = registerBlock("chiseled_stone_bricks_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> CHISELED_STONE_BRICKS_SOUL_WALL_TORCH = registerBlock("chiseled_stone_bricks_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CHISELED_STONE_BRICKS_TORCH = registerBlock("chiseled_stone_bricks_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> CHISELED_STONE_BRICKS_WALL_TORCH = registerBlock("chiseled_stone_bricks_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CHORUS_FLOWER_REDSTONE_TORCH = registerBlock("chorus_flower_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> CHORUS_FLOWER_REDSTONE_WALL_TORCH = registerBlock("chorus_flower_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CHORUS_FLOWER_SOUL_TORCH = registerBlock("chorus_flower_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> CHORUS_FLOWER_SOUL_WALL_TORCH = registerBlock("chorus_flower_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CHORUS_FLOWER_TORCH = registerBlock("chorus_flower_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> CHORUS_FLOWER_WALL_TORCH = registerBlock("chorus_flower_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CHORUS_PLANT_REDSTONE_TORCH = registerBlock("chorus_plant_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> CHORUS_PLANT_REDSTONE_WALL_TORCH = registerBlock("chorus_plant_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CHORUS_PLANT_SOUL_TORCH = registerBlock("chorus_plant_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> CHORUS_PLANT_SOUL_WALL_TORCH = registerBlock("chorus_plant_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CHORUS_PLANT_TORCH = registerBlock("chorus_plant_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> CHORUS_PLANT_WALL_TORCH = registerBlock("chorus_plant_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CLAY_REDSTONE_TORCH = registerBlock("clay_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> CLAY_REDSTONE_WALL_TORCH = registerBlock("clay_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CLAY_SOUL_TORCH = registerBlock("clay_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> CLAY_SOUL_WALL_TORCH = registerBlock("clay_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CLAY_TORCH = registerBlock("clay_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> CLAY_WALL_TORCH = registerBlock("clay_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> COAL_BLOCK_REDSTONE_TORCH = registerBlock("coal_block_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> COAL_BLOCK_REDSTONE_WALL_TORCH = registerBlock("coal_block_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> COAL_BLOCK_SOUL_TORCH = registerBlock("coal_block_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> COAL_BLOCK_SOUL_WALL_TORCH = registerBlock("coal_block_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> COAL_BLOCK_TORCH = registerBlock("coal_block_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> COAL_BLOCK_WALL_TORCH = registerBlock("coal_block_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> COAL_ORE_REDSTONE_TORCH = registerBlock("coal_ore_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> COAL_ORE_REDSTONE_WALL_TORCH = registerBlock("coal_ore_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> COAL_ORE_SOUL_TORCH = registerBlock("coal_ore_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> COAL_ORE_SOUL_WALL_TORCH = registerBlock("coal_ore_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> COAL_ORE_TORCH = registerBlock("coal_ore_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> COAL_ORE_WALL_TORCH = registerBlock("coal_ore_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> COARSE_DIRT_REDSTONE_TORCH = registerBlock("coarse_dirt_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> COARSE_DIRT_REDSTONE_WALL_TORCH = registerBlock("coarse_dirt_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> COARSE_DIRT_SOUL_TORCH = registerBlock("coarse_dirt_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> COARSE_DIRT_SOUL_WALL_TORCH = registerBlock("coarse_dirt_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> COARSE_DIRT_TORCH = registerBlock("coarse_dirt_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> COARSE_DIRT_WALL_TORCH = registerBlock("coarse_dirt_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> COBBLED_DEEPSLATE_REDSTONE_TORCH = registerBlock("cobbled_deepslate_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> COBBLED_DEEPSLATE_REDSTONE_WALL_TORCH = registerBlock("cobbled_deepslate_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> COBBLED_DEEPSLATE_SOUL_TORCH = registerBlock("cobbled_deepslate_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> COBBLED_DEEPSLATE_SOUL_WALL_TORCH = registerBlock("cobbled_deepslate_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> COBBLED_DEEPSLATE_TORCH = registerBlock("cobbled_deepslate_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> COBBLED_DEEPSLATE_WALL_TORCH = registerBlock("cobbled_deepslate_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> COBBLESTONE_REDSTONE_TORCH = registerBlock("cobblestone_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> COBBLESTONE_REDSTONE_WALL_TORCH = registerBlock("cobblestone_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> COBBLESTONE_SOUL_TORCH = registerBlock("cobblestone_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> COBBLESTONE_SOUL_WALL_TORCH = registerBlock("cobblestone_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> COBBLESTONE_TORCH = registerBlock("cobblestone_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> COBBLESTONE_WALL_TORCH = registerBlock("cobblestone_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> COPPER_BLOCK_REDSTONE_TORCH = registerBlock("copper_block_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> COPPER_BLOCK_REDSTONE_WALL_TORCH = registerBlock("copper_block_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> COPPER_BLOCK_SOUL_TORCH = registerBlock("copper_block_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> COPPER_BLOCK_SOUL_WALL_TORCH = registerBlock("copper_block_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> COPPER_BLOCK_TORCH = registerBlock("copper_block_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> COPPER_BLOCK_WALL_TORCH = registerBlock("copper_block_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> COPPER_ORE_REDSTONE_TORCH = registerBlock("copper_ore_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> COPPER_ORE_REDSTONE_WALL_TORCH = registerBlock("copper_ore_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> COPPER_ORE_SOUL_TORCH = registerBlock("copper_ore_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> COPPER_ORE_SOUL_WALL_TORCH = registerBlock("copper_ore_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> COPPER_ORE_TORCH = registerBlock("copper_ore_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> COPPER_ORE_WALL_TORCH = registerBlock("copper_ore_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CRACKED_DEEPSLATE_BRICKS_REDSTONE_TORCH = registerBlock("cracked_deepslate_bricks_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> CRACKED_DEEPSLATE_BRICKS_REDSTONE_WALL_TORCH = registerBlock("cracked_deepslate_bricks_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CRACKED_DEEPSLATE_BRICKS_SOUL_TORCH = registerBlock("cracked_deepslate_bricks_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> CRACKED_DEEPSLATE_BRICKS_SOUL_WALL_TORCH = registerBlock("cracked_deepslate_bricks_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CRACKED_DEEPSLATE_BRICKS_TORCH = registerBlock("cracked_deepslate_bricks_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> CRACKED_DEEPSLATE_BRICKS_WALL_TORCH = registerBlock("cracked_deepslate_bricks_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CRACKED_DEEPSLATE_TILES_REDSTONE_TORCH = registerBlock("cracked_deepslate_tiles_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> CRACKED_DEEPSLATE_TILES_REDSTONE_WALL_TORCH = registerBlock("cracked_deepslate_tiles_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CRACKED_DEEPSLATE_TILES_SOUL_TORCH = registerBlock("cracked_deepslate_tiles_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> CRACKED_DEEPSLATE_TILES_SOUL_WALL_TORCH = registerBlock("cracked_deepslate_tiles_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CRACKED_DEEPSLATE_TILES_TORCH = registerBlock("cracked_deepslate_tiles_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> CRACKED_DEEPSLATE_TILES_WALL_TORCH = registerBlock("cracked_deepslate_tiles_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CRACKED_NETHER_BRICKS_REDSTONE_TORCH = registerBlock("cracked_nether_bricks_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> CRACKED_NETHER_BRICKS_REDSTONE_WALL_TORCH = registerBlock("cracked_nether_bricks_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CRACKED_NETHER_BRICKS_SOUL_TORCH = registerBlock("cracked_nether_bricks_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> CRACKED_NETHER_BRICKS_SOUL_WALL_TORCH = registerBlock("cracked_nether_bricks_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CRACKED_NETHER_BRICKS_TORCH = registerBlock("cracked_nether_bricks_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> CRACKED_NETHER_BRICKS_WALL_TORCH = registerBlock("cracked_nether_bricks_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CRACKED_POLISHED_BLACKSTONE_BRICKS_REDSTONE_TORCH = registerBlock("cracked_polished_blackstone_bricks_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> CRACKED_POLISHED_BLACKSTONE_BRICKS_REDSTONE_WALL_TORCH = registerBlock("cracked_polished_blackstone_bricks_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CRACKED_POLISHED_BLACKSTONE_BRICKS_SOUL_TORCH = registerBlock("cracked_polished_blackstone_bricks_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> CRACKED_POLISHED_BLACKSTONE_BRICKS_SOUL_WALL_TORCH = registerBlock("cracked_polished_blackstone_bricks_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CRACKED_POLISHED_BLACKSTONE_BRICKS_TORCH = registerBlock("cracked_polished_blackstone_bricks_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> CRACKED_POLISHED_BLACKSTONE_BRICKS_WALL_TORCH = registerBlock("cracked_polished_blackstone_bricks_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CRACKED_STONE_BRICKS_REDSTONE_TORCH = registerBlock("cracked_stone_bricks_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> CRACKED_STONE_BRICKS_REDSTONE_WALL_TORCH = registerBlock("cracked_stone_bricks_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CRACKED_STONE_BRICKS_SOUL_TORCH = registerBlock("cracked_stone_bricks_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> CRACKED_STONE_BRICKS_SOUL_WALL_TORCH = registerBlock("cracked_stone_bricks_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CRACKED_STONE_BRICKS_TORCH = registerBlock("cracked_stone_bricks_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> CRACKED_STONE_BRICKS_WALL_TORCH = registerBlock("cracked_stone_bricks_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CRIMSON_FUNGUS_REDSTONE_TORCH = registerBlock("crimson_fungus_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> CRIMSON_FUNGUS_REDSTONE_WALL_TORCH = registerBlock("crimson_fungus_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CRIMSON_FUNGUS_SOUL_TORCH = registerBlock("crimson_fungus_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> CRIMSON_FUNGUS_SOUL_WALL_TORCH = registerBlock("crimson_fungus_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CRIMSON_FUNGUS_TORCH = registerBlock("crimson_fungus_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> CRIMSON_FUNGUS_WALL_TORCH = registerBlock("crimson_fungus_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CRIMSON_HYPHAE_REDSTONE_TORCH = registerBlock("crimson_hyphae_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> CRIMSON_HYPHAE_REDSTONE_WALL_TORCH = registerBlock("crimson_hyphae_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CRIMSON_HYPHAE_SOUL_TORCH = registerBlock("crimson_hyphae_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> CRIMSON_HYPHAE_SOUL_WALL_TORCH = registerBlock("crimson_hyphae_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CRIMSON_HYPHAE_TORCH = registerBlock("crimson_hyphae_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> CRIMSON_HYPHAE_WALL_TORCH = registerBlock("crimson_hyphae_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CRIMSON_NYLIUM_REDSTONE_TORCH = registerBlock("crimson_nylium_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> CRIMSON_NYLIUM_REDSTONE_WALL_TORCH = registerBlock("crimson_nylium_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CRIMSON_NYLIUM_SOUL_TORCH = registerBlock("crimson_nylium_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> CRIMSON_NYLIUM_SOUL_WALL_TORCH = registerBlock("crimson_nylium_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CRIMSON_NYLIUM_TORCH = registerBlock("crimson_nylium_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> CRIMSON_NYLIUM_WALL_TORCH = registerBlock("crimson_nylium_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CRIMSON_PLANKS_REDSTONE_TORCH = registerBlock("crimson_planks_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> CRIMSON_PLANKS_REDSTONE_WALL_TORCH = registerBlock("crimson_planks_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CRIMSON_PLANKS_SOUL_TORCH = registerBlock("crimson_planks_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> CRIMSON_PLANKS_SOUL_WALL_TORCH = registerBlock("crimson_planks_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CRIMSON_PLANKS_TORCH = registerBlock("crimson_planks_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> CRIMSON_PLANKS_WALL_TORCH = registerBlock("crimson_planks_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CRIMSON_ROOTS_REDSTONE_TORCH = registerBlock("crimson_roots_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> CRIMSON_ROOTS_REDSTONE_WALL_TORCH = registerBlock("crimson_roots_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CRIMSON_ROOTS_SOUL_TORCH = registerBlock("crimson_roots_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> CRIMSON_ROOTS_SOUL_WALL_TORCH = registerBlock("crimson_roots_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CRIMSON_ROOTS_TORCH = registerBlock("crimson_roots_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> CRIMSON_ROOTS_WALL_TORCH = registerBlock("crimson_roots_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CRYING_OBSIDIAN_REDSTONE_TORCH = registerBlock("crying_obsidian_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> CRYING_OBSIDIAN_REDSTONE_WALL_TORCH = registerBlock("crying_obsidian_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CRYING_OBSIDIAN_SOUL_TORCH = registerBlock("crying_obsidian_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> CRYING_OBSIDIAN_SOUL_WALL_TORCH = registerBlock("crying_obsidian_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CRYING_OBSIDIAN_TORCH = registerBlock("crying_obsidian_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> CRYING_OBSIDIAN_WALL_TORCH = registerBlock("crying_obsidian_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CUT_COPPER_REDSTONE_TORCH = registerBlock("cut_copper_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> CUT_COPPER_REDSTONE_WALL_TORCH = registerBlock("cut_copper_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CUT_COPPER_SOUL_TORCH = registerBlock("cut_copper_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> CUT_COPPER_SOUL_WALL_TORCH = registerBlock("cut_copper_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CUT_COPPER_TORCH = registerBlock("cut_copper_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> CUT_COPPER_WALL_TORCH = registerBlock("cut_copper_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CUT_RED_SANDSTONE_REDSTONE_TORCH = registerBlock("cut_red_sandstone_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> CUT_RED_SANDSTONE_REDSTONE_WALL_TORCH = registerBlock("cut_red_sandstone_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CUT_RED_SANDSTONE_SOUL_TORCH = registerBlock("cut_red_sandstone_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> CUT_RED_SANDSTONE_SOUL_WALL_TORCH = registerBlock("cut_red_sandstone_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CUT_RED_SANDSTONE_TORCH = registerBlock("cut_red_sandstone_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> CUT_RED_SANDSTONE_WALL_TORCH = registerBlock("cut_red_sandstone_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CUT_SANDSTONE_REDSTONE_TORCH = registerBlock("cut_sandstone_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> CUT_SANDSTONE_REDSTONE_WALL_TORCH = registerBlock("cut_sandstone_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CUT_SANDSTONE_SOUL_TORCH = registerBlock("cut_sandstone_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> CUT_SANDSTONE_SOUL_WALL_TORCH = registerBlock("cut_sandstone_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CUT_SANDSTONE_TORCH = registerBlock("cut_sandstone_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> CUT_SANDSTONE_WALL_TORCH = registerBlock("cut_sandstone_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CYAN_TERRACOTTA_REDSTONE_TORCH = registerBlock("cyan_terracotta_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> CYAN_TERRACOTTA_REDSTONE_WALL_TORCH = registerBlock("cyan_terracotta_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CYAN_TERRACOTTA_SOUL_TORCH = registerBlock("cyan_terracotta_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> CYAN_TERRACOTTA_SOUL_WALL_TORCH = registerBlock("cyan_terracotta_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CYAN_TERRACOTTA_TORCH = registerBlock("cyan_terracotta_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> CYAN_TERRACOTTA_WALL_TORCH = registerBlock("cyan_terracotta_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CYAN_WOOL_REDSTONE_TORCH = registerBlock("cyan_wool_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> CYAN_WOOL_REDSTONE_WALL_TORCH = registerBlock("cyan_wool_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CYAN_WOOL_SOUL_TORCH = registerBlock("cyan_wool_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> CYAN_WOOL_SOUL_WALL_TORCH = registerBlock("cyan_wool_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> CYAN_WOOL_TORCH = registerBlock("cyan_wool_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> CYAN_WOOL_WALL_TORCH = registerBlock("cyan_wool_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DARK_OAK_LOG_REDSTONE_TORCH = registerBlock("dark_oak_log_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> DARK_OAK_LOG_REDSTONE_WALL_TORCH = registerBlock("dark_oak_log_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DARK_OAK_LOG_SOUL_TORCH = registerBlock("dark_oak_log_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> DARK_OAK_LOG_SOUL_WALL_TORCH = registerBlock("dark_oak_log_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DARK_OAK_LOG_TORCH = registerBlock("dark_oak_log_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> DARK_OAK_LOG_WALL_TORCH = registerBlock("dark_oak_log_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DARK_OAK_PLANKS_REDSTONE_TORCH = registerBlock("dark_oak_planks_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> DARK_OAK_PLANKS_REDSTONE_WALL_TORCH = registerBlock("dark_oak_planks_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DARK_OAK_PLANKS_SOUL_TORCH = registerBlock("dark_oak_planks_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> DARK_OAK_PLANKS_SOUL_WALL_TORCH = registerBlock("dark_oak_planks_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DARK_OAK_PLANKS_TORCH = registerBlock("dark_oak_planks_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> DARK_OAK_PLANKS_WALL_TORCH = registerBlock("dark_oak_planks_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DARK_PRISMARINE_REDSTONE_TORCH = registerBlock("dark_prismarine_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> DARK_PRISMARINE_REDSTONE_WALL_TORCH = registerBlock("dark_prismarine_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DARK_PRISMARINE_SOUL_TORCH = registerBlock("dark_prismarine_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> DARK_PRISMARINE_SOUL_WALL_TORCH = registerBlock("dark_prismarine_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DARK_PRISMARINE_TORCH = registerBlock("dark_prismarine_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> DARK_PRISMARINE_WALL_TORCH = registerBlock("dark_prismarine_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEAD_BRAIN_CORAL_BLOCK_REDSTONE_TORCH = registerBlock("dead_brain_coral_block_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> DEAD_BRAIN_CORAL_BLOCK_REDSTONE_WALL_TORCH = registerBlock("dead_brain_coral_block_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEAD_BRAIN_CORAL_BLOCK_SOUL_TORCH = registerBlock("dead_brain_coral_block_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEAD_BRAIN_CORAL_BLOCK_SOUL_WALL_TORCH = registerBlock("dead_brain_coral_block_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEAD_BRAIN_CORAL_BLOCK_TORCH = registerBlock("dead_brain_coral_block_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> DEAD_BRAIN_CORAL_BLOCK_WALL_TORCH = registerBlock("dead_brain_coral_block_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEAD_BUBBLE_CORAL_BLOCK_REDSTONE_TORCH = registerBlock("dead_bubble_coral_block_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> DEAD_BUBBLE_CORAL_BLOCK_REDSTONE_WALL_TORCH = registerBlock("dead_bubble_coral_block_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEAD_BUBBLE_CORAL_BLOCK_SOUL_TORCH = registerBlock("dead_bubble_coral_block_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEAD_BUBBLE_CORAL_BLOCK_SOUL_WALL_TORCH = registerBlock("dead_bubble_coral_block_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEAD_BUBBLE_CORAL_BLOCK_TORCH = registerBlock("dead_bubble_coral_block_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> DEAD_BUBBLE_CORAL_BLOCK_WALL_TORCH = registerBlock("dead_bubble_coral_block_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEAD_FIRE_CORAL_BLOCK_REDSTONE_TORCH = registerBlock("dead_fire_coral_block_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> DEAD_FIRE_CORAL_BLOCK_REDSTONE_WALL_TORCH = registerBlock("dead_fire_coral_block_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEAD_FIRE_CORAL_BLOCK_SOUL_TORCH = registerBlock("dead_fire_coral_block_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEAD_FIRE_CORAL_BLOCK_SOUL_WALL_TORCH = registerBlock("dead_fire_coral_block_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEAD_FIRE_CORAL_BLOCK_TORCH = registerBlock("dead_fire_coral_block_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> DEAD_FIRE_CORAL_BLOCK_WALL_TORCH = registerBlock("dead_fire_coral_block_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEAD_HORN_CORAL_BLOCK_REDSTONE_TORCH = registerBlock("dead_horn_coral_block_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> DEAD_HORN_CORAL_BLOCK_REDSTONE_WALL_TORCH = registerBlock("dead_horn_coral_block_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEAD_HORN_CORAL_BLOCK_SOUL_TORCH = registerBlock("dead_horn_coral_block_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEAD_HORN_CORAL_BLOCK_SOUL_WALL_TORCH = registerBlock("dead_horn_coral_block_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEAD_HORN_CORAL_BLOCK_TORCH = registerBlock("dead_horn_coral_block_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> DEAD_HORN_CORAL_BLOCK_WALL_TORCH = registerBlock("dead_horn_coral_block_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEAD_TUBE_CORAL_BLOCK_REDSTONE_TORCH = registerBlock("dead_tube_coral_block_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> DEAD_TUBE_CORAL_BLOCK_REDSTONE_WALL_TORCH = registerBlock("dead_tube_coral_block_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEAD_TUBE_CORAL_BLOCK_SOUL_TORCH = registerBlock("dead_tube_coral_block_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEAD_TUBE_CORAL_BLOCK_SOUL_WALL_TORCH = registerBlock("dead_tube_coral_block_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEAD_TUBE_CORAL_BLOCK_TORCH = registerBlock("dead_tube_coral_block_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> DEAD_TUBE_CORAL_BLOCK_WALL_TORCH = registerBlock("dead_tube_coral_block_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_REDSTONE_TORCH = registerBlock("deepslate_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_REDSTONE_WALL_TORCH = registerBlock("deepslate_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_SOUL_TORCH = registerBlock("deepslate_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_SOUL_WALL_TORCH = registerBlock("deepslate_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_TORCH = registerBlock("deepslate_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_WALL_TORCH = registerBlock("deepslate_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_BRICKS_REDSTONE_TORCH = registerBlock("deepslate_bricks_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_BRICKS_REDSTONE_WALL_TORCH = registerBlock("deepslate_bricks_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_BRICKS_SOUL_TORCH = registerBlock("deepslate_bricks_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_BRICKS_SOUL_WALL_TORCH = registerBlock("deepslate_bricks_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_BRICKS_TORCH = registerBlock("deepslate_bricks_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_BRICKS_WALL_TORCH = registerBlock("deepslate_bricks_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_COAL_ORE_REDSTONE_TORCH = registerBlock("deepslate_coal_ore_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_COAL_ORE_REDSTONE_WALL_TORCH = registerBlock("deepslate_coal_ore_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_COAL_ORE_SOUL_TORCH = registerBlock("deepslate_coal_ore_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_COAL_ORE_SOUL_WALL_TORCH = registerBlock("deepslate_coal_ore_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_COAL_ORE_TORCH = registerBlock("deepslate_coal_ore_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_COAL_ORE_WALL_TORCH = registerBlock("deepslate_coal_ore_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_COPPER_ORE_REDSTONE_TORCH = registerBlock("deepslate_copper_ore_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_COPPER_ORE_REDSTONE_WALL_TORCH = registerBlock("deepslate_copper_ore_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_COPPER_ORE_SOUL_TORCH = registerBlock("deepslate_copper_ore_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_COPPER_ORE_SOUL_WALL_TORCH = registerBlock("deepslate_copper_ore_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_COPPER_ORE_TORCH = registerBlock("deepslate_copper_ore_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_COPPER_ORE_WALL_TORCH = registerBlock("deepslate_copper_ore_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_DIAMOND_ORE_REDSTONE_TORCH = registerBlock("deepslate_diamond_ore_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_DIAMOND_ORE_REDSTONE_WALL_TORCH = registerBlock("deepslate_diamond_ore_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_DIAMOND_ORE_SOUL_TORCH = registerBlock("deepslate_diamond_ore_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_DIAMOND_ORE_SOUL_WALL_TORCH = registerBlock("deepslate_diamond_ore_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_DIAMOND_ORE_TORCH = registerBlock("deepslate_diamond_ore_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_DIAMOND_ORE_WALL_TORCH = registerBlock("deepslate_diamond_ore_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_EMERALD_ORE_REDSTONE_TORCH = registerBlock("deepslate_emerald_ore_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_EMERALD_ORE_REDSTONE_WALL_TORCH = registerBlock("deepslate_emerald_ore_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_EMERALD_ORE_SOUL_TORCH = registerBlock("deepslate_emerald_ore_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_EMERALD_ORE_SOUL_WALL_TORCH = registerBlock("deepslate_emerald_ore_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_EMERALD_ORE_TORCH = registerBlock("deepslate_emerald_ore_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_EMERALD_ORE_WALL_TORCH = registerBlock("deepslate_emerald_ore_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_GOLD_ORE_REDSTONE_TORCH = registerBlock("deepslate_gold_ore_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_GOLD_ORE_REDSTONE_WALL_TORCH = registerBlock("deepslate_gold_ore_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_GOLD_ORE_SOUL_TORCH = registerBlock("deepslate_gold_ore_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_GOLD_ORE_SOUL_WALL_TORCH = registerBlock("deepslate_gold_ore_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_GOLD_ORE_TORCH = registerBlock("deepslate_gold_ore_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_GOLD_ORE_WALL_TORCH = registerBlock("deepslate_gold_ore_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_IRON_ORE_REDSTONE_TORCH = registerBlock("deepslate_iron_ore_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_IRON_ORE_REDSTONE_WALL_TORCH = registerBlock("deepslate_iron_ore_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_IRON_ORE_SOUL_TORCH = registerBlock("deepslate_iron_ore_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_IRON_ORE_SOUL_WALL_TORCH = registerBlock("deepslate_iron_ore_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_IRON_ORE_TORCH = registerBlock("deepslate_iron_ore_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_IRON_ORE_WALL_TORCH = registerBlock("deepslate_iron_ore_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_LAPIS_ORE_REDSTONE_TORCH = registerBlock("deepslate_lapis_ore_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_LAPIS_ORE_REDSTONE_WALL_TORCH = registerBlock("deepslate_lapis_ore_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_LAPIS_ORE_SOUL_TORCH = registerBlock("deepslate_lapis_ore_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_LAPIS_ORE_SOUL_WALL_TORCH = registerBlock("deepslate_lapis_ore_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_LAPIS_ORE_TORCH = registerBlock("deepslate_lapis_ore_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_LAPIS_ORE_WALL_TORCH = registerBlock("deepslate_lapis_ore_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_REDSTONE_ORE_REDSTONE_TORCH = registerBlock("deepslate_redstone_ore_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_REDSTONE_ORE_REDSTONE_WALL_TORCH = registerBlock("deepslate_redstone_ore_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_REDSTONE_ORE_SOUL_TORCH = registerBlock("deepslate_redstone_ore_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_REDSTONE_ORE_SOUL_WALL_TORCH = registerBlock("deepslate_redstone_ore_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_REDSTONE_ORE_TORCH = registerBlock("deepslate_redstone_ore_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_REDSTONE_ORE_WALL_TORCH = registerBlock("deepslate_redstone_ore_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_TILES_REDSTONE_TORCH = registerBlock("deepslate_tiles_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_TILES_REDSTONE_WALL_TORCH = registerBlock("deepslate_tiles_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_TILES_SOUL_TORCH = registerBlock("deepslate_tiles_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_TILES_SOUL_WALL_TORCH = registerBlock("deepslate_tiles_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_TILES_TORCH = registerBlock("deepslate_tiles_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> DEEPSLATE_TILES_WALL_TORCH = registerBlock("deepslate_tiles_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DIAMOND_BLOCK_REDSTONE_TORCH = registerBlock("diamond_block_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> DIAMOND_BLOCK_REDSTONE_WALL_TORCH = registerBlock("diamond_block_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DIAMOND_BLOCK_SOUL_TORCH = registerBlock("diamond_block_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> DIAMOND_BLOCK_SOUL_WALL_TORCH = registerBlock("diamond_block_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DIAMOND_BLOCK_TORCH = registerBlock("diamond_block_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> DIAMOND_BLOCK_WALL_TORCH = registerBlock("diamond_block_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DIAMOND_ORE_REDSTONE_TORCH = registerBlock("diamond_ore_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> DIAMOND_ORE_REDSTONE_WALL_TORCH = registerBlock("diamond_ore_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DIAMOND_ORE_SOUL_TORCH = registerBlock("diamond_ore_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> DIAMOND_ORE_SOUL_WALL_TORCH = registerBlock("diamond_ore_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DIAMOND_ORE_TORCH = registerBlock("diamond_ore_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> DIAMOND_ORE_WALL_TORCH = registerBlock("diamond_ore_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DIORITE_REDSTONE_TORCH = registerBlock("diorite_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> DIORITE_REDSTONE_WALL_TORCH = registerBlock("diorite_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DIORITE_SOUL_TORCH = registerBlock("diorite_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> DIORITE_SOUL_WALL_TORCH = registerBlock("diorite_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DIORITE_TORCH = registerBlock("diorite_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> DIORITE_WALL_TORCH = registerBlock("diorite_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DIRT_REDSTONE_TORCH = registerBlock("dirt_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> DIRT_REDSTONE_WALL_TORCH = registerBlock("dirt_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DIRT_SOUL_TORCH = registerBlock("dirt_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> DIRT_SOUL_WALL_TORCH = registerBlock("dirt_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DIRT_TORCH = registerBlock("dirt_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> DIRT_WALL_TORCH = registerBlock("dirt_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DRIED_KELP_BLOCK_REDSTONE_TORCH = registerBlock("dried_kelp_block_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> DRIED_KELP_BLOCK_REDSTONE_WALL_TORCH = registerBlock("dried_kelp_block_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DRIED_KELP_BLOCK_SOUL_TORCH = registerBlock("dried_kelp_block_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> DRIED_KELP_BLOCK_SOUL_WALL_TORCH = registerBlock("dried_kelp_block_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DRIED_KELP_BLOCK_TORCH = registerBlock("dried_kelp_block_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> DRIED_KELP_BLOCK_WALL_TORCH = registerBlock("dried_kelp_block_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DRIPSTONE_BLOCK_REDSTONE_TORCH = registerBlock("dripstone_block_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> DRIPSTONE_BLOCK_REDSTONE_WALL_TORCH = registerBlock("dripstone_block_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DRIPSTONE_BLOCK_SOUL_TORCH = registerBlock("dripstone_block_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> DRIPSTONE_BLOCK_SOUL_WALL_TORCH = registerBlock("dripstone_block_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> DRIPSTONE_BLOCK_TORCH = registerBlock("dripstone_block_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> DRIPSTONE_BLOCK_WALL_TORCH = registerBlock("dripstone_block_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> EMERALD_BLOCK_REDSTONE_TORCH = registerBlock("emerald_block_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> EMERALD_BLOCK_REDSTONE_WALL_TORCH = registerBlock("emerald_block_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> EMERALD_BLOCK_SOUL_TORCH = registerBlock("emerald_block_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> EMERALD_BLOCK_SOUL_WALL_TORCH = registerBlock("emerald_block_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> EMERALD_BLOCK_TORCH = registerBlock("emerald_block_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> EMERALD_BLOCK_WALL_TORCH = registerBlock("emerald_block_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> EMERALD_ORE_REDSTONE_TORCH = registerBlock("emerald_ore_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> EMERALD_ORE_REDSTONE_WALL_TORCH = registerBlock("emerald_ore_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> EMERALD_ORE_SOUL_TORCH = registerBlock("emerald_ore_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> EMERALD_ORE_SOUL_WALL_TORCH = registerBlock("emerald_ore_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> EMERALD_ORE_TORCH = registerBlock("emerald_ore_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> EMERALD_ORE_WALL_TORCH = registerBlock("emerald_ore_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> END_PORTAL_FRAME_REDSTONE_TORCH = registerBlock("end_portal_frame_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> END_PORTAL_FRAME_REDSTONE_WALL_TORCH = registerBlock("end_portal_frame_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> END_PORTAL_FRAME_SOUL_TORCH = registerBlock("end_portal_frame_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> END_PORTAL_FRAME_SOUL_WALL_TORCH = registerBlock("end_portal_frame_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> END_PORTAL_FRAME_TORCH = registerBlock("end_portal_frame_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> END_PORTAL_FRAME_WALL_TORCH = registerBlock("end_portal_frame_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> END_STONE_REDSTONE_TORCH = registerBlock("end_stone_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> END_STONE_REDSTONE_WALL_TORCH = registerBlock("end_stone_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> END_STONE_SOUL_TORCH = registerBlock("end_stone_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> END_STONE_SOUL_WALL_TORCH = registerBlock("end_stone_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> END_STONE_TORCH = registerBlock("end_stone_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> END_STONE_WALL_TORCH = registerBlock("end_stone_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> END_STONE_BRICKS_REDSTONE_TORCH = registerBlock("end_stone_bricks_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> END_STONE_BRICKS_REDSTONE_WALL_TORCH = registerBlock("end_stone_bricks_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> END_STONE_BRICKS_SOUL_TORCH = registerBlock("end_stone_bricks_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> END_STONE_BRICKS_SOUL_WALL_TORCH = registerBlock("end_stone_bricks_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> END_STONE_BRICKS_TORCH = registerBlock("end_stone_bricks_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> END_STONE_BRICKS_WALL_TORCH = registerBlock("end_stone_bricks_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> EXPOSED_COPPER_REDSTONE_TORCH = registerBlock("exposed_copper_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> EXPOSED_COPPER_REDSTONE_WALL_TORCH = registerBlock("exposed_copper_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> EXPOSED_COPPER_SOUL_TORCH = registerBlock("exposed_copper_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> EXPOSED_COPPER_SOUL_WALL_TORCH = registerBlock("exposed_copper_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> EXPOSED_COPPER_TORCH = registerBlock("exposed_copper_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> EXPOSED_COPPER_WALL_TORCH = registerBlock("exposed_copper_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> EXPOSED_CUT_COPPER_REDSTONE_TORCH = registerBlock("exposed_cut_copper_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> EXPOSED_CUT_COPPER_REDSTONE_WALL_TORCH = registerBlock("exposed_cut_copper_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> EXPOSED_CUT_COPPER_SOUL_TORCH = registerBlock("exposed_cut_copper_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> EXPOSED_CUT_COPPER_SOUL_WALL_TORCH = registerBlock("exposed_cut_copper_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> EXPOSED_CUT_COPPER_TORCH = registerBlock("exposed_cut_copper_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> EXPOSED_CUT_COPPER_WALL_TORCH = registerBlock("exposed_cut_copper_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> FIRE_CORAL_BLOCK_REDSTONE_TORCH = registerBlock("fire_coral_block_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> FIRE_CORAL_BLOCK_REDSTONE_WALL_TORCH = registerBlock("fire_coral_block_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> FIRE_CORAL_BLOCK_SOUL_TORCH = registerBlock("fire_coral_block_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> FIRE_CORAL_BLOCK_SOUL_WALL_TORCH = registerBlock("fire_coral_block_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> FIRE_CORAL_BLOCK_TORCH = registerBlock("fire_coral_block_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> FIRE_CORAL_BLOCK_WALL_TORCH = registerBlock("fire_coral_block_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> GILDED_BLACKSTONE_REDSTONE_TORCH = registerBlock("gilded_blackstone_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> GILDED_BLACKSTONE_REDSTONE_WALL_TORCH = registerBlock("gilded_blackstone_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> GILDED_BLACKSTONE_SOUL_TORCH = registerBlock("gilded_blackstone_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> GILDED_BLACKSTONE_SOUL_WALL_TORCH = registerBlock("gilded_blackstone_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> GILDED_BLACKSTONE_TORCH = registerBlock("gilded_blackstone_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> GILDED_BLACKSTONE_WALL_TORCH = registerBlock("gilded_blackstone_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> GLOWSTONE_REDSTONE_TORCH = registerBlock("glowstone_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> GLOWSTONE_REDSTONE_WALL_TORCH = registerBlock("glowstone_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> GLOWSTONE_SOUL_TORCH = registerBlock("glowstone_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> GLOWSTONE_SOUL_WALL_TORCH = registerBlock("glowstone_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> GLOWSTONE_TORCH = registerBlock("glowstone_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> GLOWSTONE_WALL_TORCH = registerBlock("glowstone_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> GOLD_BLOCK_REDSTONE_TORCH = registerBlock("gold_block_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> GOLD_BLOCK_REDSTONE_WALL_TORCH = registerBlock("gold_block_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> GOLD_BLOCK_SOUL_TORCH = registerBlock("gold_block_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> GOLD_BLOCK_SOUL_WALL_TORCH = registerBlock("gold_block_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> GOLD_BLOCK_TORCH = registerBlock("gold_block_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> GOLD_BLOCK_WALL_TORCH = registerBlock("gold_block_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> GOLD_ORE_REDSTONE_TORCH = registerBlock("gold_ore_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> GOLD_ORE_REDSTONE_WALL_TORCH = registerBlock("gold_ore_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> GOLD_ORE_SOUL_TORCH = registerBlock("gold_ore_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> GOLD_ORE_SOUL_WALL_TORCH = registerBlock("gold_ore_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> GOLD_ORE_TORCH = registerBlock("gold_ore_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> GOLD_ORE_WALL_TORCH = registerBlock("gold_ore_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> GRANITE_REDSTONE_TORCH = registerBlock("granite_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> GRANITE_REDSTONE_WALL_TORCH = registerBlock("granite_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> GRANITE_SOUL_TORCH = registerBlock("granite_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> GRANITE_SOUL_WALL_TORCH = registerBlock("granite_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> GRANITE_TORCH = registerBlock("granite_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> GRANITE_WALL_TORCH = registerBlock("granite_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> GRAVEL_REDSTONE_TORCH = registerBlock("gravel_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> GRAVEL_REDSTONE_WALL_TORCH = registerBlock("gravel_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> GRAVEL_SOUL_TORCH = registerBlock("gravel_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> GRAVEL_SOUL_WALL_TORCH = registerBlock("gravel_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> GRAVEL_TORCH = registerBlock("gravel_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> GRAVEL_WALL_TORCH = registerBlock("gravel_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> GRAY_TERRACOTTA_REDSTONE_TORCH = registerBlock("gray_terracotta_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> GRAY_TERRACOTTA_REDSTONE_WALL_TORCH = registerBlock("gray_terracotta_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> GRAY_TERRACOTTA_SOUL_TORCH = registerBlock("gray_terracotta_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> GRAY_TERRACOTTA_SOUL_WALL_TORCH = registerBlock("gray_terracotta_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> GRAY_TERRACOTTA_TORCH = registerBlock("gray_terracotta_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> GRAY_TERRACOTTA_WALL_TORCH = registerBlock("gray_terracotta_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> GRAY_WOOL_REDSTONE_TORCH = registerBlock("gray_wool_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> GRAY_WOOL_REDSTONE_WALL_TORCH = registerBlock("gray_wool_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> GRAY_WOOL_SOUL_TORCH = registerBlock("gray_wool_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> GRAY_WOOL_SOUL_WALL_TORCH = registerBlock("gray_wool_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> GRAY_WOOL_TORCH = registerBlock("gray_wool_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> GRAY_WOOL_WALL_TORCH = registerBlock("gray_wool_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> GREEN_TERRACOTTA_REDSTONE_TORCH = registerBlock("green_terracotta_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> GREEN_TERRACOTTA_REDSTONE_WALL_TORCH = registerBlock("green_terracotta_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> GREEN_TERRACOTTA_SOUL_TORCH = registerBlock("green_terracotta_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> GREEN_TERRACOTTA_SOUL_WALL_TORCH = registerBlock("green_terracotta_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> GREEN_TERRACOTTA_TORCH = registerBlock("green_terracotta_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> GREEN_TERRACOTTA_WALL_TORCH = registerBlock("green_terracotta_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> GREEN_WOOL_REDSTONE_TORCH = registerBlock("green_wool_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> GREEN_WOOL_REDSTONE_WALL_TORCH = registerBlock("green_wool_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> GREEN_WOOL_SOUL_TORCH = registerBlock("green_wool_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> GREEN_WOOL_SOUL_WALL_TORCH = registerBlock("green_wool_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> GREEN_WOOL_TORCH = registerBlock("green_wool_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> GREEN_WOOL_WALL_TORCH = registerBlock("green_wool_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> HAY_BLOCK_REDSTONE_TORCH = registerBlock("hay_block_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> HAY_BLOCK_REDSTONE_WALL_TORCH = registerBlock("hay_block_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> HAY_BLOCK_SOUL_TORCH = registerBlock("hay_block_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> HAY_BLOCK_SOUL_WALL_TORCH = registerBlock("hay_block_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> HAY_BLOCK_TORCH = registerBlock("hay_block_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> HAY_BLOCK_WALL_TORCH = registerBlock("hay_block_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> HONEYCOMB_BLOCK_REDSTONE_TORCH = registerBlock("honeycomb_block_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> HONEYCOMB_BLOCK_REDSTONE_WALL_TORCH = registerBlock("honeycomb_block_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> HONEYCOMB_BLOCK_SOUL_TORCH = registerBlock("honeycomb_block_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> HONEYCOMB_BLOCK_SOUL_WALL_TORCH = registerBlock("honeycomb_block_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> HONEYCOMB_BLOCK_TORCH = registerBlock("honeycomb_block_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> HONEYCOMB_BLOCK_WALL_TORCH = registerBlock("honeycomb_block_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> HONEY_BLOCK_REDSTONE_TORCH = registerBlock("honey_block_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> HONEY_BLOCK_REDSTONE_WALL_TORCH = registerBlock("honey_block_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> HONEY_BLOCK_SOUL_TORCH = registerBlock("honey_block_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> HONEY_BLOCK_SOUL_WALL_TORCH = registerBlock("honey_block_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> HONEY_BLOCK_TORCH = registerBlock("honey_block_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> HONEY_BLOCK_WALL_TORCH = registerBlock("honey_block_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> HORN_CORAL_BLOCK_REDSTONE_TORCH = registerBlock("horn_coral_block_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> HORN_CORAL_BLOCK_REDSTONE_WALL_TORCH = registerBlock("horn_coral_block_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> HORN_CORAL_BLOCK_SOUL_TORCH = registerBlock("horn_coral_block_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> HORN_CORAL_BLOCK_SOUL_WALL_TORCH = registerBlock("horn_coral_block_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> HORN_CORAL_BLOCK_TORCH = registerBlock("horn_coral_block_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> HORN_CORAL_BLOCK_WALL_TORCH = registerBlock("horn_coral_block_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> ICE_REDSTONE_TORCH = registerBlock("ice_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> ICE_REDSTONE_WALL_TORCH = registerBlock("ice_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> ICE_SOUL_TORCH = registerBlock("ice_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> ICE_SOUL_WALL_TORCH = registerBlock("ice_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> ICE_TORCH = registerBlock("ice_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> ICE_WALL_TORCH = registerBlock("ice_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> IRON_BARS_REDSTONE_TORCH = registerBlock("iron_bars_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> IRON_BARS_REDSTONE_WALL_TORCH = registerBlock("iron_bars_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> IRON_BARS_SOUL_TORCH = registerBlock("iron_bars_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> IRON_BARS_SOUL_WALL_TORCH = registerBlock("iron_bars_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> IRON_BARS_TORCH = registerBlock("iron_bars_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> IRON_BARS_WALL_TORCH = registerBlock("iron_bars_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> IRON_BLOCK_REDSTONE_TORCH = registerBlock("iron_block_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> IRON_BLOCK_REDSTONE_WALL_TORCH = registerBlock("iron_block_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> IRON_BLOCK_SOUL_TORCH = registerBlock("iron_block_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> IRON_BLOCK_SOUL_WALL_TORCH = registerBlock("iron_block_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> IRON_BLOCK_TORCH = registerBlock("iron_block_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> IRON_BLOCK_WALL_TORCH = registerBlock("iron_block_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> IRON_ORE_REDSTONE_TORCH = registerBlock("iron_ore_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> IRON_ORE_REDSTONE_WALL_TORCH = registerBlock("iron_ore_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> IRON_ORE_SOUL_TORCH = registerBlock("iron_ore_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> IRON_ORE_SOUL_WALL_TORCH = registerBlock("iron_ore_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> IRON_ORE_TORCH = registerBlock("iron_ore_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> IRON_ORE_WALL_TORCH = registerBlock("iron_ore_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> JUNGLE_LOG_REDSTONE_TORCH = registerBlock("jungle_log_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> JUNGLE_LOG_REDSTONE_WALL_TORCH = registerBlock("jungle_log_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> JUNGLE_LOG_SOUL_TORCH = registerBlock("jungle_log_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> JUNGLE_LOG_SOUL_WALL_TORCH = registerBlock("jungle_log_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> JUNGLE_LOG_TORCH = registerBlock("jungle_log_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> JUNGLE_LOG_WALL_TORCH = registerBlock("jungle_log_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> JUNGLE_PLANKS_REDSTONE_TORCH = registerBlock("jungle_planks_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> JUNGLE_PLANKS_REDSTONE_WALL_TORCH = registerBlock("jungle_planks_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> JUNGLE_PLANKS_SOUL_TORCH = registerBlock("jungle_planks_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> JUNGLE_PLANKS_SOUL_WALL_TORCH = registerBlock("jungle_planks_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> JUNGLE_PLANKS_TORCH = registerBlock("jungle_planks_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> JUNGLE_PLANKS_WALL_TORCH = registerBlock("jungle_planks_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> LAPIS_BLOCK_REDSTONE_TORCH = registerBlock("lapis_block_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> LAPIS_BLOCK_REDSTONE_WALL_TORCH = registerBlock("lapis_block_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> LAPIS_BLOCK_SOUL_TORCH = registerBlock("lapis_block_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> LAPIS_BLOCK_SOUL_WALL_TORCH = registerBlock("lapis_block_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> LAPIS_BLOCK_TORCH = registerBlock("lapis_block_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> LAPIS_BLOCK_WALL_TORCH = registerBlock("lapis_block_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> LAPIS_ORE_REDSTONE_TORCH = registerBlock("lapis_ore_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> LAPIS_ORE_REDSTONE_WALL_TORCH = registerBlock("lapis_ore_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> LAPIS_ORE_SOUL_TORCH = registerBlock("lapis_ore_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> LAPIS_ORE_SOUL_WALL_TORCH = registerBlock("lapis_ore_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> LAPIS_ORE_TORCH = registerBlock("lapis_ore_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> LAPIS_ORE_WALL_TORCH = registerBlock("lapis_ore_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> LIGHT_BLUE_TERRACOTTA_REDSTONE_TORCH = registerBlock("light_blue_terracotta_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> LIGHT_BLUE_TERRACOTTA_REDSTONE_WALL_TORCH = registerBlock("light_blue_terracotta_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> LIGHT_BLUE_TERRACOTTA_SOUL_TORCH = registerBlock("light_blue_terracotta_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> LIGHT_BLUE_TERRACOTTA_SOUL_WALL_TORCH = registerBlock("light_blue_terracotta_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> LIGHT_BLUE_TERRACOTTA_TORCH = registerBlock("light_blue_terracotta_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> LIGHT_BLUE_TERRACOTTA_WALL_TORCH = registerBlock("light_blue_terracotta_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> LIGHT_BLUE_WOOL_REDSTONE_TORCH = registerBlock("light_blue_wool_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> LIGHT_BLUE_WOOL_REDSTONE_WALL_TORCH = registerBlock("light_blue_wool_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> LIGHT_BLUE_WOOL_SOUL_TORCH = registerBlock("light_blue_wool_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> LIGHT_BLUE_WOOL_SOUL_WALL_TORCH = registerBlock("light_blue_wool_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> LIGHT_BLUE_WOOL_TORCH = registerBlock("light_blue_wool_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> LIGHT_BLUE_WOOL_WALL_TORCH = registerBlock("light_blue_wool_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> LIGHT_GRAY_TERRACOTTA_REDSTONE_TORCH = registerBlock("light_gray_terracotta_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> LIGHT_GRAY_TERRACOTTA_REDSTONE_WALL_TORCH = registerBlock("light_gray_terracotta_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> LIGHT_GRAY_TERRACOTTA_SOUL_TORCH = registerBlock("light_gray_terracotta_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> LIGHT_GRAY_TERRACOTTA_SOUL_WALL_TORCH = registerBlock("light_gray_terracotta_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> LIGHT_GRAY_TERRACOTTA_TORCH = registerBlock("light_gray_terracotta_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> LIGHT_GRAY_TERRACOTTA_WALL_TORCH = registerBlock("light_gray_terracotta_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> LIGHT_GRAY_WOOL_REDSTONE_TORCH = registerBlock("light_gray_wool_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> LIGHT_GRAY_WOOL_REDSTONE_WALL_TORCH = registerBlock("light_gray_wool_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> LIGHT_GRAY_WOOL_SOUL_TORCH = registerBlock("light_gray_wool_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> LIGHT_GRAY_WOOL_SOUL_WALL_TORCH = registerBlock("light_gray_wool_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> LIGHT_GRAY_WOOL_TORCH = registerBlock("light_gray_wool_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> LIGHT_GRAY_WOOL_WALL_TORCH = registerBlock("light_gray_wool_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> LIME_TERRACOTTA_REDSTONE_TORCH = registerBlock("lime_terracotta_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> LIME_TERRACOTTA_REDSTONE_WALL_TORCH = registerBlock("lime_terracotta_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> LIME_TERRACOTTA_SOUL_TORCH = registerBlock("lime_terracotta_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> LIME_TERRACOTTA_SOUL_WALL_TORCH = registerBlock("lime_terracotta_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> LIME_TERRACOTTA_TORCH = registerBlock("lime_terracotta_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> LIME_TERRACOTTA_WALL_TORCH = registerBlock("lime_terracotta_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> LIME_WOOL_REDSTONE_TORCH = registerBlock("lime_wool_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> LIME_WOOL_REDSTONE_WALL_TORCH = registerBlock("lime_wool_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> LIME_WOOL_SOUL_TORCH = registerBlock("lime_wool_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> LIME_WOOL_SOUL_WALL_TORCH = registerBlock("lime_wool_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> LIME_WOOL_TORCH = registerBlock("lime_wool_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> LIME_WOOL_WALL_TORCH = registerBlock("lime_wool_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> LODESTONE_REDSTONE_TORCH = registerBlock("lodestone_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> LODESTONE_REDSTONE_WALL_TORCH = registerBlock("lodestone_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> LODESTONE_SOUL_TORCH = registerBlock("lodestone_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> LODESTONE_SOUL_WALL_TORCH = registerBlock("lodestone_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> LODESTONE_TORCH = registerBlock("lodestone_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> LODESTONE_WALL_TORCH = registerBlock("lodestone_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> MAGENTA_TERRACOTTA_REDSTONE_TORCH = registerBlock("magenta_terracotta_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> MAGENTA_TERRACOTTA_REDSTONE_WALL_TORCH = registerBlock("magenta_terracotta_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> MAGENTA_TERRACOTTA_SOUL_TORCH = registerBlock("magenta_terracotta_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> MAGENTA_TERRACOTTA_SOUL_WALL_TORCH = registerBlock("magenta_terracotta_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> MAGENTA_TERRACOTTA_TORCH = registerBlock("magenta_terracotta_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> MAGENTA_TERRACOTTA_WALL_TORCH = registerBlock("magenta_terracotta_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> MAGENTA_WOOL_REDSTONE_TORCH = registerBlock("magenta_wool_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> MAGENTA_WOOL_REDSTONE_WALL_TORCH = registerBlock("magenta_wool_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> MAGENTA_WOOL_SOUL_TORCH = registerBlock("magenta_wool_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> MAGENTA_WOOL_SOUL_WALL_TORCH = registerBlock("magenta_wool_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> MAGENTA_WOOL_TORCH = registerBlock("magenta_wool_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> MAGENTA_WOOL_WALL_TORCH = registerBlock("magenta_wool_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> MAGMA_BLOCK_REDSTONE_TORCH = registerBlock("magma_block_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> MAGMA_BLOCK_REDSTONE_WALL_TORCH = registerBlock("magma_block_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> MAGMA_BLOCK_SOUL_TORCH = registerBlock("magma_block_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> MAGMA_BLOCK_SOUL_WALL_TORCH = registerBlock("magma_block_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> MAGMA_BLOCK_TORCH = registerBlock("magma_block_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> MAGMA_BLOCK_WALL_TORCH = registerBlock("magma_block_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> MANGROVE_LOG_REDSTONE_TORCH = registerBlock("mangrove_log_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> MANGROVE_LOG_REDSTONE_WALL_TORCH = registerBlock("mangrove_log_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> MANGROVE_LOG_SOUL_TORCH = registerBlock("mangrove_log_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> MANGROVE_LOG_SOUL_WALL_TORCH = registerBlock("mangrove_log_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> MANGROVE_LOG_TORCH = registerBlock("mangrove_log_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> MANGROVE_LOG_WALL_TORCH = registerBlock("mangrove_log_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> MANGROVE_PLANKS_REDSTONE_TORCH = registerBlock("mangrove_planks_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> MANGROVE_PLANKS_REDSTONE_WALL_TORCH = registerBlock("mangrove_planks_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> MANGROVE_PLANKS_SOUL_TORCH = registerBlock("mangrove_planks_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> MANGROVE_PLANKS_SOUL_WALL_TORCH = registerBlock("mangrove_planks_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> MANGROVE_PLANKS_TORCH = registerBlock("mangrove_planks_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> MANGROVE_PLANKS_WALL_TORCH = registerBlock("mangrove_planks_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> MELON_REDSTONE_TORCH = registerBlock("melon_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> MELON_REDSTONE_WALL_TORCH = registerBlock("melon_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> MELON_SOUL_TORCH = registerBlock("melon_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> MELON_SOUL_WALL_TORCH = registerBlock("melon_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> MELON_TORCH = registerBlock("melon_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> MELON_WALL_TORCH = registerBlock("melon_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> MOSSY_COBBLESTONE_REDSTONE_TORCH = registerBlock("mossy_cobblestone_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> MOSSY_COBBLESTONE_REDSTONE_WALL_TORCH = registerBlock("mossy_cobblestone_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> MOSSY_COBBLESTONE_SOUL_TORCH = registerBlock("mossy_cobblestone_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> MOSSY_COBBLESTONE_SOUL_WALL_TORCH = registerBlock("mossy_cobblestone_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> MOSSY_COBBLESTONE_TORCH = registerBlock("mossy_cobblestone_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> MOSSY_COBBLESTONE_WALL_TORCH = registerBlock("mossy_cobblestone_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> MOSSY_STONE_BRICKS_REDSTONE_TORCH = registerBlock("mossy_stone_bricks_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> MOSSY_STONE_BRICKS_REDSTONE_WALL_TORCH = registerBlock("mossy_stone_bricks_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> MOSSY_STONE_BRICKS_SOUL_TORCH = registerBlock("mossy_stone_bricks_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> MOSSY_STONE_BRICKS_SOUL_WALL_TORCH = registerBlock("mossy_stone_bricks_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> MOSSY_STONE_BRICKS_TORCH = registerBlock("mossy_stone_bricks_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> MOSSY_STONE_BRICKS_WALL_TORCH = registerBlock("mossy_stone_bricks_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> MOSS_BLOCK_REDSTONE_TORCH = registerBlock("moss_block_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> MOSS_BLOCK_REDSTONE_WALL_TORCH = registerBlock("moss_block_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> MOSS_BLOCK_SOUL_TORCH = registerBlock("moss_block_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> MOSS_BLOCK_SOUL_WALL_TORCH = registerBlock("moss_block_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> MOSS_BLOCK_TORCH = registerBlock("moss_block_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> MOSS_BLOCK_WALL_TORCH = registerBlock("moss_block_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> MUD_REDSTONE_TORCH = registerBlock("mud_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> MUD_REDSTONE_WALL_TORCH = registerBlock("mud_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> MUD_SOUL_TORCH = registerBlock("mud_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> MUD_SOUL_WALL_TORCH = registerBlock("mud_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> MUD_TORCH = registerBlock("mud_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> MUD_WALL_TORCH = registerBlock("mud_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> MUDDY_MANGROVE_ROOTS_REDSTONE_TORCH = registerBlock("muddy_mangrove_roots_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> MUDDY_MANGROVE_ROOTS_REDSTONE_WALL_TORCH = registerBlock("muddy_mangrove_roots_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> MUDDY_MANGROVE_ROOTS_SOUL_TORCH = registerBlock("muddy_mangrove_roots_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> MUDDY_MANGROVE_ROOTS_SOUL_WALL_TORCH = registerBlock("muddy_mangrove_roots_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> MUDDY_MANGROVE_ROOTS_TORCH = registerBlock("muddy_mangrove_roots_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> MUDDY_MANGROVE_ROOTS_WALL_TORCH = registerBlock("muddy_mangrove_roots_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> MUD_BRICKS_REDSTONE_TORCH = registerBlock("mud_bricks_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> MUD_BRICKS_REDSTONE_WALL_TORCH = registerBlock("mud_bricks_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> MUD_BRICKS_SOUL_TORCH = registerBlock("mud_bricks_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> MUD_BRICKS_SOUL_WALL_TORCH = registerBlock("mud_bricks_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> MUD_BRICKS_TORCH = registerBlock("mud_bricks_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> MUD_BRICKS_WALL_TORCH = registerBlock("mud_bricks_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> MUSHROOM_STEM_REDSTONE_TORCH = registerBlock("mushroom_stem_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> MUSHROOM_STEM_REDSTONE_WALL_TORCH = registerBlock("mushroom_stem_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> MUSHROOM_STEM_SOUL_TORCH = registerBlock("mushroom_stem_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> MUSHROOM_STEM_SOUL_WALL_TORCH = registerBlock("mushroom_stem_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> MUSHROOM_STEM_TORCH = registerBlock("mushroom_stem_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> MUSHROOM_STEM_WALL_TORCH = registerBlock("mushroom_stem_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> MYCELIUM_REDSTONE_TORCH = registerBlock("mycelium_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> MYCELIUM_REDSTONE_WALL_TORCH = registerBlock("mycelium_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> MYCELIUM_SOUL_TORCH = registerBlock("mycelium_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> MYCELIUM_SOUL_WALL_TORCH = registerBlock("mycelium_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> MYCELIUM_TORCH = registerBlock("mycelium_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> MYCELIUM_WALL_TORCH = registerBlock("mycelium_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> NETHERITE_BLOCK_REDSTONE_TORCH = registerBlock("netherite_block_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> NETHERITE_BLOCK_REDSTONE_WALL_TORCH = registerBlock("netherite_block_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> NETHERITE_BLOCK_SOUL_TORCH = registerBlock("netherite_block_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> NETHERITE_BLOCK_SOUL_WALL_TORCH = registerBlock("netherite_block_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> NETHERITE_BLOCK_TORCH = registerBlock("netherite_block_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> NETHERITE_BLOCK_WALL_TORCH = registerBlock("netherite_block_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> NETHERRACK_REDSTONE_TORCH = registerBlock("netherrack_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> NETHERRACK_REDSTONE_WALL_TORCH = registerBlock("netherrack_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> NETHERRACK_SOUL_TORCH = registerBlock("netherrack_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> NETHERRACK_SOUL_WALL_TORCH = registerBlock("netherrack_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> NETHERRACK_TORCH = registerBlock("netherrack_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> NETHERRACK_WALL_TORCH = registerBlock("netherrack_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> NETHER_BRICKS_REDSTONE_TORCH = registerBlock("nether_bricks_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> NETHER_BRICKS_REDSTONE_WALL_TORCH = registerBlock("nether_bricks_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> NETHER_BRICKS_SOUL_TORCH = registerBlock("nether_bricks_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> NETHER_BRICKS_SOUL_WALL_TORCH = registerBlock("nether_bricks_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> NETHER_BRICKS_TORCH = registerBlock("nether_bricks_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> NETHER_BRICKS_WALL_TORCH = registerBlock("nether_bricks_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> NETHER_GOLD_ORE_REDSTONE_TORCH = registerBlock("nether_gold_ore_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> NETHER_GOLD_ORE_REDSTONE_WALL_TORCH = registerBlock("nether_gold_ore_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> NETHER_GOLD_ORE_SOUL_TORCH = registerBlock("nether_gold_ore_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> NETHER_GOLD_ORE_SOUL_WALL_TORCH = registerBlock("nether_gold_ore_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> NETHER_GOLD_ORE_TORCH = registerBlock("nether_gold_ore_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> NETHER_GOLD_ORE_WALL_TORCH = registerBlock("nether_gold_ore_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> NETHER_QUARTZ_ORE_REDSTONE_TORCH = registerBlock("nether_quartz_ore_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> NETHER_QUARTZ_ORE_REDSTONE_WALL_TORCH = registerBlock("nether_quartz_ore_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> NETHER_QUARTZ_ORE_SOUL_TORCH = registerBlock("nether_quartz_ore_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> NETHER_QUARTZ_ORE_SOUL_WALL_TORCH = registerBlock("nether_quartz_ore_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> NETHER_QUARTZ_ORE_TORCH = registerBlock("nether_quartz_ore_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> NETHER_QUARTZ_ORE_WALL_TORCH = registerBlock("nether_quartz_ore_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> NETHER_WART_BLOCK_REDSTONE_TORCH = registerBlock("nether_wart_block_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> NETHER_WART_BLOCK_REDSTONE_WALL_TORCH = registerBlock("nether_wart_block_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> NETHER_WART_BLOCK_SOUL_TORCH = registerBlock("nether_wart_block_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> NETHER_WART_BLOCK_SOUL_WALL_TORCH = registerBlock("nether_wart_block_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> NETHER_WART_BLOCK_TORCH = registerBlock("nether_wart_block_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> NETHER_WART_BLOCK_WALL_TORCH = registerBlock("nether_wart_block_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> OAK_LOG_REDSTONE_TORCH = registerBlock("oak_log_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> OAK_LOG_REDSTONE_WALL_TORCH = registerBlock("oak_log_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> OAK_LOG_SOUL_TORCH = registerBlock("oak_log_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> OAK_LOG_SOUL_WALL_TORCH = registerBlock("oak_log_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> OAK_LOG_TORCH = registerBlock("oak_log_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> OAK_LOG_WALL_TORCH = registerBlock("oak_log_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> OAK_PLANKS_REDSTONE_TORCH = registerBlock("oak_planks_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> OAK_PLANKS_REDSTONE_WALL_TORCH = registerBlock("oak_planks_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> OAK_PLANKS_SOUL_TORCH = registerBlock("oak_planks_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> OAK_PLANKS_SOUL_WALL_TORCH = registerBlock("oak_planks_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> OAK_PLANKS_TORCH = registerBlock("oak_planks_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> OAK_PLANKS_WALL_TORCH = registerBlock("oak_planks_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> OBSIDIAN_REDSTONE_TORCH = registerBlock("obsidian_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> OBSIDIAN_REDSTONE_WALL_TORCH = registerBlock("obsidian_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> OBSIDIAN_SOUL_TORCH = registerBlock("obsidian_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> OBSIDIAN_SOUL_WALL_TORCH = registerBlock("obsidian_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> OBSIDIAN_TORCH = registerBlock("obsidian_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> OBSIDIAN_WALL_TORCH = registerBlock("obsidian_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> OCHRE_FROGLIGHT_REDSTONE_TORCH = registerBlock("ochre_froglight_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> OCHRE_FROGLIGHT_REDSTONE_WALL_TORCH = registerBlock("ochre_froglight_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> OCHRE_FROGLIGHT_SOUL_TORCH = registerBlock("ochre_froglight_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> OCHRE_FROGLIGHT_SOUL_WALL_TORCH = registerBlock("ochre_froglight_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> OCHRE_FROGLIGHT_TORCH = registerBlock("ochre_froglight_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> OCHRE_FROGLIGHT_WALL_TORCH = registerBlock("ochre_froglight_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> ORANGE_TERRACOTTA_REDSTONE_TORCH = registerBlock("orange_terracotta_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> ORANGE_TERRACOTTA_REDSTONE_WALL_TORCH = registerBlock("orange_terracotta_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> ORANGE_TERRACOTTA_SOUL_TORCH = registerBlock("orange_terracotta_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> ORANGE_TERRACOTTA_SOUL_WALL_TORCH = registerBlock("orange_terracotta_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> ORANGE_TERRACOTTA_TORCH = registerBlock("orange_terracotta_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> ORANGE_TERRACOTTA_WALL_TORCH = registerBlock("orange_terracotta_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> ORANGE_WOOL_REDSTONE_TORCH = registerBlock("orange_wool_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> ORANGE_WOOL_REDSTONE_WALL_TORCH = registerBlock("orange_wool_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> ORANGE_WOOL_SOUL_TORCH = registerBlock("orange_wool_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> ORANGE_WOOL_SOUL_WALL_TORCH = registerBlock("orange_wool_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> ORANGE_WOOL_TORCH = registerBlock("orange_wool_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> ORANGE_WOOL_WALL_TORCH = registerBlock("orange_wool_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> OXIDIZED_COPPER_REDSTONE_TORCH = registerBlock("oxidized_copper_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> OXIDIZED_COPPER_REDSTONE_WALL_TORCH = registerBlock("oxidized_copper_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> OXIDIZED_COPPER_SOUL_TORCH = registerBlock("oxidized_copper_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> OXIDIZED_COPPER_SOUL_WALL_TORCH = registerBlock("oxidized_copper_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> OXIDIZED_COPPER_TORCH = registerBlock("oxidized_copper_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> OXIDIZED_COPPER_WALL_TORCH = registerBlock("oxidized_copper_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> OXIDIZED_CUT_COPPER_REDSTONE_TORCH = registerBlock("oxidized_cut_copper_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> OXIDIZED_CUT_COPPER_REDSTONE_WALL_TORCH = registerBlock("oxidized_cut_copper_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> OXIDIZED_CUT_COPPER_SOUL_TORCH = registerBlock("oxidized_cut_copper_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> OXIDIZED_CUT_COPPER_SOUL_WALL_TORCH = registerBlock("oxidized_cut_copper_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> OXIDIZED_CUT_COPPER_TORCH = registerBlock("oxidized_cut_copper_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> OXIDIZED_CUT_COPPER_WALL_TORCH = registerBlock("oxidized_cut_copper_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> PACKED_ICE_REDSTONE_TORCH = registerBlock("packed_ice_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> PACKED_ICE_REDSTONE_WALL_TORCH = registerBlock("packed_ice_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> PACKED_ICE_SOUL_TORCH = registerBlock("packed_ice_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> PACKED_ICE_SOUL_WALL_TORCH = registerBlock("packed_ice_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> PACKED_ICE_TORCH = registerBlock("packed_ice_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> PACKED_ICE_WALL_TORCH = registerBlock("packed_ice_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> PACKED_MUD_REDSTONE_TORCH = registerBlock("packed_mud_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> PACKED_MUD_REDSTONE_WALL_TORCH = registerBlock("packed_mud_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> PACKED_MUD_SOUL_TORCH = registerBlock("packed_mud_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> PACKED_MUD_SOUL_WALL_TORCH = registerBlock("packed_mud_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> PACKED_MUD_TORCH = registerBlock("packed_mud_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> PACKED_MUD_WALL_TORCH = registerBlock("packed_mud_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> PEARLESCENT_FROGLIGHT_REDSTONE_TORCH = registerBlock("pearlescent_froglight_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> PEARLESCENT_FROGLIGHT_REDSTONE_WALL_TORCH = registerBlock("pearlescent_froglight_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> PEARLESCENT_FROGLIGHT_SOUL_TORCH = registerBlock("pearlescent_froglight_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> PEARLESCENT_FROGLIGHT_SOUL_WALL_TORCH = registerBlock("pearlescent_froglight_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> PEARLESCENT_FROGLIGHT_TORCH = registerBlock("pearlescent_froglight_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> PEARLESCENT_FROGLIGHT_WALL_TORCH = registerBlock("pearlescent_froglight_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> PINK_TERRACOTTA_REDSTONE_TORCH = registerBlock("pink_terracotta_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> PINK_TERRACOTTA_REDSTONE_WALL_TORCH = registerBlock("pink_terracotta_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> PINK_TERRACOTTA_SOUL_TORCH = registerBlock("pink_terracotta_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> PINK_TERRACOTTA_SOUL_WALL_TORCH = registerBlock("pink_terracotta_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> PINK_TERRACOTTA_TORCH = registerBlock("pink_terracotta_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> PINK_TERRACOTTA_WALL_TORCH = registerBlock("pink_terracotta_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> PINK_WOOL_REDSTONE_TORCH = registerBlock("pink_wool_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> PINK_WOOL_REDSTONE_WALL_TORCH = registerBlock("pink_wool_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> PINK_WOOL_SOUL_TORCH = registerBlock("pink_wool_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> PINK_WOOL_SOUL_WALL_TORCH = registerBlock("pink_wool_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> PINK_WOOL_TORCH = registerBlock("pink_wool_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> PINK_WOOL_WALL_TORCH = registerBlock("pink_wool_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> POLISHED_ANDESITE_REDSTONE_TORCH = registerBlock("polished_andesite_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> POLISHED_ANDESITE_REDSTONE_WALL_TORCH = registerBlock("polished_andesite_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> POLISHED_ANDESITE_SOUL_TORCH = registerBlock("polished_andesite_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> POLISHED_ANDESITE_SOUL_WALL_TORCH = registerBlock("polished_andesite_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> POLISHED_ANDESITE_TORCH = registerBlock("polished_andesite_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> POLISHED_ANDESITE_WALL_TORCH = registerBlock("polished_andesite_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> POLISHED_BASALT_REDSTONE_TORCH = registerBlock("polished_basalt_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> POLISHED_BASALT_REDSTONE_WALL_TORCH = registerBlock("polished_basalt_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> POLISHED_BASALT_SOUL_TORCH = registerBlock("polished_basalt_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> POLISHED_BASALT_SOUL_WALL_TORCH = registerBlock("polished_basalt_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> POLISHED_BASALT_TORCH = registerBlock("polished_basalt_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> POLISHED_BASALT_WALL_TORCH = registerBlock("polished_basalt_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> POLISHED_BLACKSTONE_REDSTONE_TORCH = registerBlock("polished_blackstone_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> POLISHED_BLACKSTONE_REDSTONE_WALL_TORCH = registerBlock("polished_blackstone_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> POLISHED_BLACKSTONE_SOUL_TORCH = registerBlock("polished_blackstone_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> POLISHED_BLACKSTONE_SOUL_WALL_TORCH = registerBlock("polished_blackstone_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> POLISHED_BLACKSTONE_TORCH = registerBlock("polished_blackstone_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> POLISHED_BLACKSTONE_WALL_TORCH = registerBlock("polished_blackstone_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> POLISHED_BLACKSTONE_BRICKS_REDSTONE_TORCH = registerBlock("polished_blackstone_bricks_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> POLISHED_BLACKSTONE_BRICKS_REDSTONE_WALL_TORCH = registerBlock("polished_blackstone_bricks_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> POLISHED_BLACKSTONE_BRICKS_SOUL_TORCH = registerBlock("polished_blackstone_bricks_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> POLISHED_BLACKSTONE_BRICKS_SOUL_WALL_TORCH = registerBlock("polished_blackstone_bricks_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> POLISHED_BLACKSTONE_BRICKS_TORCH = registerBlock("polished_blackstone_bricks_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> POLISHED_BLACKSTONE_BRICKS_WALL_TORCH = registerBlock("polished_blackstone_bricks_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> POLISHED_DEEPSLATE_REDSTONE_TORCH = registerBlock("polished_deepslate_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> POLISHED_DEEPSLATE_REDSTONE_WALL_TORCH = registerBlock("polished_deepslate_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> POLISHED_DEEPSLATE_SOUL_TORCH = registerBlock("polished_deepslate_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> POLISHED_DEEPSLATE_SOUL_WALL_TORCH = registerBlock("polished_deepslate_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> POLISHED_DEEPSLATE_TORCH = registerBlock("polished_deepslate_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> POLISHED_DEEPSLATE_WALL_TORCH = registerBlock("polished_deepslate_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> POLISHED_DIORITE_REDSTONE_TORCH = registerBlock("polished_diorite_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> POLISHED_DIORITE_REDSTONE_WALL_TORCH = registerBlock("polished_diorite_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> POLISHED_DIORITE_SOUL_TORCH = registerBlock("polished_diorite_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> POLISHED_DIORITE_SOUL_WALL_TORCH = registerBlock("polished_diorite_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> POLISHED_DIORITE_TORCH = registerBlock("polished_diorite_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> POLISHED_DIORITE_WALL_TORCH = registerBlock("polished_diorite_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> POLISHED_GRANITE_REDSTONE_TORCH = registerBlock("polished_granite_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> POLISHED_GRANITE_REDSTONE_WALL_TORCH = registerBlock("polished_granite_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> POLISHED_GRANITE_SOUL_TORCH = registerBlock("polished_granite_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> POLISHED_GRANITE_SOUL_WALL_TORCH = registerBlock("polished_granite_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> POLISHED_GRANITE_TORCH = registerBlock("polished_granite_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> POLISHED_GRANITE_WALL_TORCH = registerBlock("polished_granite_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> PRISMARINE_BRICKS_REDSTONE_TORCH = registerBlock("prismarine_bricks_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> PRISMARINE_BRICKS_REDSTONE_WALL_TORCH = registerBlock("prismarine_bricks_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> PRISMARINE_BRICKS_SOUL_TORCH = registerBlock("prismarine_bricks_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> PRISMARINE_BRICKS_SOUL_WALL_TORCH = registerBlock("prismarine_bricks_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> PRISMARINE_BRICKS_TORCH = registerBlock("prismarine_bricks_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> PRISMARINE_BRICKS_WALL_TORCH = registerBlock("prismarine_bricks_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> PUMPKIN_REDSTONE_TORCH = registerBlock("pumpkin_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> PUMPKIN_REDSTONE_WALL_TORCH = registerBlock("pumpkin_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> PUMPKIN_SOUL_TORCH = registerBlock("pumpkin_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> PUMPKIN_SOUL_WALL_TORCH = registerBlock("pumpkin_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> PUMPKIN_TORCH = registerBlock("pumpkin_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> PUMPKIN_WALL_TORCH = registerBlock("pumpkin_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> PURPLE_TERRACOTTA_REDSTONE_TORCH = registerBlock("purple_terracotta_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> PURPLE_TERRACOTTA_REDSTONE_WALL_TORCH = registerBlock("purple_terracotta_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> PURPLE_TERRACOTTA_SOUL_TORCH = registerBlock("purple_terracotta_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> PURPLE_TERRACOTTA_SOUL_WALL_TORCH = registerBlock("purple_terracotta_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> PURPLE_TERRACOTTA_TORCH = registerBlock("purple_terracotta_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> PURPLE_TERRACOTTA_WALL_TORCH = registerBlock("purple_terracotta_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> PURPLE_WOOL_REDSTONE_TORCH = registerBlock("purple_wool_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> PURPLE_WOOL_REDSTONE_WALL_TORCH = registerBlock("purple_wool_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> PURPLE_WOOL_SOUL_TORCH = registerBlock("purple_wool_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> PURPLE_WOOL_SOUL_WALL_TORCH = registerBlock("purple_wool_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> PURPLE_WOOL_TORCH = registerBlock("purple_wool_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> PURPLE_WOOL_WALL_TORCH = registerBlock("purple_wool_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> PURPUR_BLOCK_REDSTONE_TORCH = registerBlock("purpur_block_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> PURPUR_BLOCK_REDSTONE_WALL_TORCH = registerBlock("purpur_block_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> PURPUR_BLOCK_SOUL_TORCH = registerBlock("purpur_block_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> PURPUR_BLOCK_SOUL_WALL_TORCH = registerBlock("purpur_block_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> PURPUR_BLOCK_TORCH = registerBlock("purpur_block_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> PURPUR_BLOCK_WALL_TORCH = registerBlock("purpur_block_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> PURPUR_PILLAR_REDSTONE_TORCH = registerBlock("purpur_pillar_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> PURPUR_PILLAR_REDSTONE_WALL_TORCH = registerBlock("purpur_pillar_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> PURPUR_PILLAR_SOUL_TORCH = registerBlock("purpur_pillar_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> PURPUR_PILLAR_SOUL_WALL_TORCH = registerBlock("purpur_pillar_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> PURPUR_PILLAR_TORCH = registerBlock("purpur_pillar_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> PURPUR_PILLAR_WALL_TORCH = registerBlock("purpur_pillar_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> QUARTZ_BLOCK_REDSTONE_TORCH = registerBlock("quartz_block_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> QUARTZ_BLOCK_REDSTONE_WALL_TORCH = registerBlock("quartz_block_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> QUARTZ_BLOCK_SOUL_TORCH = registerBlock("quartz_block_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> QUARTZ_BLOCK_SOUL_WALL_TORCH = registerBlock("quartz_block_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> QUARTZ_BLOCK_TORCH = registerBlock("quartz_block_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> QUARTZ_BLOCK_WALL_TORCH = registerBlock("quartz_block_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> QUARTZ_BRICKS_REDSTONE_TORCH = registerBlock("quartz_bricks_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> QUARTZ_BRICKS_REDSTONE_WALL_TORCH = registerBlock("quartz_bricks_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> QUARTZ_BRICKS_SOUL_TORCH = registerBlock("quartz_bricks_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> QUARTZ_BRICKS_SOUL_WALL_TORCH = registerBlock("quartz_bricks_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> QUARTZ_BRICKS_TORCH = registerBlock("quartz_bricks_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> QUARTZ_BRICKS_WALL_TORCH = registerBlock("quartz_bricks_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> QUARTZ_PILLAR_REDSTONE_TORCH = registerBlock("quartz_pillar_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> QUARTZ_PILLAR_REDSTONE_WALL_TORCH = registerBlock("quartz_pillar_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> QUARTZ_PILLAR_SOUL_TORCH = registerBlock("quartz_pillar_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> QUARTZ_PILLAR_SOUL_WALL_TORCH = registerBlock("quartz_pillar_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> QUARTZ_PILLAR_TORCH = registerBlock("quartz_pillar_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> QUARTZ_PILLAR_WALL_TORCH = registerBlock("quartz_pillar_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> RAW_COPPER_BLOCK_REDSTONE_TORCH = registerBlock("raw_copper_block_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> RAW_COPPER_BLOCK_REDSTONE_WALL_TORCH = registerBlock("raw_copper_block_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> RAW_COPPER_BLOCK_SOUL_TORCH = registerBlock("raw_copper_block_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> RAW_COPPER_BLOCK_SOUL_WALL_TORCH = registerBlock("raw_copper_block_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> RAW_COPPER_BLOCK_TORCH = registerBlock("raw_copper_block_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> RAW_COPPER_BLOCK_WALL_TORCH = registerBlock("raw_copper_block_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> RAW_GOLD_BLOCK_REDSTONE_TORCH = registerBlock("raw_gold_block_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> RAW_GOLD_BLOCK_REDSTONE_WALL_TORCH = registerBlock("raw_gold_block_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> RAW_GOLD_BLOCK_SOUL_TORCH = registerBlock("raw_gold_block_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> RAW_GOLD_BLOCK_SOUL_WALL_TORCH = registerBlock("raw_gold_block_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> RAW_GOLD_BLOCK_TORCH = registerBlock("raw_gold_block_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> RAW_GOLD_BLOCK_WALL_TORCH = registerBlock("raw_gold_block_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> RAW_IRON_BLOCK_REDSTONE_TORCH = registerBlock("raw_iron_block_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> RAW_IRON_BLOCK_REDSTONE_WALL_TORCH = registerBlock("raw_iron_block_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> RAW_IRON_BLOCK_SOUL_TORCH = registerBlock("raw_iron_block_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> RAW_IRON_BLOCK_SOUL_WALL_TORCH = registerBlock("raw_iron_block_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> RAW_IRON_BLOCK_TORCH = registerBlock("raw_iron_block_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> RAW_IRON_BLOCK_WALL_TORCH = registerBlock("raw_iron_block_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> REDSTONE_BLOCK_REDSTONE_TORCH = registerBlock("redstone_block_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> REDSTONE_BLOCK_REDSTONE_WALL_TORCH = registerBlock("redstone_block_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> REDSTONE_BLOCK_SOUL_TORCH = registerBlock("redstone_block_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> REDSTONE_BLOCK_SOUL_WALL_TORCH = registerBlock("redstone_block_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> REDSTONE_BLOCK_TORCH = registerBlock("redstone_block_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> REDSTONE_BLOCK_WALL_TORCH = registerBlock("redstone_block_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> REDSTONE_ORE_REDSTONE_TORCH = registerBlock("redstone_ore_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> REDSTONE_ORE_REDSTONE_WALL_TORCH = registerBlock("redstone_ore_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> REDSTONE_ORE_SOUL_TORCH = registerBlock("redstone_ore_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> REDSTONE_ORE_SOUL_WALL_TORCH = registerBlock("redstone_ore_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> REDSTONE_ORE_TORCH = registerBlock("redstone_ore_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> REDSTONE_ORE_WALL_TORCH = registerBlock("redstone_ore_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> RED_MUSHROOM_REDSTONE_TORCH = registerBlock("red_mushroom_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> RED_MUSHROOM_REDSTONE_WALL_TORCH = registerBlock("red_mushroom_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> RED_MUSHROOM_SOUL_TORCH = registerBlock("red_mushroom_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> RED_MUSHROOM_SOUL_WALL_TORCH = registerBlock("red_mushroom_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> RED_MUSHROOM_TORCH = registerBlock("red_mushroom_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> RED_MUSHROOM_WALL_TORCH = registerBlock("red_mushroom_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> RED_MUSHROOM_BLOCK_REDSTONE_TORCH = registerBlock("red_mushroom_block_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> RED_MUSHROOM_BLOCK_REDSTONE_WALL_TORCH = registerBlock("red_mushroom_block_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> RED_MUSHROOM_BLOCK_SOUL_TORCH = registerBlock("red_mushroom_block_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> RED_MUSHROOM_BLOCK_SOUL_WALL_TORCH = registerBlock("red_mushroom_block_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> RED_MUSHROOM_BLOCK_TORCH = registerBlock("red_mushroom_block_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> RED_MUSHROOM_BLOCK_WALL_TORCH = registerBlock("red_mushroom_block_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> RED_NETHER_BRICKS_REDSTONE_TORCH = registerBlock("red_nether_bricks_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> RED_NETHER_BRICKS_REDSTONE_WALL_TORCH = registerBlock("red_nether_bricks_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> RED_NETHER_BRICKS_SOUL_TORCH = registerBlock("red_nether_bricks_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> RED_NETHER_BRICKS_SOUL_WALL_TORCH = registerBlock("red_nether_bricks_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> RED_NETHER_BRICKS_TORCH = registerBlock("red_nether_bricks_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> RED_NETHER_BRICKS_WALL_TORCH = registerBlock("red_nether_bricks_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> RED_SAND_REDSTONE_TORCH = registerBlock("red_sand_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> RED_SAND_REDSTONE_WALL_TORCH = registerBlock("red_sand_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> RED_SAND_SOUL_TORCH = registerBlock("red_sand_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> RED_SAND_SOUL_WALL_TORCH = registerBlock("red_sand_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> RED_SAND_TORCH = registerBlock("red_sand_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> RED_SAND_WALL_TORCH = registerBlock("red_sand_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> RED_SANDSTONE_REDSTONE_TORCH = registerBlock("red_sandstone_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> RED_SANDSTONE_REDSTONE_WALL_TORCH = registerBlock("red_sandstone_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> RED_SANDSTONE_SOUL_TORCH = registerBlock("red_sandstone_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> RED_SANDSTONE_SOUL_WALL_TORCH = registerBlock("red_sandstone_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> RED_SANDSTONE_TORCH = registerBlock("red_sandstone_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> RED_SANDSTONE_WALL_TORCH = registerBlock("red_sandstone_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> RED_TERRACOTTA_REDSTONE_TORCH = registerBlock("red_terracotta_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> RED_TERRACOTTA_REDSTONE_WALL_TORCH = registerBlock("red_terracotta_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> RED_TERRACOTTA_SOUL_TORCH = registerBlock("red_terracotta_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> RED_TERRACOTTA_SOUL_WALL_TORCH = registerBlock("red_terracotta_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> RED_TERRACOTTA_TORCH = registerBlock("red_terracotta_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> RED_TERRACOTTA_WALL_TORCH = registerBlock("red_terracotta_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> RED_WOOL_REDSTONE_TORCH = registerBlock("red_wool_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> RED_WOOL_REDSTONE_WALL_TORCH = registerBlock("red_wool_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> RED_WOOL_SOUL_TORCH = registerBlock("red_wool_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> RED_WOOL_SOUL_WALL_TORCH = registerBlock("red_wool_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> RED_WOOL_TORCH = registerBlock("red_wool_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> RED_WOOL_WALL_TORCH = registerBlock("red_wool_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> REINFORCED_DEEPSLATE_REDSTONE_TORCH = registerBlock("reinforced_deepslate_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> REINFORCED_DEEPSLATE_REDSTONE_WALL_TORCH = registerBlock("reinforced_deepslate_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> REINFORCED_DEEPSLATE_SOUL_TORCH = registerBlock("reinforced_deepslate_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> REINFORCED_DEEPSLATE_SOUL_WALL_TORCH = registerBlock("reinforced_deepslate_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> REINFORCED_DEEPSLATE_TORCH = registerBlock("reinforced_deepslate_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> REINFORCED_DEEPSLATE_WALL_TORCH = registerBlock("reinforced_deepslate_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> RESPAWN_ANCHOR_REDSTONE_TORCH = registerBlock("respawn_anchor_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> RESPAWN_ANCHOR_REDSTONE_WALL_TORCH = registerBlock("respawn_anchor_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> RESPAWN_ANCHOR_SOUL_TORCH = registerBlock("respawn_anchor_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> RESPAWN_ANCHOR_SOUL_WALL_TORCH = registerBlock("respawn_anchor_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> RESPAWN_ANCHOR_TORCH = registerBlock("respawn_anchor_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> RESPAWN_ANCHOR_WALL_TORCH = registerBlock("respawn_anchor_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> ROOTED_DIRT_REDSTONE_TORCH = registerBlock("rooted_dirt_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> ROOTED_DIRT_REDSTONE_WALL_TORCH = registerBlock("rooted_dirt_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> ROOTED_DIRT_SOUL_TORCH = registerBlock("rooted_dirt_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> ROOTED_DIRT_SOUL_WALL_TORCH = registerBlock("rooted_dirt_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> ROOTED_DIRT_TORCH = registerBlock("rooted_dirt_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> ROOTED_DIRT_WALL_TORCH = registerBlock("rooted_dirt_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> SAND_REDSTONE_TORCH = registerBlock("sand_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> SAND_REDSTONE_WALL_TORCH = registerBlock("sand_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> SAND_SOUL_TORCH = registerBlock("sand_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> SAND_SOUL_WALL_TORCH = registerBlock("sand_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> SAND_TORCH = registerBlock("sand_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> SAND_WALL_TORCH = registerBlock("sand_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> SANDSTONE_REDSTONE_TORCH = registerBlock("sandstone_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> SANDSTONE_REDSTONE_WALL_TORCH = registerBlock("sandstone_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> SANDSTONE_SOUL_TORCH = registerBlock("sandstone_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> SANDSTONE_SOUL_WALL_TORCH = registerBlock("sandstone_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> SANDSTONE_TORCH = registerBlock("sandstone_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> SANDSTONE_WALL_TORCH = registerBlock("sandstone_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> SCULK_REDSTONE_TORCH = registerBlock("sculk_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> SCULK_REDSTONE_WALL_TORCH = registerBlock("sculk_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> SCULK_SOUL_TORCH = registerBlock("sculk_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> SCULK_SOUL_WALL_TORCH = registerBlock("sculk_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> SCULK_TORCH = registerBlock("sculk_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> SCULK_WALL_TORCH = registerBlock("sculk_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> SCULK_CATALYST_REDSTONE_TORCH = registerBlock("sculk_catalyst_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> SCULK_CATALYST_REDSTONE_WALL_TORCH = registerBlock("sculk_catalyst_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> SCULK_CATALYST_SOUL_TORCH = registerBlock("sculk_catalyst_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> SCULK_CATALYST_SOUL_WALL_TORCH = registerBlock("sculk_catalyst_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> SCULK_CATALYST_TORCH = registerBlock("sculk_catalyst_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> SCULK_CATALYST_WALL_TORCH = registerBlock("sculk_catalyst_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> SHROOMLIGHT_REDSTONE_TORCH = registerBlock("shroomlight_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> SHROOMLIGHT_REDSTONE_WALL_TORCH = registerBlock("shroomlight_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> SHROOMLIGHT_SOUL_TORCH = registerBlock("shroomlight_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> SHROOMLIGHT_SOUL_WALL_TORCH = registerBlock("shroomlight_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> SHROOMLIGHT_TORCH = registerBlock("shroomlight_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> SHROOMLIGHT_WALL_TORCH = registerBlock("shroomlight_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> SLIME_BLOCK_REDSTONE_TORCH = registerBlock("slime_block_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> SLIME_BLOCK_REDSTONE_WALL_TORCH = registerBlock("slime_block_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> SLIME_BLOCK_SOUL_TORCH = registerBlock("slime_block_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> SLIME_BLOCK_SOUL_WALL_TORCH = registerBlock("slime_block_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> SLIME_BLOCK_TORCH = registerBlock("slime_block_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> SLIME_BLOCK_WALL_TORCH = registerBlock("slime_block_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> SMOOTH_BASALT_REDSTONE_TORCH = registerBlock("smooth_basalt_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> SMOOTH_BASALT_REDSTONE_WALL_TORCH = registerBlock("smooth_basalt_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> SMOOTH_BASALT_SOUL_TORCH = registerBlock("smooth_basalt_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> SMOOTH_BASALT_SOUL_WALL_TORCH = registerBlock("smooth_basalt_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> SMOOTH_BASALT_TORCH = registerBlock("smooth_basalt_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> SMOOTH_BASALT_WALL_TORCH = registerBlock("smooth_basalt_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> SMOOTH_QUARTZ_REDSTONE_TORCH = registerBlock("smooth_quartz_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> SMOOTH_QUARTZ_REDSTONE_WALL_TORCH = registerBlock("smooth_quartz_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> SMOOTH_QUARTZ_SOUL_TORCH = registerBlock("smooth_quartz_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> SMOOTH_QUARTZ_SOUL_WALL_TORCH = registerBlock("smooth_quartz_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> SMOOTH_QUARTZ_TORCH = registerBlock("smooth_quartz_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> SMOOTH_QUARTZ_WALL_TORCH = registerBlock("smooth_quartz_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> SMOOTH_RED_SANDSTONE_REDSTONE_TORCH = registerBlock("smooth_red_sandstone_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> SMOOTH_RED_SANDSTONE_REDSTONE_WALL_TORCH = registerBlock("smooth_red_sandstone_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> SMOOTH_RED_SANDSTONE_SOUL_TORCH = registerBlock("smooth_red_sandstone_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> SMOOTH_RED_SANDSTONE_SOUL_WALL_TORCH = registerBlock("smooth_red_sandstone_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> SMOOTH_RED_SANDSTONE_TORCH = registerBlock("smooth_red_sandstone_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> SMOOTH_RED_SANDSTONE_WALL_TORCH = registerBlock("smooth_red_sandstone_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> SMOOTH_SANDSTONE_REDSTONE_TORCH = registerBlock("smooth_sandstone_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> SMOOTH_SANDSTONE_REDSTONE_WALL_TORCH = registerBlock("smooth_sandstone_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> SMOOTH_SANDSTONE_SOUL_TORCH = registerBlock("smooth_sandstone_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> SMOOTH_SANDSTONE_SOUL_WALL_TORCH = registerBlock("smooth_sandstone_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> SMOOTH_SANDSTONE_TORCH = registerBlock("smooth_sandstone_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> SMOOTH_SANDSTONE_WALL_TORCH = registerBlock("smooth_sandstone_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> SMOOTH_STONE_REDSTONE_TORCH = registerBlock("smooth_stone_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> SMOOTH_STONE_REDSTONE_WALL_TORCH = registerBlock("smooth_stone_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> SMOOTH_STONE_SOUL_TORCH = registerBlock("smooth_stone_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> SMOOTH_STONE_SOUL_WALL_TORCH = registerBlock("smooth_stone_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> SMOOTH_STONE_TORCH = registerBlock("smooth_stone_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> SMOOTH_STONE_WALL_TORCH = registerBlock("smooth_stone_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> SNOW_BLOCK_REDSTONE_TORCH = registerBlock("snow_block_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> SNOW_BLOCK_REDSTONE_WALL_TORCH = registerBlock("snow_block_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> SNOW_BLOCK_SOUL_TORCH = registerBlock("snow_block_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> SNOW_BLOCK_SOUL_WALL_TORCH = registerBlock("snow_block_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> SNOW_BLOCK_TORCH = registerBlock("snow_block_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> SNOW_BLOCK_WALL_TORCH = registerBlock("snow_block_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> SOUL_SAND_REDSTONE_TORCH = registerBlock("soul_sand_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> SOUL_SAND_REDSTONE_WALL_TORCH = registerBlock("soul_sand_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> SOUL_SAND_SOUL_TORCH = registerBlock("soul_sand_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> SOUL_SAND_SOUL_WALL_TORCH = registerBlock("soul_sand_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> SOUL_SAND_TORCH = registerBlock("soul_sand_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> SOUL_SAND_WALL_TORCH = registerBlock("soul_sand_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> SOUL_SOIL_REDSTONE_TORCH = registerBlock("soul_soil_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> SOUL_SOIL_REDSTONE_WALL_TORCH = registerBlock("soul_soil_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> SOUL_SOIL_SOUL_TORCH = registerBlock("soul_soil_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> SOUL_SOIL_SOUL_WALL_TORCH = registerBlock("soul_soil_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> SOUL_SOIL_TORCH = registerBlock("soul_soil_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> SOUL_SOIL_WALL_TORCH = registerBlock("soul_soil_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> SPONGE_REDSTONE_TORCH = registerBlock("sponge_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> SPONGE_REDSTONE_WALL_TORCH = registerBlock("sponge_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> SPONGE_SOUL_TORCH = registerBlock("sponge_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> SPONGE_SOUL_WALL_TORCH = registerBlock("sponge_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> SPONGE_TORCH = registerBlock("sponge_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> SPONGE_WALL_TORCH = registerBlock("sponge_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> SPRUCE_LOG_REDSTONE_TORCH = registerBlock("spruce_log_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> SPRUCE_LOG_REDSTONE_WALL_TORCH = registerBlock("spruce_log_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> SPRUCE_LOG_SOUL_TORCH = registerBlock("spruce_log_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> SPRUCE_LOG_SOUL_WALL_TORCH = registerBlock("spruce_log_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> SPRUCE_LOG_TORCH = registerBlock("spruce_log_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> SPRUCE_LOG_WALL_TORCH = registerBlock("spruce_log_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> SPRUCE_PLANKS_REDSTONE_TORCH = registerBlock("spruce_planks_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> SPRUCE_PLANKS_REDSTONE_WALL_TORCH = registerBlock("spruce_planks_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> SPRUCE_PLANKS_SOUL_TORCH = registerBlock("spruce_planks_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> SPRUCE_PLANKS_SOUL_WALL_TORCH = registerBlock("spruce_planks_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> SPRUCE_PLANKS_TORCH = registerBlock("spruce_planks_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> SPRUCE_PLANKS_WALL_TORCH = registerBlock("spruce_planks_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> STONE_REDSTONE_TORCH = registerBlock("stone_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> STONE_REDSTONE_WALL_TORCH = registerBlock("stone_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> STONE_SOUL_TORCH = registerBlock("stone_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> STONE_SOUL_WALL_TORCH = registerBlock("stone_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> STONE_TORCH = registerBlock("stone_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> STONE_WALL_TORCH = registerBlock("stone_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> STONE_BRICKS_REDSTONE_TORCH = registerBlock("stone_bricks_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> STONE_BRICKS_REDSTONE_WALL_TORCH = registerBlock("stone_bricks_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> STONE_BRICKS_SOUL_TORCH = registerBlock("stone_bricks_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> STONE_BRICKS_SOUL_WALL_TORCH = registerBlock("stone_bricks_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> STONE_BRICKS_TORCH = registerBlock("stone_bricks_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> STONE_BRICKS_WALL_TORCH = registerBlock("stone_bricks_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_ACACIA_LOG_REDSTONE_TORCH = registerBlock("stripped_acacia_log_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_ACACIA_LOG_REDSTONE_WALL_TORCH = registerBlock("stripped_acacia_log_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_ACACIA_LOG_SOUL_TORCH = registerBlock("stripped_acacia_log_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_ACACIA_LOG_SOUL_WALL_TORCH = registerBlock("stripped_acacia_log_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_ACACIA_LOG_TORCH = registerBlock("stripped_acacia_log_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_ACACIA_LOG_WALL_TORCH = registerBlock("stripped_acacia_log_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_BIRCH_LOG_REDSTONE_TORCH = registerBlock("stripped_birch_log_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_BIRCH_LOG_REDSTONE_WALL_TORCH = registerBlock("stripped_birch_log_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_BIRCH_LOG_SOUL_TORCH = registerBlock("stripped_birch_log_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_BIRCH_LOG_SOUL_WALL_TORCH = registerBlock("stripped_birch_log_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_BIRCH_LOG_TORCH = registerBlock("stripped_birch_log_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_BIRCH_LOG_WALL_TORCH = registerBlock("stripped_birch_log_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_CRIMSON_HYPHAE_REDSTONE_TORCH = registerBlock("stripped_crimson_hyphae_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_CRIMSON_HYPHAE_REDSTONE_WALL_TORCH = registerBlock("stripped_crimson_hyphae_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_CRIMSON_HYPHAE_SOUL_TORCH = registerBlock("stripped_crimson_hyphae_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_CRIMSON_HYPHAE_SOUL_WALL_TORCH = registerBlock("stripped_crimson_hyphae_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_CRIMSON_HYPHAE_TORCH = registerBlock("stripped_crimson_hyphae_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_CRIMSON_HYPHAE_WALL_TORCH = registerBlock("stripped_crimson_hyphae_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_DARK_OAK_LOG_REDSTONE_TORCH = registerBlock("stripped_dark_oak_log_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_DARK_OAK_LOG_REDSTONE_WALL_TORCH = registerBlock("stripped_dark_oak_log_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_DARK_OAK_LOG_SOUL_TORCH = registerBlock("stripped_dark_oak_log_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_DARK_OAK_LOG_SOUL_WALL_TORCH = registerBlock("stripped_dark_oak_log_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_DARK_OAK_LOG_TORCH = registerBlock("stripped_dark_oak_log_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_DARK_OAK_LOG_WALL_TORCH = registerBlock("stripped_dark_oak_log_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_JUNGLE_LOG_REDSTONE_TORCH = registerBlock("stripped_jungle_log_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_JUNGLE_LOG_REDSTONE_WALL_TORCH = registerBlock("stripped_jungle_log_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_JUNGLE_LOG_SOUL_TORCH = registerBlock("stripped_jungle_log_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_JUNGLE_LOG_SOUL_WALL_TORCH = registerBlock("stripped_jungle_log_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_JUNGLE_LOG_TORCH = registerBlock("stripped_jungle_log_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_JUNGLE_LOG_WALL_TORCH = registerBlock("stripped_jungle_log_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_MANGROVE_LOG_REDSTONE_TORCH = registerBlock("stripped_mangrove_log_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_MANGROVE_LOG_REDSTONE_WALL_TORCH = registerBlock("stripped_mangrove_log_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_MANGROVE_LOG_SOUL_TORCH = registerBlock("stripped_mangrove_log_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_MANGROVE_LOG_SOUL_WALL_TORCH = registerBlock("stripped_mangrove_log_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_MANGROVE_LOG_TORCH = registerBlock("stripped_mangrove_log_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_MANGROVE_LOG_WALL_TORCH = registerBlock("stripped_mangrove_log_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_OAK_LOG_REDSTONE_TORCH = registerBlock("stripped_oak_log_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_OAK_LOG_REDSTONE_WALL_TORCH = registerBlock("stripped_oak_log_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_OAK_LOG_SOUL_TORCH = registerBlock("stripped_oak_log_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_OAK_LOG_SOUL_WALL_TORCH = registerBlock("stripped_oak_log_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_OAK_LOG_TORCH = registerBlock("stripped_oak_log_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_OAK_LOG_WALL_TORCH = registerBlock("stripped_oak_log_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_SPRUCE_LOG_REDSTONE_TORCH = registerBlock("stripped_spruce_log_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_SPRUCE_LOG_REDSTONE_WALL_TORCH = registerBlock("stripped_spruce_log_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_SPRUCE_LOG_SOUL_TORCH = registerBlock("stripped_spruce_log_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_SPRUCE_LOG_SOUL_WALL_TORCH = registerBlock("stripped_spruce_log_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_SPRUCE_LOG_TORCH = registerBlock("stripped_spruce_log_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_SPRUCE_LOG_WALL_TORCH = registerBlock("stripped_spruce_log_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_WARPED_HYPHAE_REDSTONE_TORCH = registerBlock("stripped_warped_hyphae_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_WARPED_HYPHAE_REDSTONE_WALL_TORCH = registerBlock("stripped_warped_hyphae_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_WARPED_HYPHAE_SOUL_TORCH = registerBlock("stripped_warped_hyphae_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_WARPED_HYPHAE_SOUL_WALL_TORCH = registerBlock("stripped_warped_hyphae_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_WARPED_HYPHAE_TORCH = registerBlock("stripped_warped_hyphae_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> STRIPPED_WARPED_HYPHAE_WALL_TORCH = registerBlock("stripped_warped_hyphae_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> TARGET_REDSTONE_TORCH = registerBlock("target_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> TARGET_REDSTONE_WALL_TORCH = registerBlock("target_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> TARGET_SOUL_TORCH = registerBlock("target_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> TARGET_SOUL_WALL_TORCH = registerBlock("target_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> TARGET_TORCH = registerBlock("target_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> TARGET_WALL_TORCH = registerBlock("target_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> TERRACOTTA_REDSTONE_TORCH = registerBlock("terracotta_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> TERRACOTTA_REDSTONE_WALL_TORCH = registerBlock("terracotta_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> TERRACOTTA_SOUL_TORCH = registerBlock("terracotta_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> TERRACOTTA_SOUL_WALL_TORCH = registerBlock("terracotta_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> TERRACOTTA_TORCH = registerBlock("terracotta_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> TERRACOTTA_WALL_TORCH = registerBlock("terracotta_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> TNT_REDSTONE_TORCH = registerBlock("tnt_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> TNT_REDSTONE_WALL_TORCH = registerBlock("tnt_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> TNT_SOUL_TORCH = registerBlock("tnt_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> TNT_SOUL_WALL_TORCH = registerBlock("tnt_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> TNT_TORCH = registerBlock("tnt_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> TNT_WALL_TORCH = registerBlock("tnt_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> TUBE_CORAL_BLOCK_REDSTONE_TORCH = registerBlock("tube_coral_block_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> TUBE_CORAL_BLOCK_REDSTONE_WALL_TORCH = registerBlock("tube_coral_block_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> TUBE_CORAL_BLOCK_SOUL_TORCH = registerBlock("tube_coral_block_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> TUBE_CORAL_BLOCK_SOUL_WALL_TORCH = registerBlock("tube_coral_block_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> TUBE_CORAL_BLOCK_TORCH = registerBlock("tube_coral_block_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> TUBE_CORAL_BLOCK_WALL_TORCH = registerBlock("tube_coral_block_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> TUFF_REDSTONE_TORCH = registerBlock("tuff_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> TUFF_REDSTONE_WALL_TORCH = registerBlock("tuff_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> TUFF_SOUL_TORCH = registerBlock("tuff_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> TUFF_SOUL_WALL_TORCH = registerBlock("tuff_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> TUFF_TORCH = registerBlock("tuff_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> TUFF_WALL_TORCH = registerBlock("tuff_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> VERDANT_FROGLIGHT_REDSTONE_TORCH = registerBlock("verdant_froglight_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> VERDANT_FROGLIGHT_REDSTONE_WALL_TORCH = registerBlock("verdant_froglight_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> VERDANT_FROGLIGHT_SOUL_TORCH = registerBlock("verdant_froglight_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> VERDANT_FROGLIGHT_SOUL_WALL_TORCH = registerBlock("verdant_froglight_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> VERDANT_FROGLIGHT_TORCH = registerBlock("verdant_froglight_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> VERDANT_FROGLIGHT_WALL_TORCH = registerBlock("verdant_froglight_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> WARPED_FUNGUS_REDSTONE_TORCH = registerBlock("warped_fungus_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> WARPED_FUNGUS_REDSTONE_WALL_TORCH = registerBlock("warped_fungus_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> WARPED_FUNGUS_SOUL_TORCH = registerBlock("warped_fungus_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> WARPED_FUNGUS_SOUL_WALL_TORCH = registerBlock("warped_fungus_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> WARPED_FUNGUS_TORCH = registerBlock("warped_fungus_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> WARPED_FUNGUS_WALL_TORCH = registerBlock("warped_fungus_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> WARPED_HYPHAE_REDSTONE_TORCH = registerBlock("warped_hyphae_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> WARPED_HYPHAE_REDSTONE_WALL_TORCH = registerBlock("warped_hyphae_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> WARPED_HYPHAE_SOUL_TORCH = registerBlock("warped_hyphae_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> WARPED_HYPHAE_SOUL_WALL_TORCH = registerBlock("warped_hyphae_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> WARPED_HYPHAE_TORCH = registerBlock("warped_hyphae_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> WARPED_HYPHAE_WALL_TORCH = registerBlock("warped_hyphae_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> WARPED_NYLIUM_REDSTONE_TORCH = registerBlock("warped_nylium_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> WARPED_NYLIUM_REDSTONE_WALL_TORCH = registerBlock("warped_nylium_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> WARPED_NYLIUM_SOUL_TORCH = registerBlock("warped_nylium_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> WARPED_NYLIUM_SOUL_WALL_TORCH = registerBlock("warped_nylium_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> WARPED_NYLIUM_TORCH = registerBlock("warped_nylium_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> WARPED_NYLIUM_WALL_TORCH = registerBlock("warped_nylium_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> WARPED_PLANKS_REDSTONE_TORCH = registerBlock("warped_planks_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> WARPED_PLANKS_REDSTONE_WALL_TORCH = registerBlock("warped_planks_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> WARPED_PLANKS_SOUL_TORCH = registerBlock("warped_planks_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> WARPED_PLANKS_SOUL_WALL_TORCH = registerBlock("warped_planks_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> WARPED_PLANKS_TORCH = registerBlock("warped_planks_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> WARPED_PLANKS_WALL_TORCH = registerBlock("warped_planks_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> WARPED_ROOTS_REDSTONE_TORCH = registerBlock("warped_roots_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> WARPED_ROOTS_REDSTONE_WALL_TORCH = registerBlock("warped_roots_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> WARPED_ROOTS_SOUL_TORCH = registerBlock("warped_roots_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> WARPED_ROOTS_SOUL_WALL_TORCH = registerBlock("warped_roots_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> WARPED_ROOTS_TORCH = registerBlock("warped_roots_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> WARPED_ROOTS_WALL_TORCH = registerBlock("warped_roots_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> WARPED_WART_BLOCK_REDSTONE_TORCH = registerBlock("warped_wart_block_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> WARPED_WART_BLOCK_REDSTONE_WALL_TORCH = registerBlock("warped_wart_block_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> WARPED_WART_BLOCK_SOUL_TORCH = registerBlock("warped_wart_block_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> WARPED_WART_BLOCK_SOUL_WALL_TORCH = registerBlock("warped_wart_block_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> WARPED_WART_BLOCK_TORCH = registerBlock("warped_wart_block_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> WARPED_WART_BLOCK_WALL_TORCH = registerBlock("warped_wart_block_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> WEATHERED_COPPER_REDSTONE_TORCH = registerBlock("weathered_copper_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> WEATHERED_COPPER_REDSTONE_WALL_TORCH = registerBlock("weathered_copper_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> WEATHERED_COPPER_SOUL_TORCH = registerBlock("weathered_copper_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> WEATHERED_COPPER_SOUL_WALL_TORCH = registerBlock("weathered_copper_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> WEATHERED_COPPER_TORCH = registerBlock("weathered_copper_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> WEATHERED_COPPER_WALL_TORCH = registerBlock("weathered_copper_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> WEATHERED_CUT_COPPER_REDSTONE_TORCH = registerBlock("weathered_cut_copper_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> WEATHERED_CUT_COPPER_REDSTONE_WALL_TORCH = registerBlock("weathered_cut_copper_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> WEATHERED_CUT_COPPER_SOUL_TORCH = registerBlock("weathered_cut_copper_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> WEATHERED_CUT_COPPER_SOUL_WALL_TORCH = registerBlock("weathered_cut_copper_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> WEATHERED_CUT_COPPER_TORCH = registerBlock("weathered_cut_copper_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> WEATHERED_CUT_COPPER_WALL_TORCH = registerBlock("weathered_cut_copper_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> WET_SPONGE_REDSTONE_TORCH = registerBlock("wet_sponge_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> WET_SPONGE_REDSTONE_WALL_TORCH = registerBlock("wet_sponge_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> WET_SPONGE_SOUL_TORCH = registerBlock("wet_sponge_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> WET_SPONGE_SOUL_WALL_TORCH = registerBlock("wet_sponge_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> WET_SPONGE_TORCH = registerBlock("wet_sponge_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> WET_SPONGE_WALL_TORCH = registerBlock("wet_sponge_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> WHITE_TERRACOTTA_REDSTONE_TORCH = registerBlock("white_terracotta_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> WHITE_TERRACOTTA_REDSTONE_WALL_TORCH = registerBlock("white_terracotta_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> WHITE_TERRACOTTA_SOUL_TORCH = registerBlock("white_terracotta_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> WHITE_TERRACOTTA_SOUL_WALL_TORCH = registerBlock("white_terracotta_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> WHITE_TERRACOTTA_TORCH = registerBlock("white_terracotta_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> WHITE_TERRACOTTA_WALL_TORCH = registerBlock("white_terracotta_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> WHITE_WOOL_REDSTONE_TORCH = registerBlock("white_wool_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> WHITE_WOOL_REDSTONE_WALL_TORCH = registerBlock("white_wool_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> WHITE_WOOL_SOUL_TORCH = registerBlock("white_wool_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> WHITE_WOOL_SOUL_WALL_TORCH = registerBlock("white_wool_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> WHITE_WOOL_TORCH = registerBlock("white_wool_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> WHITE_WOOL_WALL_TORCH = registerBlock("white_wool_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> YELLOW_TERRACOTTA_REDSTONE_TORCH = registerBlock("yellow_terracotta_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> YELLOW_TERRACOTTA_REDSTONE_WALL_TORCH = registerBlock("yellow_terracotta_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> YELLOW_TERRACOTTA_SOUL_TORCH = registerBlock("yellow_terracotta_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> YELLOW_TERRACOTTA_SOUL_WALL_TORCH = registerBlock("yellow_terracotta_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> YELLOW_TERRACOTTA_TORCH = registerBlock("yellow_terracotta_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> YELLOW_TERRACOTTA_WALL_TORCH = registerBlock("yellow_terracotta_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> YELLOW_WOOL_REDSTONE_TORCH = registerBlock("yellow_wool_redstone_torch", () -> new RedstoneTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_TORCH)) );
	public static final DeferredHolder<Block, Block> YELLOW_WOOL_REDSTONE_WALL_TORCH = registerBlock("yellow_wool_redstone_wall_torch", () -> new RedstoneWallTorchBlock(BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> YELLOW_WOOL_SOUL_TORCH = registerBlock("yellow_wool_soul_torch", () -> new TorchBlock( ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_TORCH)) );
	public static final DeferredHolder<Block, Block> YELLOW_WOOL_SOUL_WALL_TORCH = registerBlock("yellow_wool_soul_wall_torch", () -> new WallTorchBlock(ParticleTypes.SOUL_FIRE_FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.SOUL_WALL_TORCH)) );
	public static final DeferredHolder<Block, Block> YELLOW_WOOL_TORCH = registerBlock("yellow_wool_torch", () -> new TorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.TORCH)) );
	public static final DeferredHolder<Block, Block> YELLOW_WOOL_WALL_TORCH = registerBlock("yellow_wool_wall_torch", () -> new WallTorchBlock(ParticleTypes.FLAME, BlockBehaviour.Properties.ofFullCopy(Blocks.WALL_TORCH)) );
	
	
	
	public static final DeferredHolder<Item, Item> ACACIA_LOG_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("acacia_log_redstone_torch", () -> new StandingAndWallBlockItem(ACACIA_LOG_REDSTONE_TORCH.get(), ACACIA_LOG_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> ACACIA_LOG_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("acacia_log_soul_torch", () -> new StandingAndWallBlockItem(ACACIA_LOG_SOUL_TORCH.get(), ACACIA_LOG_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> ACACIA_LOG_TORCH_ITEM = MOD_ITEM_REGISTRY.register("acacia_log_torch", () -> new StandingAndWallBlockItem(ACACIA_LOG_TORCH.get(), ACACIA_LOG_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> ACACIA_PLANKS_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("acacia_planks_redstone_torch", () -> new StandingAndWallBlockItem(ACACIA_PLANKS_REDSTONE_TORCH.get(), ACACIA_PLANKS_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> ACACIA_PLANKS_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("acacia_planks_soul_torch", () -> new StandingAndWallBlockItem(ACACIA_PLANKS_SOUL_TORCH.get(), ACACIA_PLANKS_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> ACACIA_PLANKS_TORCH_ITEM = MOD_ITEM_REGISTRY.register("acacia_planks_torch", () -> new StandingAndWallBlockItem(ACACIA_PLANKS_TORCH.get(), ACACIA_PLANKS_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> AMETHYST_BLOCK_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("amethyst_block_redstone_torch", () -> new StandingAndWallBlockItem(AMETHYST_BLOCK_REDSTONE_TORCH.get(), AMETHYST_BLOCK_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> AMETHYST_BLOCK_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("amethyst_block_soul_torch", () -> new StandingAndWallBlockItem(AMETHYST_BLOCK_SOUL_TORCH.get(), AMETHYST_BLOCK_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> AMETHYST_BLOCK_TORCH_ITEM = MOD_ITEM_REGISTRY.register("amethyst_block_torch", () -> new StandingAndWallBlockItem(AMETHYST_BLOCK_TORCH.get(), AMETHYST_BLOCK_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> AMETHYST_CLUSTER_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("amethyst_cluster_redstone_torch", () -> new StandingAndWallBlockItem(AMETHYST_CLUSTER_REDSTONE_TORCH.get(), AMETHYST_CLUSTER_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> AMETHYST_CLUSTER_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("amethyst_cluster_soul_torch", () -> new StandingAndWallBlockItem(AMETHYST_CLUSTER_SOUL_TORCH.get(), AMETHYST_CLUSTER_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> AMETHYST_CLUSTER_TORCH_ITEM = MOD_ITEM_REGISTRY.register("amethyst_cluster_torch", () -> new StandingAndWallBlockItem(AMETHYST_CLUSTER_TORCH.get(), AMETHYST_CLUSTER_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> ANCIENT_DEBRIS_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("ancient_debris_redstone_torch", () -> new StandingAndWallBlockItem(ANCIENT_DEBRIS_REDSTONE_TORCH.get(), ANCIENT_DEBRIS_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> ANCIENT_DEBRIS_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("ancient_debris_soul_torch", () -> new StandingAndWallBlockItem(ANCIENT_DEBRIS_SOUL_TORCH.get(), ANCIENT_DEBRIS_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> ANCIENT_DEBRIS_TORCH_ITEM = MOD_ITEM_REGISTRY.register("ancient_debris_torch", () -> new StandingAndWallBlockItem(ANCIENT_DEBRIS_TORCH.get(), ANCIENT_DEBRIS_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> ANDESITE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("andesite_redstone_torch", () -> new StandingAndWallBlockItem(ANDESITE_REDSTONE_TORCH.get(), ANDESITE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> ANDESITE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("andesite_soul_torch", () -> new StandingAndWallBlockItem(ANDESITE_SOUL_TORCH.get(), ANDESITE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> ANDESITE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("andesite_torch", () -> new StandingAndWallBlockItem(ANDESITE_TORCH.get(), ANDESITE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	
	public static final DeferredHolder<Item, Item> BAMBOO_BLOCK_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register( "bamboo_block_redstone_torch", () -> new StandingAndWallBlockItem(  BAMBOO_BLOCK_REDSTONE_TORCH.get(),  BAMBOO_BLOCK_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BAMBOO_BLOCK_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register(     "bamboo_block_soul_torch", () -> new StandingAndWallBlockItem(      BAMBOO_BLOCK_SOUL_TORCH.get(),      BAMBOO_BLOCK_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BAMBOO_BLOCK_TORCH_ITEM = MOD_ITEM_REGISTRY.register(          "bamboo_block_torch", () -> new StandingAndWallBlockItem(           BAMBOO_BLOCK_TORCH.get(),           BAMBOO_BLOCK_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BAMBOO_PLANKS_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("bamboo_planks_redstone_torch", () -> new StandingAndWallBlockItem( BAMBOO_PLANKS_REDSTONE_TORCH.get(), BAMBOO_PLANKS_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BAMBOO_PLANKS_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register(    "bamboo_planks_soul_torch", () -> new StandingAndWallBlockItem(     BAMBOO_PLANKS_SOUL_TORCH.get(),     BAMBOO_PLANKS_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BAMBOO_PLANKS_TORCH_ITEM = MOD_ITEM_REGISTRY.register(         "bamboo_planks_torch", () -> new StandingAndWallBlockItem(          BAMBOO_PLANKS_TORCH.get(),          BAMBOO_PLANKS_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	
	public static final DeferredHolder<Item, Item> BASALT_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("basalt_redstone_torch", () -> new StandingAndWallBlockItem(BASALT_REDSTONE_TORCH.get(), BASALT_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BASALT_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("basalt_soul_torch", () -> new StandingAndWallBlockItem(BASALT_SOUL_TORCH.get(), BASALT_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BASALT_TORCH_ITEM = MOD_ITEM_REGISTRY.register("basalt_torch", () -> new StandingAndWallBlockItem(BASALT_TORCH.get(), BASALT_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BEEHIVE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("beehive_redstone_torch", () -> new StandingAndWallBlockItem(BEEHIVE_REDSTONE_TORCH.get(), BEEHIVE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BEEHIVE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("beehive_soul_torch", () -> new StandingAndWallBlockItem(BEEHIVE_SOUL_TORCH.get(), BEEHIVE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BEEHIVE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("beehive_torch", () -> new StandingAndWallBlockItem(BEEHIVE_TORCH.get(), BEEHIVE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BEE_NEST_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("bee_nest_redstone_torch", () -> new StandingAndWallBlockItem(BEE_NEST_REDSTONE_TORCH.get(), BEE_NEST_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BEE_NEST_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("bee_nest_soul_torch", () -> new StandingAndWallBlockItem(BEE_NEST_SOUL_TORCH.get(), BEE_NEST_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BEE_NEST_TORCH_ITEM = MOD_ITEM_REGISTRY.register("bee_nest_torch", () -> new StandingAndWallBlockItem(BEE_NEST_TORCH.get(), BEE_NEST_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BIRCH_LOG_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("birch_log_redstone_torch", () -> new StandingAndWallBlockItem(BIRCH_LOG_REDSTONE_TORCH.get(), BIRCH_LOG_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BIRCH_LOG_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("birch_log_soul_torch", () -> new StandingAndWallBlockItem(BIRCH_LOG_SOUL_TORCH.get(), BIRCH_LOG_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BIRCH_LOG_TORCH_ITEM = MOD_ITEM_REGISTRY.register("birch_log_torch", () -> new StandingAndWallBlockItem(BIRCH_LOG_TORCH.get(), BIRCH_LOG_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BIRCH_PLANKS_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("birch_planks_redstone_torch", () -> new StandingAndWallBlockItem(BIRCH_PLANKS_REDSTONE_TORCH.get(), BIRCH_PLANKS_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BIRCH_PLANKS_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("birch_planks_soul_torch", () -> new StandingAndWallBlockItem(BIRCH_PLANKS_SOUL_TORCH.get(), BIRCH_PLANKS_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BIRCH_PLANKS_TORCH_ITEM = MOD_ITEM_REGISTRY.register("birch_planks_torch", () -> new StandingAndWallBlockItem(BIRCH_PLANKS_TORCH.get(), BIRCH_PLANKS_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BLACKSTONE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("blackstone_redstone_torch", () -> new StandingAndWallBlockItem(BLACKSTONE_REDSTONE_TORCH.get(), BLACKSTONE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BLACKSTONE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("blackstone_soul_torch", () -> new StandingAndWallBlockItem(BLACKSTONE_SOUL_TORCH.get(), BLACKSTONE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BLACKSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("blackstone_torch", () -> new StandingAndWallBlockItem(BLACKSTONE_TORCH.get(), BLACKSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BLACK_TERRACOTTA_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("black_terracotta_redstone_torch", () -> new StandingAndWallBlockItem(BLACK_TERRACOTTA_REDSTONE_TORCH.get(), BLACK_TERRACOTTA_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BLACK_TERRACOTTA_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("black_terracotta_soul_torch", () -> new StandingAndWallBlockItem(BLACK_TERRACOTTA_SOUL_TORCH.get(), BLACK_TERRACOTTA_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BLACK_TERRACOTTA_TORCH_ITEM = MOD_ITEM_REGISTRY.register("black_terracotta_torch", () -> new StandingAndWallBlockItem(BLACK_TERRACOTTA_TORCH.get(), BLACK_TERRACOTTA_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BLACK_WOOL_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("black_wool_redstone_torch", () -> new StandingAndWallBlockItem(BLACK_WOOL_REDSTONE_TORCH.get(), BLACK_WOOL_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BLACK_WOOL_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("black_wool_soul_torch", () -> new StandingAndWallBlockItem(BLACK_WOOL_SOUL_TORCH.get(), BLACK_WOOL_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BLACK_WOOL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("black_wool_torch", () -> new StandingAndWallBlockItem(BLACK_WOOL_TORCH.get(), BLACK_WOOL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BLUE_ICE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("blue_ice_redstone_torch", () -> new StandingAndWallBlockItem(BLUE_ICE_REDSTONE_TORCH.get(), BLUE_ICE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BLUE_ICE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("blue_ice_soul_torch", () -> new StandingAndWallBlockItem(BLUE_ICE_SOUL_TORCH.get(), BLUE_ICE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BLUE_ICE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("blue_ice_torch", () -> new StandingAndWallBlockItem(BLUE_ICE_TORCH.get(), BLUE_ICE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BLUE_TERRACOTTA_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("blue_terracotta_redstone_torch", () -> new StandingAndWallBlockItem(BLUE_TERRACOTTA_REDSTONE_TORCH.get(), BLUE_TERRACOTTA_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BLUE_TERRACOTTA_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("blue_terracotta_soul_torch", () -> new StandingAndWallBlockItem(BLUE_TERRACOTTA_SOUL_TORCH.get(), BLUE_TERRACOTTA_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BLUE_TERRACOTTA_TORCH_ITEM = MOD_ITEM_REGISTRY.register("blue_terracotta_torch", () -> new StandingAndWallBlockItem(BLUE_TERRACOTTA_TORCH.get(), BLUE_TERRACOTTA_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BLUE_WOOL_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("blue_wool_redstone_torch", () -> new StandingAndWallBlockItem(BLUE_WOOL_REDSTONE_TORCH.get(), BLUE_WOOL_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BLUE_WOOL_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("blue_wool_soul_torch", () -> new StandingAndWallBlockItem(BLUE_WOOL_SOUL_TORCH.get(), BLUE_WOOL_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BLUE_WOOL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("blue_wool_torch", () -> new StandingAndWallBlockItem(BLUE_WOOL_TORCH.get(), BLUE_WOOL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BONE_BLOCK_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("bone_block_redstone_torch", () -> new StandingAndWallBlockItem(BONE_BLOCK_REDSTONE_TORCH.get(), BONE_BLOCK_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BONE_BLOCK_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("bone_block_soul_torch", () -> new StandingAndWallBlockItem(BONE_BLOCK_SOUL_TORCH.get(), BONE_BLOCK_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BONE_BLOCK_TORCH_ITEM = MOD_ITEM_REGISTRY.register("bone_block_torch", () -> new StandingAndWallBlockItem(BONE_BLOCK_TORCH.get(), BONE_BLOCK_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BOOKSHELF_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("bookshelf_redstone_torch", () -> new StandingAndWallBlockItem(BOOKSHELF_REDSTONE_TORCH.get(), BOOKSHELF_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BOOKSHELF_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("bookshelf_soul_torch", () -> new StandingAndWallBlockItem(BOOKSHELF_SOUL_TORCH.get(), BOOKSHELF_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BOOKSHELF_TORCH_ITEM = MOD_ITEM_REGISTRY.register("bookshelf_torch", () -> new StandingAndWallBlockItem(BOOKSHELF_TORCH.get(), BOOKSHELF_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BRAIN_CORAL_BLOCK_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("brain_coral_block_redstone_torch", () -> new StandingAndWallBlockItem(BRAIN_CORAL_BLOCK_REDSTONE_TORCH.get(), BRAIN_CORAL_BLOCK_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BRAIN_CORAL_BLOCK_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("brain_coral_block_soul_torch", () -> new StandingAndWallBlockItem(BRAIN_CORAL_BLOCK_SOUL_TORCH.get(), BRAIN_CORAL_BLOCK_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BRAIN_CORAL_BLOCK_TORCH_ITEM = MOD_ITEM_REGISTRY.register("brain_coral_block_torch", () -> new StandingAndWallBlockItem(BRAIN_CORAL_BLOCK_TORCH.get(), BRAIN_CORAL_BLOCK_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BRICKS_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("bricks_redstone_torch", () -> new StandingAndWallBlockItem(BRICKS_REDSTONE_TORCH.get(), BRICKS_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BRICKS_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("bricks_soul_torch", () -> new StandingAndWallBlockItem(BRICKS_SOUL_TORCH.get(), BRICKS_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BRICKS_TORCH_ITEM = MOD_ITEM_REGISTRY.register("bricks_torch", () -> new StandingAndWallBlockItem(BRICKS_TORCH.get(), BRICKS_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BROWN_MUSHROOM_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("brown_mushroom_redstone_torch", () -> new StandingAndWallBlockItem(BROWN_MUSHROOM_REDSTONE_TORCH.get(), BROWN_MUSHROOM_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BROWN_MUSHROOM_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("brown_mushroom_soul_torch", () -> new StandingAndWallBlockItem(BROWN_MUSHROOM_SOUL_TORCH.get(), BROWN_MUSHROOM_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BROWN_MUSHROOM_TORCH_ITEM = MOD_ITEM_REGISTRY.register("brown_mushroom_torch", () -> new StandingAndWallBlockItem(BROWN_MUSHROOM_TORCH.get(), BROWN_MUSHROOM_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BROWN_MUSHROOM_BLOCK_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("brown_mushroom_block_redstone_torch", () -> new StandingAndWallBlockItem(BROWN_MUSHROOM_BLOCK_REDSTONE_TORCH.get(), BROWN_MUSHROOM_BLOCK_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BROWN_MUSHROOM_BLOCK_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("brown_mushroom_block_soul_torch", () -> new StandingAndWallBlockItem(BROWN_MUSHROOM_BLOCK_SOUL_TORCH.get(), BROWN_MUSHROOM_BLOCK_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BROWN_MUSHROOM_BLOCK_TORCH_ITEM = MOD_ITEM_REGISTRY.register("brown_mushroom_block_torch", () -> new StandingAndWallBlockItem(BROWN_MUSHROOM_BLOCK_TORCH.get(), BROWN_MUSHROOM_BLOCK_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BROWN_TERRACOTTA_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("brown_terracotta_redstone_torch", () -> new StandingAndWallBlockItem(BROWN_TERRACOTTA_REDSTONE_TORCH.get(), BROWN_TERRACOTTA_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BROWN_TERRACOTTA_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("brown_terracotta_soul_torch", () -> new StandingAndWallBlockItem(BROWN_TERRACOTTA_SOUL_TORCH.get(), BROWN_TERRACOTTA_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BROWN_TERRACOTTA_TORCH_ITEM = MOD_ITEM_REGISTRY.register("brown_terracotta_torch", () -> new StandingAndWallBlockItem(BROWN_TERRACOTTA_TORCH.get(), BROWN_TERRACOTTA_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BROWN_WOOL_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("brown_wool_redstone_torch", () -> new StandingAndWallBlockItem(BROWN_WOOL_REDSTONE_TORCH.get(), BROWN_WOOL_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BROWN_WOOL_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("brown_wool_soul_torch", () -> new StandingAndWallBlockItem(BROWN_WOOL_SOUL_TORCH.get(), BROWN_WOOL_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BROWN_WOOL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("brown_wool_torch", () -> new StandingAndWallBlockItem(BROWN_WOOL_TORCH.get(), BROWN_WOOL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BUBBLE_CORAL_BLOCK_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("bubble_coral_block_redstone_torch", () -> new StandingAndWallBlockItem(BUBBLE_CORAL_BLOCK_REDSTONE_TORCH.get(), BUBBLE_CORAL_BLOCK_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BUBBLE_CORAL_BLOCK_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("bubble_coral_block_soul_torch", () -> new StandingAndWallBlockItem(BUBBLE_CORAL_BLOCK_SOUL_TORCH.get(), BUBBLE_CORAL_BLOCK_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BUBBLE_CORAL_BLOCK_TORCH_ITEM = MOD_ITEM_REGISTRY.register("bubble_coral_block_torch", () -> new StandingAndWallBlockItem(BUBBLE_CORAL_BLOCK_TORCH.get(), BUBBLE_CORAL_BLOCK_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BUDDING_AMETHYST_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("budding_amethyst_redstone_torch", () -> new StandingAndWallBlockItem(BUDDING_AMETHYST_REDSTONE_TORCH.get(), BUDDING_AMETHYST_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BUDDING_AMETHYST_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("budding_amethyst_soul_torch", () -> new StandingAndWallBlockItem(BUDDING_AMETHYST_SOUL_TORCH.get(), BUDDING_AMETHYST_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> BUDDING_AMETHYST_TORCH_ITEM = MOD_ITEM_REGISTRY.register("budding_amethyst_torch", () -> new StandingAndWallBlockItem(BUDDING_AMETHYST_TORCH.get(), BUDDING_AMETHYST_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CALCITE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("calcite_redstone_torch", () -> new StandingAndWallBlockItem(CALCITE_REDSTONE_TORCH.get(), CALCITE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CALCITE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("calcite_soul_torch", () -> new StandingAndWallBlockItem(CALCITE_SOUL_TORCH.get(), CALCITE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CALCITE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("calcite_torch", () -> new StandingAndWallBlockItem(CALCITE_TORCH.get(), CALCITE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CHISELED_DEEPSLATE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("chiseled_deepslate_redstone_torch", () -> new StandingAndWallBlockItem(CHISELED_DEEPSLATE_REDSTONE_TORCH.get(), CHISELED_DEEPSLATE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CHISELED_DEEPSLATE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("chiseled_deepslate_soul_torch", () -> new StandingAndWallBlockItem(CHISELED_DEEPSLATE_SOUL_TORCH.get(), CHISELED_DEEPSLATE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CHISELED_DEEPSLATE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("chiseled_deepslate_torch", () -> new StandingAndWallBlockItem(CHISELED_DEEPSLATE_TORCH.get(), CHISELED_DEEPSLATE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CHISELED_NETHER_BRICKS_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("chiseled_nether_bricks_redstone_torch", () -> new StandingAndWallBlockItem(CHISELED_NETHER_BRICKS_REDSTONE_TORCH.get(), CHISELED_NETHER_BRICKS_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CHISELED_NETHER_BRICKS_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("chiseled_nether_bricks_soul_torch", () -> new StandingAndWallBlockItem(CHISELED_NETHER_BRICKS_SOUL_TORCH.get(), CHISELED_NETHER_BRICKS_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CHISELED_NETHER_BRICKS_TORCH_ITEM = MOD_ITEM_REGISTRY.register("chiseled_nether_bricks_torch", () -> new StandingAndWallBlockItem(CHISELED_NETHER_BRICKS_TORCH.get(), CHISELED_NETHER_BRICKS_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CHISELED_POLISHED_BLACKSTONE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("chiseled_polished_blackstone_redstone_torch", () -> new StandingAndWallBlockItem(CHISELED_POLISHED_BLACKSTONE_REDSTONE_TORCH.get(), CHISELED_POLISHED_BLACKSTONE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CHISELED_POLISHED_BLACKSTONE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("chiseled_polished_blackstone_soul_torch", () -> new StandingAndWallBlockItem(CHISELED_POLISHED_BLACKSTONE_SOUL_TORCH.get(), CHISELED_POLISHED_BLACKSTONE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CHISELED_POLISHED_BLACKSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("chiseled_polished_blackstone_torch", () -> new StandingAndWallBlockItem(CHISELED_POLISHED_BLACKSTONE_TORCH.get(), CHISELED_POLISHED_BLACKSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CHISELED_QUARTZ_BLOCK_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("chiseled_quartz_block_redstone_torch", () -> new StandingAndWallBlockItem(CHISELED_QUARTZ_BLOCK_REDSTONE_TORCH.get(), CHISELED_QUARTZ_BLOCK_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CHISELED_QUARTZ_BLOCK_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("chiseled_quartz_block_soul_torch", () -> new StandingAndWallBlockItem(CHISELED_QUARTZ_BLOCK_SOUL_TORCH.get(), CHISELED_QUARTZ_BLOCK_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CHISELED_QUARTZ_BLOCK_TORCH_ITEM = MOD_ITEM_REGISTRY.register("chiseled_quartz_block_torch", () -> new StandingAndWallBlockItem(CHISELED_QUARTZ_BLOCK_TORCH.get(), CHISELED_QUARTZ_BLOCK_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CHISELED_RED_SANDSTONE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("chiseled_red_sandstone_redstone_torch", () -> new StandingAndWallBlockItem(CHISELED_RED_SANDSTONE_REDSTONE_TORCH.get(), CHISELED_RED_SANDSTONE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CHISELED_RED_SANDSTONE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("chiseled_red_sandstone_soul_torch", () -> new StandingAndWallBlockItem(CHISELED_RED_SANDSTONE_SOUL_TORCH.get(), CHISELED_RED_SANDSTONE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CHISELED_RED_SANDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("chiseled_red_sandstone_torch", () -> new StandingAndWallBlockItem(CHISELED_RED_SANDSTONE_TORCH.get(), CHISELED_RED_SANDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CHISELED_SANDSTONE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("chiseled_sandstone_redstone_torch", () -> new StandingAndWallBlockItem(CHISELED_SANDSTONE_REDSTONE_TORCH.get(), CHISELED_SANDSTONE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CHISELED_SANDSTONE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("chiseled_sandstone_soul_torch", () -> new StandingAndWallBlockItem(CHISELED_SANDSTONE_SOUL_TORCH.get(), CHISELED_SANDSTONE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CHISELED_SANDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("chiseled_sandstone_torch", () -> new StandingAndWallBlockItem(CHISELED_SANDSTONE_TORCH.get(), CHISELED_SANDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CHISELED_STONE_BRICKS_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("chiseled_stone_bricks_redstone_torch", () -> new StandingAndWallBlockItem(CHISELED_STONE_BRICKS_REDSTONE_TORCH.get(), CHISELED_STONE_BRICKS_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CHISELED_STONE_BRICKS_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("chiseled_stone_bricks_soul_torch", () -> new StandingAndWallBlockItem(CHISELED_STONE_BRICKS_SOUL_TORCH.get(), CHISELED_STONE_BRICKS_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CHISELED_STONE_BRICKS_TORCH_ITEM = MOD_ITEM_REGISTRY.register("chiseled_stone_bricks_torch", () -> new StandingAndWallBlockItem(CHISELED_STONE_BRICKS_TORCH.get(), CHISELED_STONE_BRICKS_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CHORUS_FLOWER_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("chorus_flower_redstone_torch", () -> new StandingAndWallBlockItem(CHORUS_FLOWER_REDSTONE_TORCH.get(), CHORUS_FLOWER_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CHORUS_FLOWER_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("chorus_flower_soul_torch", () -> new StandingAndWallBlockItem(CHORUS_FLOWER_SOUL_TORCH.get(), CHORUS_FLOWER_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CHORUS_FLOWER_TORCH_ITEM = MOD_ITEM_REGISTRY.register("chorus_flower_torch", () -> new StandingAndWallBlockItem(CHORUS_FLOWER_TORCH.get(), CHORUS_FLOWER_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CHORUS_PLANT_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("chorus_plant_redstone_torch", () -> new StandingAndWallBlockItem(CHORUS_PLANT_REDSTONE_TORCH.get(), CHORUS_PLANT_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CHORUS_PLANT_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("chorus_plant_soul_torch", () -> new StandingAndWallBlockItem(CHORUS_PLANT_SOUL_TORCH.get(), CHORUS_PLANT_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CHORUS_PLANT_TORCH_ITEM = MOD_ITEM_REGISTRY.register("chorus_plant_torch", () -> new StandingAndWallBlockItem(CHORUS_PLANT_TORCH.get(), CHORUS_PLANT_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CLAY_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("clay_redstone_torch", () -> new StandingAndWallBlockItem(CLAY_REDSTONE_TORCH.get(), CLAY_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CLAY_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("clay_soul_torch", () -> new StandingAndWallBlockItem(CLAY_SOUL_TORCH.get(), CLAY_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CLAY_TORCH_ITEM = MOD_ITEM_REGISTRY.register("clay_torch", () -> new StandingAndWallBlockItem(CLAY_TORCH.get(), CLAY_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> COAL_BLOCK_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("coal_block_redstone_torch", () -> new StandingAndWallBlockItem(COAL_BLOCK_REDSTONE_TORCH.get(), COAL_BLOCK_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> COAL_BLOCK_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("coal_block_soul_torch", () -> new StandingAndWallBlockItem(COAL_BLOCK_SOUL_TORCH.get(), COAL_BLOCK_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> COAL_BLOCK_TORCH_ITEM = MOD_ITEM_REGISTRY.register("coal_block_torch", () -> new StandingAndWallBlockItem(COAL_BLOCK_TORCH.get(), COAL_BLOCK_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> COAL_ORE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("coal_ore_redstone_torch", () -> new StandingAndWallBlockItem(COAL_ORE_REDSTONE_TORCH.get(), COAL_ORE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> COAL_ORE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("coal_ore_soul_torch", () -> new StandingAndWallBlockItem(COAL_ORE_SOUL_TORCH.get(), COAL_ORE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> COAL_ORE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("coal_ore_torch", () -> new StandingAndWallBlockItem(COAL_ORE_TORCH.get(), COAL_ORE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> COARSE_DIRT_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("coarse_dirt_redstone_torch", () -> new StandingAndWallBlockItem(COARSE_DIRT_REDSTONE_TORCH.get(), COARSE_DIRT_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> COARSE_DIRT_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("coarse_dirt_soul_torch", () -> new StandingAndWallBlockItem(COARSE_DIRT_SOUL_TORCH.get(), COARSE_DIRT_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> COARSE_DIRT_TORCH_ITEM = MOD_ITEM_REGISTRY.register("coarse_dirt_torch", () -> new StandingAndWallBlockItem(COARSE_DIRT_TORCH.get(), COARSE_DIRT_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> COBBLED_DEEPSLATE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("cobbled_deepslate_redstone_torch", () -> new StandingAndWallBlockItem(COBBLED_DEEPSLATE_REDSTONE_TORCH.get(), COBBLED_DEEPSLATE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> COBBLED_DEEPSLATE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("cobbled_deepslate_soul_torch", () -> new StandingAndWallBlockItem(COBBLED_DEEPSLATE_SOUL_TORCH.get(), COBBLED_DEEPSLATE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> COBBLED_DEEPSLATE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("cobbled_deepslate_torch", () -> new StandingAndWallBlockItem(COBBLED_DEEPSLATE_TORCH.get(), COBBLED_DEEPSLATE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> COBBLESTONE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("cobblestone_redstone_torch", () -> new StandingAndWallBlockItem(COBBLESTONE_REDSTONE_TORCH.get(), COBBLESTONE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> COBBLESTONE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("cobblestone_soul_torch", () -> new StandingAndWallBlockItem(COBBLESTONE_SOUL_TORCH.get(), COBBLESTONE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> COBBLESTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("cobblestone_torch", () -> new StandingAndWallBlockItem(COBBLESTONE_TORCH.get(), COBBLESTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> COPPER_BLOCK_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("copper_block_redstone_torch", () -> new StandingAndWallBlockItem(COPPER_BLOCK_REDSTONE_TORCH.get(), COPPER_BLOCK_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> COPPER_BLOCK_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("copper_block_soul_torch", () -> new StandingAndWallBlockItem(COPPER_BLOCK_SOUL_TORCH.get(), COPPER_BLOCK_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> COPPER_BLOCK_TORCH_ITEM = MOD_ITEM_REGISTRY.register("copper_block_torch", () -> new StandingAndWallBlockItem(COPPER_BLOCK_TORCH.get(), COPPER_BLOCK_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> COPPER_ORE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("copper_ore_redstone_torch", () -> new StandingAndWallBlockItem(COPPER_ORE_REDSTONE_TORCH.get(), COPPER_ORE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> COPPER_ORE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("copper_ore_soul_torch", () -> new StandingAndWallBlockItem(COPPER_ORE_SOUL_TORCH.get(), COPPER_ORE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> COPPER_ORE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("copper_ore_torch", () -> new StandingAndWallBlockItem(COPPER_ORE_TORCH.get(), COPPER_ORE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CRACKED_DEEPSLATE_BRICKS_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("cracked_deepslate_bricks_redstone_torch", () -> new StandingAndWallBlockItem(CRACKED_DEEPSLATE_BRICKS_REDSTONE_TORCH.get(), CRACKED_DEEPSLATE_BRICKS_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CRACKED_DEEPSLATE_BRICKS_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("cracked_deepslate_bricks_soul_torch", () -> new StandingAndWallBlockItem(CRACKED_DEEPSLATE_BRICKS_SOUL_TORCH.get(), CRACKED_DEEPSLATE_BRICKS_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CRACKED_DEEPSLATE_BRICKS_TORCH_ITEM = MOD_ITEM_REGISTRY.register("cracked_deepslate_bricks_torch", () -> new StandingAndWallBlockItem(CRACKED_DEEPSLATE_BRICKS_TORCH.get(), CRACKED_DEEPSLATE_BRICKS_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CRACKED_DEEPSLATE_TILES_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("cracked_deepslate_tiles_redstone_torch", () -> new StandingAndWallBlockItem(CRACKED_DEEPSLATE_TILES_REDSTONE_TORCH.get(), CRACKED_DEEPSLATE_TILES_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CRACKED_DEEPSLATE_TILES_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("cracked_deepslate_tiles_soul_torch", () -> new StandingAndWallBlockItem(CRACKED_DEEPSLATE_TILES_SOUL_TORCH.get(), CRACKED_DEEPSLATE_TILES_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CRACKED_DEEPSLATE_TILES_TORCH_ITEM = MOD_ITEM_REGISTRY.register("cracked_deepslate_tiles_torch", () -> new StandingAndWallBlockItem(CRACKED_DEEPSLATE_TILES_TORCH.get(), CRACKED_DEEPSLATE_TILES_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CRACKED_NETHER_BRICKS_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("cracked_nether_bricks_redstone_torch", () -> new StandingAndWallBlockItem(CRACKED_NETHER_BRICKS_REDSTONE_TORCH.get(), CRACKED_NETHER_BRICKS_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CRACKED_NETHER_BRICKS_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("cracked_nether_bricks_soul_torch", () -> new StandingAndWallBlockItem(CRACKED_NETHER_BRICKS_SOUL_TORCH.get(), CRACKED_NETHER_BRICKS_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CRACKED_NETHER_BRICKS_TORCH_ITEM = MOD_ITEM_REGISTRY.register("cracked_nether_bricks_torch", () -> new StandingAndWallBlockItem(CRACKED_NETHER_BRICKS_TORCH.get(), CRACKED_NETHER_BRICKS_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CRACKED_POLISHED_BLACKSTONE_BRICKS_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("cracked_polished_blackstone_bricks_redstone_torch", () -> new StandingAndWallBlockItem(CRACKED_POLISHED_BLACKSTONE_BRICKS_REDSTONE_TORCH.get(), CRACKED_POLISHED_BLACKSTONE_BRICKS_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CRACKED_POLISHED_BLACKSTONE_BRICKS_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("cracked_polished_blackstone_bricks_soul_torch", () -> new StandingAndWallBlockItem(CRACKED_POLISHED_BLACKSTONE_BRICKS_SOUL_TORCH.get(), CRACKED_POLISHED_BLACKSTONE_BRICKS_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CRACKED_POLISHED_BLACKSTONE_BRICKS_TORCH_ITEM = MOD_ITEM_REGISTRY.register("cracked_polished_blackstone_bricks_torch", () -> new StandingAndWallBlockItem(CRACKED_POLISHED_BLACKSTONE_BRICKS_TORCH.get(), CRACKED_POLISHED_BLACKSTONE_BRICKS_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CRACKED_STONE_BRICKS_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("cracked_stone_bricks_redstone_torch", () -> new StandingAndWallBlockItem(CRACKED_STONE_BRICKS_REDSTONE_TORCH.get(), CRACKED_STONE_BRICKS_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CRACKED_STONE_BRICKS_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("cracked_stone_bricks_soul_torch", () -> new StandingAndWallBlockItem(CRACKED_STONE_BRICKS_SOUL_TORCH.get(), CRACKED_STONE_BRICKS_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CRACKED_STONE_BRICKS_TORCH_ITEM = MOD_ITEM_REGISTRY.register("cracked_stone_bricks_torch", () -> new StandingAndWallBlockItem(CRACKED_STONE_BRICKS_TORCH.get(), CRACKED_STONE_BRICKS_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CRIMSON_FUNGUS_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("crimson_fungus_redstone_torch", () -> new StandingAndWallBlockItem(CRIMSON_FUNGUS_REDSTONE_TORCH.get(), CRIMSON_FUNGUS_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CRIMSON_FUNGUS_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("crimson_fungus_soul_torch", () -> new StandingAndWallBlockItem(CRIMSON_FUNGUS_SOUL_TORCH.get(), CRIMSON_FUNGUS_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CRIMSON_FUNGUS_TORCH_ITEM = MOD_ITEM_REGISTRY.register("crimson_fungus_torch", () -> new StandingAndWallBlockItem(CRIMSON_FUNGUS_TORCH.get(), CRIMSON_FUNGUS_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CRIMSON_HYPHAE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("crimson_hyphae_redstone_torch", () -> new StandingAndWallBlockItem(CRIMSON_HYPHAE_REDSTONE_TORCH.get(), CRIMSON_HYPHAE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CRIMSON_HYPHAE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("crimson_hyphae_soul_torch", () -> new StandingAndWallBlockItem(CRIMSON_HYPHAE_SOUL_TORCH.get(), CRIMSON_HYPHAE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CRIMSON_HYPHAE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("crimson_hyphae_torch", () -> new StandingAndWallBlockItem(CRIMSON_HYPHAE_TORCH.get(), CRIMSON_HYPHAE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CRIMSON_NYLIUM_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("crimson_nylium_redstone_torch", () -> new StandingAndWallBlockItem(CRIMSON_NYLIUM_REDSTONE_TORCH.get(), CRIMSON_NYLIUM_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CRIMSON_NYLIUM_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("crimson_nylium_soul_torch", () -> new StandingAndWallBlockItem(CRIMSON_NYLIUM_SOUL_TORCH.get(), CRIMSON_NYLIUM_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CRIMSON_NYLIUM_TORCH_ITEM = MOD_ITEM_REGISTRY.register("crimson_nylium_torch", () -> new StandingAndWallBlockItem(CRIMSON_NYLIUM_TORCH.get(), CRIMSON_NYLIUM_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CRIMSON_PLANKS_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("crimson_planks_redstone_torch", () -> new StandingAndWallBlockItem(CRIMSON_PLANKS_REDSTONE_TORCH.get(), CRIMSON_PLANKS_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CRIMSON_PLANKS_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("crimson_planks_soul_torch", () -> new StandingAndWallBlockItem(CRIMSON_PLANKS_SOUL_TORCH.get(), CRIMSON_PLANKS_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CRIMSON_PLANKS_TORCH_ITEM = MOD_ITEM_REGISTRY.register("crimson_planks_torch", () -> new StandingAndWallBlockItem(CRIMSON_PLANKS_TORCH.get(), CRIMSON_PLANKS_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CRIMSON_ROOTS_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("crimson_roots_redstone_torch", () -> new StandingAndWallBlockItem(CRIMSON_ROOTS_REDSTONE_TORCH.get(), CRIMSON_ROOTS_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CRIMSON_ROOTS_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("crimson_roots_soul_torch", () -> new StandingAndWallBlockItem(CRIMSON_ROOTS_SOUL_TORCH.get(), CRIMSON_ROOTS_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CRIMSON_ROOTS_TORCH_ITEM = MOD_ITEM_REGISTRY.register("crimson_roots_torch", () -> new StandingAndWallBlockItem(CRIMSON_ROOTS_TORCH.get(), CRIMSON_ROOTS_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CRYING_OBSIDIAN_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("crying_obsidian_redstone_torch", () -> new StandingAndWallBlockItem(CRYING_OBSIDIAN_REDSTONE_TORCH.get(), CRYING_OBSIDIAN_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CRYING_OBSIDIAN_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("crying_obsidian_soul_torch", () -> new StandingAndWallBlockItem(CRYING_OBSIDIAN_SOUL_TORCH.get(), CRYING_OBSIDIAN_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CRYING_OBSIDIAN_TORCH_ITEM = MOD_ITEM_REGISTRY.register("crying_obsidian_torch", () -> new StandingAndWallBlockItem(CRYING_OBSIDIAN_TORCH.get(), CRYING_OBSIDIAN_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CUT_COPPER_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("cut_copper_redstone_torch", () -> new StandingAndWallBlockItem(CUT_COPPER_REDSTONE_TORCH.get(), CUT_COPPER_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CUT_COPPER_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("cut_copper_soul_torch", () -> new StandingAndWallBlockItem(CUT_COPPER_SOUL_TORCH.get(), CUT_COPPER_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CUT_COPPER_TORCH_ITEM = MOD_ITEM_REGISTRY.register("cut_copper_torch", () -> new StandingAndWallBlockItem(CUT_COPPER_TORCH.get(), CUT_COPPER_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CUT_RED_SANDSTONE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("cut_red_sandstone_redstone_torch", () -> new StandingAndWallBlockItem(CUT_RED_SANDSTONE_REDSTONE_TORCH.get(), CUT_RED_SANDSTONE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CUT_RED_SANDSTONE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("cut_red_sandstone_soul_torch", () -> new StandingAndWallBlockItem(CUT_RED_SANDSTONE_SOUL_TORCH.get(), CUT_RED_SANDSTONE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CUT_RED_SANDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("cut_red_sandstone_torch", () -> new StandingAndWallBlockItem(CUT_RED_SANDSTONE_TORCH.get(), CUT_RED_SANDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CUT_SANDSTONE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("cut_sandstone_redstone_torch", () -> new StandingAndWallBlockItem(CUT_SANDSTONE_REDSTONE_TORCH.get(), CUT_SANDSTONE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CUT_SANDSTONE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("cut_sandstone_soul_torch", () -> new StandingAndWallBlockItem(CUT_SANDSTONE_SOUL_TORCH.get(), CUT_SANDSTONE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CUT_SANDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("cut_sandstone_torch", () -> new StandingAndWallBlockItem(CUT_SANDSTONE_TORCH.get(), CUT_SANDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CYAN_TERRACOTTA_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("cyan_terracotta_redstone_torch", () -> new StandingAndWallBlockItem(CYAN_TERRACOTTA_REDSTONE_TORCH.get(), CYAN_TERRACOTTA_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CYAN_TERRACOTTA_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("cyan_terracotta_soul_torch", () -> new StandingAndWallBlockItem(CYAN_TERRACOTTA_SOUL_TORCH.get(), CYAN_TERRACOTTA_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CYAN_TERRACOTTA_TORCH_ITEM = MOD_ITEM_REGISTRY.register("cyan_terracotta_torch", () -> new StandingAndWallBlockItem(CYAN_TERRACOTTA_TORCH.get(), CYAN_TERRACOTTA_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CYAN_WOOL_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("cyan_wool_redstone_torch", () -> new StandingAndWallBlockItem(CYAN_WOOL_REDSTONE_TORCH.get(), CYAN_WOOL_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CYAN_WOOL_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("cyan_wool_soul_torch", () -> new StandingAndWallBlockItem(CYAN_WOOL_SOUL_TORCH.get(), CYAN_WOOL_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> CYAN_WOOL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("cyan_wool_torch", () -> new StandingAndWallBlockItem(CYAN_WOOL_TORCH.get(), CYAN_WOOL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DARK_OAK_LOG_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("dark_oak_log_redstone_torch", () -> new StandingAndWallBlockItem(DARK_OAK_LOG_REDSTONE_TORCH.get(), DARK_OAK_LOG_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DARK_OAK_LOG_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("dark_oak_log_soul_torch", () -> new StandingAndWallBlockItem(DARK_OAK_LOG_SOUL_TORCH.get(), DARK_OAK_LOG_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DARK_OAK_LOG_TORCH_ITEM = MOD_ITEM_REGISTRY.register("dark_oak_log_torch", () -> new StandingAndWallBlockItem(DARK_OAK_LOG_TORCH.get(), DARK_OAK_LOG_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DARK_OAK_PLANKS_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("dark_oak_planks_redstone_torch", () -> new StandingAndWallBlockItem(DARK_OAK_PLANKS_REDSTONE_TORCH.get(), DARK_OAK_PLANKS_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DARK_OAK_PLANKS_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("dark_oak_planks_soul_torch", () -> new StandingAndWallBlockItem(DARK_OAK_PLANKS_SOUL_TORCH.get(), DARK_OAK_PLANKS_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DARK_OAK_PLANKS_TORCH_ITEM = MOD_ITEM_REGISTRY.register("dark_oak_planks_torch", () -> new StandingAndWallBlockItem(DARK_OAK_PLANKS_TORCH.get(), DARK_OAK_PLANKS_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DARK_PRISMARINE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("dark_prismarine_redstone_torch", () -> new StandingAndWallBlockItem(DARK_PRISMARINE_REDSTONE_TORCH.get(), DARK_PRISMARINE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DARK_PRISMARINE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("dark_prismarine_soul_torch", () -> new StandingAndWallBlockItem(DARK_PRISMARINE_SOUL_TORCH.get(), DARK_PRISMARINE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DARK_PRISMARINE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("dark_prismarine_torch", () -> new StandingAndWallBlockItem(DARK_PRISMARINE_TORCH.get(), DARK_PRISMARINE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DEAD_BRAIN_CORAL_BLOCK_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("dead_brain_coral_block_redstone_torch", () -> new StandingAndWallBlockItem(DEAD_BRAIN_CORAL_BLOCK_REDSTONE_TORCH.get(), DEAD_BRAIN_CORAL_BLOCK_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DEAD_BRAIN_CORAL_BLOCK_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("dead_brain_coral_block_soul_torch", () -> new StandingAndWallBlockItem(DEAD_BRAIN_CORAL_BLOCK_SOUL_TORCH.get(), DEAD_BRAIN_CORAL_BLOCK_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DEAD_BRAIN_CORAL_BLOCK_TORCH_ITEM = MOD_ITEM_REGISTRY.register("dead_brain_coral_block_torch", () -> new StandingAndWallBlockItem(DEAD_BRAIN_CORAL_BLOCK_TORCH.get(), DEAD_BRAIN_CORAL_BLOCK_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DEAD_BUBBLE_CORAL_BLOCK_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("dead_bubble_coral_block_redstone_torch", () -> new StandingAndWallBlockItem(DEAD_BUBBLE_CORAL_BLOCK_REDSTONE_TORCH.get(), DEAD_BUBBLE_CORAL_BLOCK_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DEAD_BUBBLE_CORAL_BLOCK_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("dead_bubble_coral_block_soul_torch", () -> new StandingAndWallBlockItem(DEAD_BUBBLE_CORAL_BLOCK_SOUL_TORCH.get(), DEAD_BUBBLE_CORAL_BLOCK_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DEAD_BUBBLE_CORAL_BLOCK_TORCH_ITEM = MOD_ITEM_REGISTRY.register("dead_bubble_coral_block_torch", () -> new StandingAndWallBlockItem(DEAD_BUBBLE_CORAL_BLOCK_TORCH.get(), DEAD_BUBBLE_CORAL_BLOCK_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DEAD_FIRE_CORAL_BLOCK_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("dead_fire_coral_block_redstone_torch", () -> new StandingAndWallBlockItem(DEAD_FIRE_CORAL_BLOCK_REDSTONE_TORCH.get(), DEAD_FIRE_CORAL_BLOCK_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DEAD_FIRE_CORAL_BLOCK_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("dead_fire_coral_block_soul_torch", () -> new StandingAndWallBlockItem(DEAD_FIRE_CORAL_BLOCK_SOUL_TORCH.get(), DEAD_FIRE_CORAL_BLOCK_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DEAD_FIRE_CORAL_BLOCK_TORCH_ITEM = MOD_ITEM_REGISTRY.register("dead_fire_coral_block_torch", () -> new StandingAndWallBlockItem(DEAD_FIRE_CORAL_BLOCK_TORCH.get(), DEAD_FIRE_CORAL_BLOCK_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DEAD_HORN_CORAL_BLOCK_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("dead_horn_coral_block_redstone_torch", () -> new StandingAndWallBlockItem(DEAD_HORN_CORAL_BLOCK_REDSTONE_TORCH.get(), DEAD_HORN_CORAL_BLOCK_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DEAD_HORN_CORAL_BLOCK_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("dead_horn_coral_block_soul_torch", () -> new StandingAndWallBlockItem(DEAD_HORN_CORAL_BLOCK_SOUL_TORCH.get(), DEAD_HORN_CORAL_BLOCK_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DEAD_HORN_CORAL_BLOCK_TORCH_ITEM = MOD_ITEM_REGISTRY.register("dead_horn_coral_block_torch", () -> new StandingAndWallBlockItem(DEAD_HORN_CORAL_BLOCK_TORCH.get(), DEAD_HORN_CORAL_BLOCK_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DEAD_TUBE_CORAL_BLOCK_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("dead_tube_coral_block_redstone_torch", () -> new StandingAndWallBlockItem(DEAD_TUBE_CORAL_BLOCK_REDSTONE_TORCH.get(), DEAD_TUBE_CORAL_BLOCK_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DEAD_TUBE_CORAL_BLOCK_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("dead_tube_coral_block_soul_torch", () -> new StandingAndWallBlockItem(DEAD_TUBE_CORAL_BLOCK_SOUL_TORCH.get(), DEAD_TUBE_CORAL_BLOCK_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DEAD_TUBE_CORAL_BLOCK_TORCH_ITEM = MOD_ITEM_REGISTRY.register("dead_tube_coral_block_torch", () -> new StandingAndWallBlockItem(DEAD_TUBE_CORAL_BLOCK_TORCH.get(), DEAD_TUBE_CORAL_BLOCK_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DEEPSLATE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("deepslate_redstone_torch", () -> new StandingAndWallBlockItem(DEEPSLATE_REDSTONE_TORCH.get(), DEEPSLATE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DEEPSLATE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("deepslate_soul_torch", () -> new StandingAndWallBlockItem(DEEPSLATE_SOUL_TORCH.get(), DEEPSLATE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DEEPSLATE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("deepslate_torch", () -> new StandingAndWallBlockItem(DEEPSLATE_TORCH.get(), DEEPSLATE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DEEPSLATE_BRICKS_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("deepslate_bricks_redstone_torch", () -> new StandingAndWallBlockItem(DEEPSLATE_BRICKS_REDSTONE_TORCH.get(), DEEPSLATE_BRICKS_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DEEPSLATE_BRICKS_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("deepslate_bricks_soul_torch", () -> new StandingAndWallBlockItem(DEEPSLATE_BRICKS_SOUL_TORCH.get(), DEEPSLATE_BRICKS_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DEEPSLATE_BRICKS_TORCH_ITEM = MOD_ITEM_REGISTRY.register("deepslate_bricks_torch", () -> new StandingAndWallBlockItem(DEEPSLATE_BRICKS_TORCH.get(), DEEPSLATE_BRICKS_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DEEPSLATE_COAL_ORE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("deepslate_coal_ore_redstone_torch", () -> new StandingAndWallBlockItem(DEEPSLATE_COAL_ORE_REDSTONE_TORCH.get(), DEEPSLATE_COAL_ORE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DEEPSLATE_COAL_ORE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("deepslate_coal_ore_soul_torch", () -> new StandingAndWallBlockItem(DEEPSLATE_COAL_ORE_SOUL_TORCH.get(), DEEPSLATE_COAL_ORE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DEEPSLATE_COAL_ORE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("deepslate_coal_ore_torch", () -> new StandingAndWallBlockItem(DEEPSLATE_COAL_ORE_TORCH.get(), DEEPSLATE_COAL_ORE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DEEPSLATE_COPPER_ORE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("deepslate_copper_ore_redstone_torch", () -> new StandingAndWallBlockItem(DEEPSLATE_COPPER_ORE_REDSTONE_TORCH.get(), DEEPSLATE_COPPER_ORE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DEEPSLATE_COPPER_ORE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("deepslate_copper_ore_soul_torch", () -> new StandingAndWallBlockItem(DEEPSLATE_COPPER_ORE_SOUL_TORCH.get(), DEEPSLATE_COPPER_ORE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DEEPSLATE_COPPER_ORE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("deepslate_copper_ore_torch", () -> new StandingAndWallBlockItem(DEEPSLATE_COPPER_ORE_TORCH.get(), DEEPSLATE_COPPER_ORE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DEEPSLATE_DIAMOND_ORE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("deepslate_diamond_ore_redstone_torch", () -> new StandingAndWallBlockItem(DEEPSLATE_DIAMOND_ORE_REDSTONE_TORCH.get(), DEEPSLATE_DIAMOND_ORE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DEEPSLATE_DIAMOND_ORE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("deepslate_diamond_ore_soul_torch", () -> new StandingAndWallBlockItem(DEEPSLATE_DIAMOND_ORE_SOUL_TORCH.get(), DEEPSLATE_DIAMOND_ORE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DEEPSLATE_DIAMOND_ORE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("deepslate_diamond_ore_torch", () -> new StandingAndWallBlockItem(DEEPSLATE_DIAMOND_ORE_TORCH.get(), DEEPSLATE_DIAMOND_ORE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DEEPSLATE_EMERALD_ORE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("deepslate_emerald_ore_redstone_torch", () -> new StandingAndWallBlockItem(DEEPSLATE_EMERALD_ORE_REDSTONE_TORCH.get(), DEEPSLATE_EMERALD_ORE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DEEPSLATE_EMERALD_ORE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("deepslate_emerald_ore_soul_torch", () -> new StandingAndWallBlockItem(DEEPSLATE_EMERALD_ORE_SOUL_TORCH.get(), DEEPSLATE_EMERALD_ORE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DEEPSLATE_EMERALD_ORE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("deepslate_emerald_ore_torch", () -> new StandingAndWallBlockItem(DEEPSLATE_EMERALD_ORE_TORCH.get(), DEEPSLATE_EMERALD_ORE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DEEPSLATE_GOLD_ORE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("deepslate_gold_ore_redstone_torch", () -> new StandingAndWallBlockItem(DEEPSLATE_GOLD_ORE_REDSTONE_TORCH.get(), DEEPSLATE_GOLD_ORE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DEEPSLATE_GOLD_ORE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("deepslate_gold_ore_soul_torch", () -> new StandingAndWallBlockItem(DEEPSLATE_GOLD_ORE_SOUL_TORCH.get(), DEEPSLATE_GOLD_ORE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DEEPSLATE_GOLD_ORE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("deepslate_gold_ore_torch", () -> new StandingAndWallBlockItem(DEEPSLATE_GOLD_ORE_TORCH.get(), DEEPSLATE_GOLD_ORE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DEEPSLATE_IRON_ORE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("deepslate_iron_ore_redstone_torch", () -> new StandingAndWallBlockItem(DEEPSLATE_IRON_ORE_REDSTONE_TORCH.get(), DEEPSLATE_IRON_ORE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DEEPSLATE_IRON_ORE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("deepslate_iron_ore_soul_torch", () -> new StandingAndWallBlockItem(DEEPSLATE_IRON_ORE_SOUL_TORCH.get(), DEEPSLATE_IRON_ORE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DEEPSLATE_IRON_ORE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("deepslate_iron_ore_torch", () -> new StandingAndWallBlockItem(DEEPSLATE_IRON_ORE_TORCH.get(), DEEPSLATE_IRON_ORE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DEEPSLATE_LAPIS_ORE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("deepslate_lapis_ore_redstone_torch", () -> new StandingAndWallBlockItem(DEEPSLATE_LAPIS_ORE_REDSTONE_TORCH.get(), DEEPSLATE_LAPIS_ORE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DEEPSLATE_LAPIS_ORE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("deepslate_lapis_ore_soul_torch", () -> new StandingAndWallBlockItem(DEEPSLATE_LAPIS_ORE_SOUL_TORCH.get(), DEEPSLATE_LAPIS_ORE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DEEPSLATE_LAPIS_ORE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("deepslate_lapis_ore_torch", () -> new StandingAndWallBlockItem(DEEPSLATE_LAPIS_ORE_TORCH.get(), DEEPSLATE_LAPIS_ORE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DEEPSLATE_REDSTONE_ORE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("deepslate_redstone_ore_redstone_torch", () -> new StandingAndWallBlockItem(DEEPSLATE_REDSTONE_ORE_REDSTONE_TORCH.get(), DEEPSLATE_REDSTONE_ORE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DEEPSLATE_REDSTONE_ORE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("deepslate_redstone_ore_soul_torch", () -> new StandingAndWallBlockItem(DEEPSLATE_REDSTONE_ORE_SOUL_TORCH.get(), DEEPSLATE_REDSTONE_ORE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DEEPSLATE_REDSTONE_ORE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("deepslate_redstone_ore_torch", () -> new StandingAndWallBlockItem(DEEPSLATE_REDSTONE_ORE_TORCH.get(), DEEPSLATE_REDSTONE_ORE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DEEPSLATE_TILES_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("deepslate_tiles_redstone_torch", () -> new StandingAndWallBlockItem(DEEPSLATE_TILES_REDSTONE_TORCH.get(), DEEPSLATE_TILES_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DEEPSLATE_TILES_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("deepslate_tiles_soul_torch", () -> new StandingAndWallBlockItem(DEEPSLATE_TILES_SOUL_TORCH.get(), DEEPSLATE_TILES_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DEEPSLATE_TILES_TORCH_ITEM = MOD_ITEM_REGISTRY.register("deepslate_tiles_torch", () -> new StandingAndWallBlockItem(DEEPSLATE_TILES_TORCH.get(), DEEPSLATE_TILES_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DIAMOND_BLOCK_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("diamond_block_redstone_torch", () -> new StandingAndWallBlockItem(DIAMOND_BLOCK_REDSTONE_TORCH.get(), DIAMOND_BLOCK_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DIAMOND_BLOCK_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("diamond_block_soul_torch", () -> new StandingAndWallBlockItem(DIAMOND_BLOCK_SOUL_TORCH.get(), DIAMOND_BLOCK_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DIAMOND_BLOCK_TORCH_ITEM = MOD_ITEM_REGISTRY.register("diamond_block_torch", () -> new StandingAndWallBlockItem(DIAMOND_BLOCK_TORCH.get(), DIAMOND_BLOCK_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DIAMOND_ORE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("diamond_ore_redstone_torch", () -> new StandingAndWallBlockItem(DIAMOND_ORE_REDSTONE_TORCH.get(), DIAMOND_ORE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DIAMOND_ORE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("diamond_ore_soul_torch", () -> new StandingAndWallBlockItem(DIAMOND_ORE_SOUL_TORCH.get(), DIAMOND_ORE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DIAMOND_ORE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("diamond_ore_torch", () -> new StandingAndWallBlockItem(DIAMOND_ORE_TORCH.get(), DIAMOND_ORE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DIORITE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("diorite_redstone_torch", () -> new StandingAndWallBlockItem(DIORITE_REDSTONE_TORCH.get(), DIORITE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DIORITE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("diorite_soul_torch", () -> new StandingAndWallBlockItem(DIORITE_SOUL_TORCH.get(), DIORITE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DIORITE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("diorite_torch", () -> new StandingAndWallBlockItem(DIORITE_TORCH.get(), DIORITE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DIRT_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("dirt_redstone_torch", () -> new StandingAndWallBlockItem(DIRT_REDSTONE_TORCH.get(), DIRT_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DIRT_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("dirt_soul_torch", () -> new StandingAndWallBlockItem(DIRT_SOUL_TORCH.get(), DIRT_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DIRT_TORCH_ITEM = MOD_ITEM_REGISTRY.register("dirt_torch", () -> new StandingAndWallBlockItem(DIRT_TORCH.get(), DIRT_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DRIED_KELP_BLOCK_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("dried_kelp_block_redstone_torch", () -> new StandingAndWallBlockItem(DRIED_KELP_BLOCK_REDSTONE_TORCH.get(), DRIED_KELP_BLOCK_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DRIED_KELP_BLOCK_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("dried_kelp_block_soul_torch", () -> new StandingAndWallBlockItem(DRIED_KELP_BLOCK_SOUL_TORCH.get(), DRIED_KELP_BLOCK_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DRIED_KELP_BLOCK_TORCH_ITEM = MOD_ITEM_REGISTRY.register("dried_kelp_block_torch", () -> new StandingAndWallBlockItem(DRIED_KELP_BLOCK_TORCH.get(), DRIED_KELP_BLOCK_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DRIPSTONE_BLOCK_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("dripstone_block_redstone_torch", () -> new StandingAndWallBlockItem(DRIPSTONE_BLOCK_REDSTONE_TORCH.get(), DRIPSTONE_BLOCK_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DRIPSTONE_BLOCK_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("dripstone_block_soul_torch", () -> new StandingAndWallBlockItem(DRIPSTONE_BLOCK_SOUL_TORCH.get(), DRIPSTONE_BLOCK_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> DRIPSTONE_BLOCK_TORCH_ITEM = MOD_ITEM_REGISTRY.register("dripstone_block_torch", () -> new StandingAndWallBlockItem(DRIPSTONE_BLOCK_TORCH.get(), DRIPSTONE_BLOCK_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> EMERALD_BLOCK_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("emerald_block_redstone_torch", () -> new StandingAndWallBlockItem(EMERALD_BLOCK_REDSTONE_TORCH.get(), EMERALD_BLOCK_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> EMERALD_BLOCK_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("emerald_block_soul_torch", () -> new StandingAndWallBlockItem(EMERALD_BLOCK_SOUL_TORCH.get(), EMERALD_BLOCK_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> EMERALD_BLOCK_TORCH_ITEM = MOD_ITEM_REGISTRY.register("emerald_block_torch", () -> new StandingAndWallBlockItem(EMERALD_BLOCK_TORCH.get(), EMERALD_BLOCK_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> EMERALD_ORE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("emerald_ore_redstone_torch", () -> new StandingAndWallBlockItem(EMERALD_ORE_REDSTONE_TORCH.get(), EMERALD_ORE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> EMERALD_ORE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("emerald_ore_soul_torch", () -> new StandingAndWallBlockItem(EMERALD_ORE_SOUL_TORCH.get(), EMERALD_ORE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> EMERALD_ORE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("emerald_ore_torch", () -> new StandingAndWallBlockItem(EMERALD_ORE_TORCH.get(), EMERALD_ORE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> END_PORTAL_FRAME_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("end_portal_frame_redstone_torch", () -> new StandingAndWallBlockItem(END_PORTAL_FRAME_REDSTONE_TORCH.get(), END_PORTAL_FRAME_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> END_PORTAL_FRAME_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("end_portal_frame_soul_torch", () -> new StandingAndWallBlockItem(END_PORTAL_FRAME_SOUL_TORCH.get(), END_PORTAL_FRAME_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> END_PORTAL_FRAME_TORCH_ITEM = MOD_ITEM_REGISTRY.register("end_portal_frame_torch", () -> new StandingAndWallBlockItem(END_PORTAL_FRAME_TORCH.get(), END_PORTAL_FRAME_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> END_STONE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("end_stone_redstone_torch", () -> new StandingAndWallBlockItem(END_STONE_REDSTONE_TORCH.get(), END_STONE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> END_STONE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("end_stone_soul_torch", () -> new StandingAndWallBlockItem(END_STONE_SOUL_TORCH.get(), END_STONE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> END_STONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("end_stone_torch", () -> new StandingAndWallBlockItem(END_STONE_TORCH.get(), END_STONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> END_STONE_BRICKS_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("end_stone_bricks_redstone_torch", () -> new StandingAndWallBlockItem(END_STONE_BRICKS_REDSTONE_TORCH.get(), END_STONE_BRICKS_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> END_STONE_BRICKS_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("end_stone_bricks_soul_torch", () -> new StandingAndWallBlockItem(END_STONE_BRICKS_SOUL_TORCH.get(), END_STONE_BRICKS_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> END_STONE_BRICKS_TORCH_ITEM = MOD_ITEM_REGISTRY.register("end_stone_bricks_torch", () -> new StandingAndWallBlockItem(END_STONE_BRICKS_TORCH.get(), END_STONE_BRICKS_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> EXPOSED_COPPER_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("exposed_copper_redstone_torch", () -> new StandingAndWallBlockItem(EXPOSED_COPPER_REDSTONE_TORCH.get(), EXPOSED_COPPER_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> EXPOSED_COPPER_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("exposed_copper_soul_torch", () -> new StandingAndWallBlockItem(EXPOSED_COPPER_SOUL_TORCH.get(), EXPOSED_COPPER_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> EXPOSED_COPPER_TORCH_ITEM = MOD_ITEM_REGISTRY.register("exposed_copper_torch", () -> new StandingAndWallBlockItem(EXPOSED_COPPER_TORCH.get(), EXPOSED_COPPER_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> EXPOSED_CUT_COPPER_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("exposed_cut_copper_redstone_torch", () -> new StandingAndWallBlockItem(EXPOSED_CUT_COPPER_REDSTONE_TORCH.get(), EXPOSED_CUT_COPPER_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> EXPOSED_CUT_COPPER_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("exposed_cut_copper_soul_torch", () -> new StandingAndWallBlockItem(EXPOSED_CUT_COPPER_SOUL_TORCH.get(), EXPOSED_CUT_COPPER_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> EXPOSED_CUT_COPPER_TORCH_ITEM = MOD_ITEM_REGISTRY.register("exposed_cut_copper_torch", () -> new StandingAndWallBlockItem(EXPOSED_CUT_COPPER_TORCH.get(), EXPOSED_CUT_COPPER_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> FIRE_CORAL_BLOCK_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("fire_coral_block_redstone_torch", () -> new StandingAndWallBlockItem(FIRE_CORAL_BLOCK_REDSTONE_TORCH.get(), FIRE_CORAL_BLOCK_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> FIRE_CORAL_BLOCK_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("fire_coral_block_soul_torch", () -> new StandingAndWallBlockItem(FIRE_CORAL_BLOCK_SOUL_TORCH.get(), FIRE_CORAL_BLOCK_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> FIRE_CORAL_BLOCK_TORCH_ITEM = MOD_ITEM_REGISTRY.register("fire_coral_block_torch", () -> new StandingAndWallBlockItem(FIRE_CORAL_BLOCK_TORCH.get(), FIRE_CORAL_BLOCK_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> GILDED_BLACKSTONE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("gilded_blackstone_redstone_torch", () -> new StandingAndWallBlockItem(GILDED_BLACKSTONE_REDSTONE_TORCH.get(), GILDED_BLACKSTONE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> GILDED_BLACKSTONE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("gilded_blackstone_soul_torch", () -> new StandingAndWallBlockItem(GILDED_BLACKSTONE_SOUL_TORCH.get(), GILDED_BLACKSTONE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> GILDED_BLACKSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("gilded_blackstone_torch", () -> new StandingAndWallBlockItem(GILDED_BLACKSTONE_TORCH.get(), GILDED_BLACKSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> GLOWSTONE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("glowstone_redstone_torch", () -> new StandingAndWallBlockItem(GLOWSTONE_REDSTONE_TORCH.get(), GLOWSTONE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> GLOWSTONE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("glowstone_soul_torch", () -> new StandingAndWallBlockItem(GLOWSTONE_SOUL_TORCH.get(), GLOWSTONE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> GLOWSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("glowstone_torch", () -> new StandingAndWallBlockItem(GLOWSTONE_TORCH.get(), GLOWSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> GOLD_BLOCK_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("gold_block_redstone_torch", () -> new StandingAndWallBlockItem(GOLD_BLOCK_REDSTONE_TORCH.get(), GOLD_BLOCK_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> GOLD_BLOCK_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("gold_block_soul_torch", () -> new StandingAndWallBlockItem(GOLD_BLOCK_SOUL_TORCH.get(), GOLD_BLOCK_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> GOLD_BLOCK_TORCH_ITEM = MOD_ITEM_REGISTRY.register("gold_block_torch", () -> new StandingAndWallBlockItem(GOLD_BLOCK_TORCH.get(), GOLD_BLOCK_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> GOLD_ORE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("gold_ore_redstone_torch", () -> new StandingAndWallBlockItem(GOLD_ORE_REDSTONE_TORCH.get(), GOLD_ORE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> GOLD_ORE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("gold_ore_soul_torch", () -> new StandingAndWallBlockItem(GOLD_ORE_SOUL_TORCH.get(), GOLD_ORE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> GOLD_ORE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("gold_ore_torch", () -> new StandingAndWallBlockItem(GOLD_ORE_TORCH.get(), GOLD_ORE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> GRANITE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("granite_redstone_torch", () -> new StandingAndWallBlockItem(GRANITE_REDSTONE_TORCH.get(), GRANITE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> GRANITE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("granite_soul_torch", () -> new StandingAndWallBlockItem(GRANITE_SOUL_TORCH.get(), GRANITE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> GRANITE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("granite_torch", () -> new StandingAndWallBlockItem(GRANITE_TORCH.get(), GRANITE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> GRAVEL_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("gravel_redstone_torch", () -> new StandingAndWallBlockItem(GRAVEL_REDSTONE_TORCH.get(), GRAVEL_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> GRAVEL_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("gravel_soul_torch", () -> new StandingAndWallBlockItem(GRAVEL_SOUL_TORCH.get(), GRAVEL_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> GRAVEL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("gravel_torch", () -> new StandingAndWallBlockItem(GRAVEL_TORCH.get(), GRAVEL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> GRAY_TERRACOTTA_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("gray_terracotta_redstone_torch", () -> new StandingAndWallBlockItem(GRAY_TERRACOTTA_REDSTONE_TORCH.get(), GRAY_TERRACOTTA_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> GRAY_TERRACOTTA_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("gray_terracotta_soul_torch", () -> new StandingAndWallBlockItem(GRAY_TERRACOTTA_SOUL_TORCH.get(), GRAY_TERRACOTTA_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> GRAY_TERRACOTTA_TORCH_ITEM = MOD_ITEM_REGISTRY.register("gray_terracotta_torch", () -> new StandingAndWallBlockItem(GRAY_TERRACOTTA_TORCH.get(), GRAY_TERRACOTTA_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> GRAY_WOOL_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("gray_wool_redstone_torch", () -> new StandingAndWallBlockItem(GRAY_WOOL_REDSTONE_TORCH.get(), GRAY_WOOL_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> GRAY_WOOL_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("gray_wool_soul_torch", () -> new StandingAndWallBlockItem(GRAY_WOOL_SOUL_TORCH.get(), GRAY_WOOL_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> GRAY_WOOL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("gray_wool_torch", () -> new StandingAndWallBlockItem(GRAY_WOOL_TORCH.get(), GRAY_WOOL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> GREEN_TERRACOTTA_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("green_terracotta_redstone_torch", () -> new StandingAndWallBlockItem(GREEN_TERRACOTTA_REDSTONE_TORCH.get(), GREEN_TERRACOTTA_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> GREEN_TERRACOTTA_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("green_terracotta_soul_torch", () -> new StandingAndWallBlockItem(GREEN_TERRACOTTA_SOUL_TORCH.get(), GREEN_TERRACOTTA_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> GREEN_TERRACOTTA_TORCH_ITEM = MOD_ITEM_REGISTRY.register("green_terracotta_torch", () -> new StandingAndWallBlockItem(GREEN_TERRACOTTA_TORCH.get(), GREEN_TERRACOTTA_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> GREEN_WOOL_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("green_wool_redstone_torch", () -> new StandingAndWallBlockItem(GREEN_WOOL_REDSTONE_TORCH.get(), GREEN_WOOL_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> GREEN_WOOL_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("green_wool_soul_torch", () -> new StandingAndWallBlockItem(GREEN_WOOL_SOUL_TORCH.get(), GREEN_WOOL_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> GREEN_WOOL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("green_wool_torch", () -> new StandingAndWallBlockItem(GREEN_WOOL_TORCH.get(), GREEN_WOOL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> HAY_BLOCK_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("hay_block_redstone_torch", () -> new StandingAndWallBlockItem(HAY_BLOCK_REDSTONE_TORCH.get(), HAY_BLOCK_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> HAY_BLOCK_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("hay_block_soul_torch", () -> new StandingAndWallBlockItem(HAY_BLOCK_SOUL_TORCH.get(), HAY_BLOCK_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> HAY_BLOCK_TORCH_ITEM = MOD_ITEM_REGISTRY.register("hay_block_torch", () -> new StandingAndWallBlockItem(HAY_BLOCK_TORCH.get(), HAY_BLOCK_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> HONEYCOMB_BLOCK_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("honeycomb_block_redstone_torch", () -> new StandingAndWallBlockItem(HONEYCOMB_BLOCK_REDSTONE_TORCH.get(), HONEYCOMB_BLOCK_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> HONEYCOMB_BLOCK_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("honeycomb_block_soul_torch", () -> new StandingAndWallBlockItem(HONEYCOMB_BLOCK_SOUL_TORCH.get(), HONEYCOMB_BLOCK_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> HONEYCOMB_BLOCK_TORCH_ITEM = MOD_ITEM_REGISTRY.register("honeycomb_block_torch", () -> new StandingAndWallBlockItem(HONEYCOMB_BLOCK_TORCH.get(), HONEYCOMB_BLOCK_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> HONEY_BLOCK_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("honey_block_redstone_torch", () -> new StandingAndWallBlockItem(HONEY_BLOCK_REDSTONE_TORCH.get(), HONEY_BLOCK_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> HONEY_BLOCK_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("honey_block_soul_torch", () -> new StandingAndWallBlockItem(HONEY_BLOCK_SOUL_TORCH.get(), HONEY_BLOCK_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> HONEY_BLOCK_TORCH_ITEM = MOD_ITEM_REGISTRY.register("honey_block_torch", () -> new StandingAndWallBlockItem(HONEY_BLOCK_TORCH.get(), HONEY_BLOCK_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> HORN_CORAL_BLOCK_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("horn_coral_block_redstone_torch", () -> new StandingAndWallBlockItem(HORN_CORAL_BLOCK_REDSTONE_TORCH.get(), HORN_CORAL_BLOCK_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> HORN_CORAL_BLOCK_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("horn_coral_block_soul_torch", () -> new StandingAndWallBlockItem(HORN_CORAL_BLOCK_SOUL_TORCH.get(), HORN_CORAL_BLOCK_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> HORN_CORAL_BLOCK_TORCH_ITEM = MOD_ITEM_REGISTRY.register("horn_coral_block_torch", () -> new StandingAndWallBlockItem(HORN_CORAL_BLOCK_TORCH.get(), HORN_CORAL_BLOCK_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> ICE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("ice_redstone_torch", () -> new StandingAndWallBlockItem(ICE_REDSTONE_TORCH.get(), ICE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> ICE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("ice_soul_torch", () -> new StandingAndWallBlockItem(ICE_SOUL_TORCH.get(), ICE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> ICE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("ice_torch", () -> new StandingAndWallBlockItem(ICE_TORCH.get(), ICE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> IRON_BARS_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("iron_bars_redstone_torch", () -> new StandingAndWallBlockItem(IRON_BARS_REDSTONE_TORCH.get(), IRON_BARS_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> IRON_BARS_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("iron_bars_soul_torch", () -> new StandingAndWallBlockItem(IRON_BARS_SOUL_TORCH.get(), IRON_BARS_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> IRON_BARS_TORCH_ITEM = MOD_ITEM_REGISTRY.register("iron_bars_torch", () -> new StandingAndWallBlockItem(IRON_BARS_TORCH.get(), IRON_BARS_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> IRON_BLOCK_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("iron_block_redstone_torch", () -> new StandingAndWallBlockItem(IRON_BLOCK_REDSTONE_TORCH.get(), IRON_BLOCK_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> IRON_BLOCK_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("iron_block_soul_torch", () -> new StandingAndWallBlockItem(IRON_BLOCK_SOUL_TORCH.get(), IRON_BLOCK_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> IRON_BLOCK_TORCH_ITEM = MOD_ITEM_REGISTRY.register("iron_block_torch", () -> new StandingAndWallBlockItem(IRON_BLOCK_TORCH.get(), IRON_BLOCK_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> IRON_ORE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("iron_ore_redstone_torch", () -> new StandingAndWallBlockItem(IRON_ORE_REDSTONE_TORCH.get(), IRON_ORE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> IRON_ORE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("iron_ore_soul_torch", () -> new StandingAndWallBlockItem(IRON_ORE_SOUL_TORCH.get(), IRON_ORE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> IRON_ORE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("iron_ore_torch", () -> new StandingAndWallBlockItem(IRON_ORE_TORCH.get(), IRON_ORE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> JUNGLE_LOG_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("jungle_log_redstone_torch", () -> new StandingAndWallBlockItem(JUNGLE_LOG_REDSTONE_TORCH.get(), JUNGLE_LOG_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> JUNGLE_LOG_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("jungle_log_soul_torch", () -> new StandingAndWallBlockItem(JUNGLE_LOG_SOUL_TORCH.get(), JUNGLE_LOG_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> JUNGLE_LOG_TORCH_ITEM = MOD_ITEM_REGISTRY.register("jungle_log_torch", () -> new StandingAndWallBlockItem(JUNGLE_LOG_TORCH.get(), JUNGLE_LOG_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> JUNGLE_PLANKS_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("jungle_planks_redstone_torch", () -> new StandingAndWallBlockItem(JUNGLE_PLANKS_REDSTONE_TORCH.get(), JUNGLE_PLANKS_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> JUNGLE_PLANKS_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("jungle_planks_soul_torch", () -> new StandingAndWallBlockItem(JUNGLE_PLANKS_SOUL_TORCH.get(), JUNGLE_PLANKS_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> JUNGLE_PLANKS_TORCH_ITEM = MOD_ITEM_REGISTRY.register("jungle_planks_torch", () -> new StandingAndWallBlockItem(JUNGLE_PLANKS_TORCH.get(), JUNGLE_PLANKS_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> LAPIS_BLOCK_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("lapis_block_redstone_torch", () -> new StandingAndWallBlockItem(LAPIS_BLOCK_REDSTONE_TORCH.get(), LAPIS_BLOCK_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> LAPIS_BLOCK_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("lapis_block_soul_torch", () -> new StandingAndWallBlockItem(LAPIS_BLOCK_SOUL_TORCH.get(), LAPIS_BLOCK_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> LAPIS_BLOCK_TORCH_ITEM = MOD_ITEM_REGISTRY.register("lapis_block_torch", () -> new StandingAndWallBlockItem(LAPIS_BLOCK_TORCH.get(), LAPIS_BLOCK_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> LAPIS_ORE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("lapis_ore_redstone_torch", () -> new StandingAndWallBlockItem(LAPIS_ORE_REDSTONE_TORCH.get(), LAPIS_ORE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> LAPIS_ORE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("lapis_ore_soul_torch", () -> new StandingAndWallBlockItem(LAPIS_ORE_SOUL_TORCH.get(), LAPIS_ORE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> LAPIS_ORE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("lapis_ore_torch", () -> new StandingAndWallBlockItem(LAPIS_ORE_TORCH.get(), LAPIS_ORE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> LIGHT_BLUE_TERRACOTTA_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("light_blue_terracotta_redstone_torch", () -> new StandingAndWallBlockItem(LIGHT_BLUE_TERRACOTTA_REDSTONE_TORCH.get(), LIGHT_BLUE_TERRACOTTA_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> LIGHT_BLUE_TERRACOTTA_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("light_blue_terracotta_soul_torch", () -> new StandingAndWallBlockItem(LIGHT_BLUE_TERRACOTTA_SOUL_TORCH.get(), LIGHT_BLUE_TERRACOTTA_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> LIGHT_BLUE_TERRACOTTA_TORCH_ITEM = MOD_ITEM_REGISTRY.register("light_blue_terracotta_torch", () -> new StandingAndWallBlockItem(LIGHT_BLUE_TERRACOTTA_TORCH.get(), LIGHT_BLUE_TERRACOTTA_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> LIGHT_BLUE_WOOL_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("light_blue_wool_redstone_torch", () -> new StandingAndWallBlockItem(LIGHT_BLUE_WOOL_REDSTONE_TORCH.get(), LIGHT_BLUE_WOOL_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> LIGHT_BLUE_WOOL_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("light_blue_wool_soul_torch", () -> new StandingAndWallBlockItem(LIGHT_BLUE_WOOL_SOUL_TORCH.get(), LIGHT_BLUE_WOOL_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> LIGHT_BLUE_WOOL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("light_blue_wool_torch", () -> new StandingAndWallBlockItem(LIGHT_BLUE_WOOL_TORCH.get(), LIGHT_BLUE_WOOL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> LIGHT_GRAY_TERRACOTTA_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("light_gray_terracotta_redstone_torch", () -> new StandingAndWallBlockItem(LIGHT_GRAY_TERRACOTTA_REDSTONE_TORCH.get(), LIGHT_GRAY_TERRACOTTA_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> LIGHT_GRAY_TERRACOTTA_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("light_gray_terracotta_soul_torch", () -> new StandingAndWallBlockItem(LIGHT_GRAY_TERRACOTTA_SOUL_TORCH.get(), LIGHT_GRAY_TERRACOTTA_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> LIGHT_GRAY_TERRACOTTA_TORCH_ITEM = MOD_ITEM_REGISTRY.register("light_gray_terracotta_torch", () -> new StandingAndWallBlockItem(LIGHT_GRAY_TERRACOTTA_TORCH.get(), LIGHT_GRAY_TERRACOTTA_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> LIGHT_GRAY_WOOL_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("light_gray_wool_redstone_torch", () -> new StandingAndWallBlockItem(LIGHT_GRAY_WOOL_REDSTONE_TORCH.get(), LIGHT_GRAY_WOOL_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> LIGHT_GRAY_WOOL_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("light_gray_wool_soul_torch", () -> new StandingAndWallBlockItem(LIGHT_GRAY_WOOL_SOUL_TORCH.get(), LIGHT_GRAY_WOOL_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> LIGHT_GRAY_WOOL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("light_gray_wool_torch", () -> new StandingAndWallBlockItem(LIGHT_GRAY_WOOL_TORCH.get(), LIGHT_GRAY_WOOL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> LIME_TERRACOTTA_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("lime_terracotta_redstone_torch", () -> new StandingAndWallBlockItem(LIME_TERRACOTTA_REDSTONE_TORCH.get(), LIME_TERRACOTTA_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> LIME_TERRACOTTA_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("lime_terracotta_soul_torch", () -> new StandingAndWallBlockItem(LIME_TERRACOTTA_SOUL_TORCH.get(), LIME_TERRACOTTA_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> LIME_TERRACOTTA_TORCH_ITEM = MOD_ITEM_REGISTRY.register("lime_terracotta_torch", () -> new StandingAndWallBlockItem(LIME_TERRACOTTA_TORCH.get(), LIME_TERRACOTTA_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> LIME_WOOL_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("lime_wool_redstone_torch", () -> new StandingAndWallBlockItem(LIME_WOOL_REDSTONE_TORCH.get(), LIME_WOOL_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> LIME_WOOL_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("lime_wool_soul_torch", () -> new StandingAndWallBlockItem(LIME_WOOL_SOUL_TORCH.get(), LIME_WOOL_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> LIME_WOOL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("lime_wool_torch", () -> new StandingAndWallBlockItem(LIME_WOOL_TORCH.get(), LIME_WOOL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> LODESTONE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("lodestone_redstone_torch", () -> new StandingAndWallBlockItem(LODESTONE_REDSTONE_TORCH.get(), LODESTONE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> LODESTONE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("lodestone_soul_torch", () -> new StandingAndWallBlockItem(LODESTONE_SOUL_TORCH.get(), LODESTONE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> LODESTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("lodestone_torch", () -> new StandingAndWallBlockItem(LODESTONE_TORCH.get(), LODESTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> MAGENTA_TERRACOTTA_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("magenta_terracotta_redstone_torch", () -> new StandingAndWallBlockItem(MAGENTA_TERRACOTTA_REDSTONE_TORCH.get(), MAGENTA_TERRACOTTA_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> MAGENTA_TERRACOTTA_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("magenta_terracotta_soul_torch", () -> new StandingAndWallBlockItem(MAGENTA_TERRACOTTA_SOUL_TORCH.get(), MAGENTA_TERRACOTTA_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> MAGENTA_TERRACOTTA_TORCH_ITEM = MOD_ITEM_REGISTRY.register("magenta_terracotta_torch", () -> new StandingAndWallBlockItem(MAGENTA_TERRACOTTA_TORCH.get(), MAGENTA_TERRACOTTA_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> MAGENTA_WOOL_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("magenta_wool_redstone_torch", () -> new StandingAndWallBlockItem(MAGENTA_WOOL_REDSTONE_TORCH.get(), MAGENTA_WOOL_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> MAGENTA_WOOL_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("magenta_wool_soul_torch", () -> new StandingAndWallBlockItem(MAGENTA_WOOL_SOUL_TORCH.get(), MAGENTA_WOOL_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> MAGENTA_WOOL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("magenta_wool_torch", () -> new StandingAndWallBlockItem(MAGENTA_WOOL_TORCH.get(), MAGENTA_WOOL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> MAGMA_BLOCK_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("magma_block_redstone_torch", () -> new StandingAndWallBlockItem(MAGMA_BLOCK_REDSTONE_TORCH.get(), MAGMA_BLOCK_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> MAGMA_BLOCK_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("magma_block_soul_torch", () -> new StandingAndWallBlockItem(MAGMA_BLOCK_SOUL_TORCH.get(), MAGMA_BLOCK_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> MAGMA_BLOCK_TORCH_ITEM = MOD_ITEM_REGISTRY.register("magma_block_torch", () -> new StandingAndWallBlockItem(MAGMA_BLOCK_TORCH.get(), MAGMA_BLOCK_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> MANGROVE_LOG_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("mangrove_log_redstone_torch", () -> new StandingAndWallBlockItem(MANGROVE_LOG_REDSTONE_TORCH.get(), MANGROVE_LOG_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> MANGROVE_LOG_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("mangrove_log_soul_torch", () -> new StandingAndWallBlockItem(MANGROVE_LOG_SOUL_TORCH.get(), MANGROVE_LOG_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> MANGROVE_LOG_TORCH_ITEM = MOD_ITEM_REGISTRY.register("mangrove_log_torch", () -> new StandingAndWallBlockItem(MANGROVE_LOG_TORCH.get(), MANGROVE_LOG_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> MANGROVE_PLANKS_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("mangrove_planks_redstone_torch", () -> new StandingAndWallBlockItem(MANGROVE_PLANKS_REDSTONE_TORCH.get(), MANGROVE_PLANKS_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> MANGROVE_PLANKS_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("mangrove_planks_soul_torch", () -> new StandingAndWallBlockItem(MANGROVE_PLANKS_SOUL_TORCH.get(), MANGROVE_PLANKS_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> MANGROVE_PLANKS_TORCH_ITEM = MOD_ITEM_REGISTRY.register("mangrove_planks_torch", () -> new StandingAndWallBlockItem(MANGROVE_PLANKS_TORCH.get(), MANGROVE_PLANKS_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> MELON_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("melon_redstone_torch", () -> new StandingAndWallBlockItem(MELON_REDSTONE_TORCH.get(), MELON_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> MELON_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("melon_soul_torch", () -> new StandingAndWallBlockItem(MELON_SOUL_TORCH.get(), MELON_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> MELON_TORCH_ITEM = MOD_ITEM_REGISTRY.register("melon_torch", () -> new StandingAndWallBlockItem(MELON_TORCH.get(), MELON_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> MOSSY_COBBLESTONE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("mossy_cobblestone_redstone_torch", () -> new StandingAndWallBlockItem(MOSSY_COBBLESTONE_REDSTONE_TORCH.get(), MOSSY_COBBLESTONE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> MOSSY_COBBLESTONE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("mossy_cobblestone_soul_torch", () -> new StandingAndWallBlockItem(MOSSY_COBBLESTONE_SOUL_TORCH.get(), MOSSY_COBBLESTONE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> MOSSY_COBBLESTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("mossy_cobblestone_torch", () -> new StandingAndWallBlockItem(MOSSY_COBBLESTONE_TORCH.get(), MOSSY_COBBLESTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> MOSSY_STONE_BRICKS_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("mossy_stone_bricks_redstone_torch", () -> new StandingAndWallBlockItem(MOSSY_STONE_BRICKS_REDSTONE_TORCH.get(), MOSSY_STONE_BRICKS_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> MOSSY_STONE_BRICKS_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("mossy_stone_bricks_soul_torch", () -> new StandingAndWallBlockItem(MOSSY_STONE_BRICKS_SOUL_TORCH.get(), MOSSY_STONE_BRICKS_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> MOSSY_STONE_BRICKS_TORCH_ITEM = MOD_ITEM_REGISTRY.register("mossy_stone_bricks_torch", () -> new StandingAndWallBlockItem(MOSSY_STONE_BRICKS_TORCH.get(), MOSSY_STONE_BRICKS_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> MOSS_BLOCK_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("moss_block_redstone_torch", () -> new StandingAndWallBlockItem(MOSS_BLOCK_REDSTONE_TORCH.get(), MOSS_BLOCK_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> MOSS_BLOCK_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("moss_block_soul_torch", () -> new StandingAndWallBlockItem(MOSS_BLOCK_SOUL_TORCH.get(), MOSS_BLOCK_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> MOSS_BLOCK_TORCH_ITEM = MOD_ITEM_REGISTRY.register("moss_block_torch", () -> new StandingAndWallBlockItem(MOSS_BLOCK_TORCH.get(), MOSS_BLOCK_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> MUD_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("mud_redstone_torch", () -> new StandingAndWallBlockItem(MUD_REDSTONE_TORCH.get(), MUD_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> MUD_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("mud_soul_torch", () -> new StandingAndWallBlockItem(MUD_SOUL_TORCH.get(), MUD_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> MUD_TORCH_ITEM = MOD_ITEM_REGISTRY.register("mud_torch", () -> new StandingAndWallBlockItem(MUD_TORCH.get(), MUD_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> MUDDY_MANGROVE_ROOTS_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("muddy_mangrove_roots_redstone_torch", () -> new StandingAndWallBlockItem(MUDDY_MANGROVE_ROOTS_REDSTONE_TORCH.get(), MUDDY_MANGROVE_ROOTS_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> MUDDY_MANGROVE_ROOTS_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("muddy_mangrove_roots_soul_torch", () -> new StandingAndWallBlockItem(MUDDY_MANGROVE_ROOTS_SOUL_TORCH.get(), MUDDY_MANGROVE_ROOTS_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> MUDDY_MANGROVE_ROOTS_TORCH_ITEM = MOD_ITEM_REGISTRY.register("muddy_mangrove_roots_torch", () -> new StandingAndWallBlockItem(MUDDY_MANGROVE_ROOTS_TORCH.get(), MUDDY_MANGROVE_ROOTS_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> MUD_BRICKS_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("mud_bricks_redstone_torch", () -> new StandingAndWallBlockItem(MUD_BRICKS_REDSTONE_TORCH.get(), MUD_BRICKS_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> MUD_BRICKS_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("mud_bricks_soul_torch", () -> new StandingAndWallBlockItem(MUD_BRICKS_SOUL_TORCH.get(), MUD_BRICKS_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> MUD_BRICKS_TORCH_ITEM = MOD_ITEM_REGISTRY.register("mud_bricks_torch", () -> new StandingAndWallBlockItem(MUD_BRICKS_TORCH.get(), MUD_BRICKS_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> MUSHROOM_STEM_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("mushroom_stem_redstone_torch", () -> new StandingAndWallBlockItem(MUSHROOM_STEM_REDSTONE_TORCH.get(), MUSHROOM_STEM_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> MUSHROOM_STEM_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("mushroom_stem_soul_torch", () -> new StandingAndWallBlockItem(MUSHROOM_STEM_SOUL_TORCH.get(), MUSHROOM_STEM_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> MUSHROOM_STEM_TORCH_ITEM = MOD_ITEM_REGISTRY.register("mushroom_stem_torch", () -> new StandingAndWallBlockItem(MUSHROOM_STEM_TORCH.get(), MUSHROOM_STEM_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> MYCELIUM_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("mycelium_redstone_torch", () -> new StandingAndWallBlockItem(MYCELIUM_REDSTONE_TORCH.get(), MYCELIUM_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> MYCELIUM_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("mycelium_soul_torch", () -> new StandingAndWallBlockItem(MYCELIUM_SOUL_TORCH.get(), MYCELIUM_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> MYCELIUM_TORCH_ITEM = MOD_ITEM_REGISTRY.register("mycelium_torch", () -> new StandingAndWallBlockItem(MYCELIUM_TORCH.get(), MYCELIUM_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> NETHERITE_BLOCK_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("netherite_block_redstone_torch", () -> new StandingAndWallBlockItem(NETHERITE_BLOCK_REDSTONE_TORCH.get(), NETHERITE_BLOCK_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> NETHERITE_BLOCK_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("netherite_block_soul_torch", () -> new StandingAndWallBlockItem(NETHERITE_BLOCK_SOUL_TORCH.get(), NETHERITE_BLOCK_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> NETHERITE_BLOCK_TORCH_ITEM = MOD_ITEM_REGISTRY.register("netherite_block_torch", () -> new StandingAndWallBlockItem(NETHERITE_BLOCK_TORCH.get(), NETHERITE_BLOCK_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> NETHERRACK_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("netherrack_redstone_torch", () -> new StandingAndWallBlockItem(NETHERRACK_REDSTONE_TORCH.get(), NETHERRACK_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> NETHERRACK_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("netherrack_soul_torch", () -> new StandingAndWallBlockItem(NETHERRACK_SOUL_TORCH.get(), NETHERRACK_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> NETHERRACK_TORCH_ITEM = MOD_ITEM_REGISTRY.register("netherrack_torch", () -> new StandingAndWallBlockItem(NETHERRACK_TORCH.get(), NETHERRACK_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> NETHER_BRICKS_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("nether_bricks_redstone_torch", () -> new StandingAndWallBlockItem(NETHER_BRICKS_REDSTONE_TORCH.get(), NETHER_BRICKS_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> NETHER_BRICKS_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("nether_bricks_soul_torch", () -> new StandingAndWallBlockItem(NETHER_BRICKS_SOUL_TORCH.get(), NETHER_BRICKS_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> NETHER_BRICKS_TORCH_ITEM = MOD_ITEM_REGISTRY.register("nether_bricks_torch", () -> new StandingAndWallBlockItem(NETHER_BRICKS_TORCH.get(), NETHER_BRICKS_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> NETHER_GOLD_ORE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("nether_gold_ore_redstone_torch", () -> new StandingAndWallBlockItem(NETHER_GOLD_ORE_REDSTONE_TORCH.get(), NETHER_GOLD_ORE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> NETHER_GOLD_ORE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("nether_gold_ore_soul_torch", () -> new StandingAndWallBlockItem(NETHER_GOLD_ORE_SOUL_TORCH.get(), NETHER_GOLD_ORE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> NETHER_GOLD_ORE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("nether_gold_ore_torch", () -> new StandingAndWallBlockItem(NETHER_GOLD_ORE_TORCH.get(), NETHER_GOLD_ORE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> NETHER_QUARTZ_ORE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("nether_quartz_ore_redstone_torch", () -> new StandingAndWallBlockItem(NETHER_QUARTZ_ORE_REDSTONE_TORCH.get(), NETHER_QUARTZ_ORE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> NETHER_QUARTZ_ORE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("nether_quartz_ore_soul_torch", () -> new StandingAndWallBlockItem(NETHER_QUARTZ_ORE_SOUL_TORCH.get(), NETHER_QUARTZ_ORE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> NETHER_QUARTZ_ORE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("nether_quartz_ore_torch", () -> new StandingAndWallBlockItem(NETHER_QUARTZ_ORE_TORCH.get(), NETHER_QUARTZ_ORE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> NETHER_WART_BLOCK_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("nether_wart_block_redstone_torch", () -> new StandingAndWallBlockItem(NETHER_WART_BLOCK_REDSTONE_TORCH.get(), NETHER_WART_BLOCK_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> NETHER_WART_BLOCK_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("nether_wart_block_soul_torch", () -> new StandingAndWallBlockItem(NETHER_WART_BLOCK_SOUL_TORCH.get(), NETHER_WART_BLOCK_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> NETHER_WART_BLOCK_TORCH_ITEM = MOD_ITEM_REGISTRY.register("nether_wart_block_torch", () -> new StandingAndWallBlockItem(NETHER_WART_BLOCK_TORCH.get(), NETHER_WART_BLOCK_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> OAK_LOG_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("oak_log_redstone_torch", () -> new StandingAndWallBlockItem(OAK_LOG_REDSTONE_TORCH.get(), OAK_LOG_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> OAK_LOG_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("oak_log_soul_torch", () -> new StandingAndWallBlockItem(OAK_LOG_SOUL_TORCH.get(), OAK_LOG_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> OAK_LOG_TORCH_ITEM = MOD_ITEM_REGISTRY.register("oak_log_torch", () -> new StandingAndWallBlockItem(OAK_LOG_TORCH.get(), OAK_LOG_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> OAK_PLANKS_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("oak_planks_redstone_torch", () -> new StandingAndWallBlockItem(OAK_PLANKS_REDSTONE_TORCH.get(), OAK_PLANKS_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> OAK_PLANKS_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("oak_planks_soul_torch", () -> new StandingAndWallBlockItem(OAK_PLANKS_SOUL_TORCH.get(), OAK_PLANKS_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> OAK_PLANKS_TORCH_ITEM = MOD_ITEM_REGISTRY.register("oak_planks_torch", () -> new StandingAndWallBlockItem(OAK_PLANKS_TORCH.get(), OAK_PLANKS_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> OBSIDIAN_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("obsidian_redstone_torch", () -> new StandingAndWallBlockItem(OBSIDIAN_REDSTONE_TORCH.get(), OBSIDIAN_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> OBSIDIAN_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("obsidian_soul_torch", () -> new StandingAndWallBlockItem(OBSIDIAN_SOUL_TORCH.get(), OBSIDIAN_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> OBSIDIAN_TORCH_ITEM = MOD_ITEM_REGISTRY.register("obsidian_torch", () -> new StandingAndWallBlockItem(OBSIDIAN_TORCH.get(), OBSIDIAN_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> OCHRE_FROGLIGHT_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("ochre_froglight_redstone_torch", () -> new StandingAndWallBlockItem(OCHRE_FROGLIGHT_REDSTONE_TORCH.get(), OCHRE_FROGLIGHT_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> OCHRE_FROGLIGHT_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("ochre_froglight_soul_torch", () -> new StandingAndWallBlockItem(OCHRE_FROGLIGHT_SOUL_TORCH.get(), OCHRE_FROGLIGHT_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> OCHRE_FROGLIGHT_TORCH_ITEM = MOD_ITEM_REGISTRY.register("ochre_froglight_torch", () -> new StandingAndWallBlockItem(OCHRE_FROGLIGHT_TORCH.get(), OCHRE_FROGLIGHT_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> ORANGE_TERRACOTTA_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("orange_terracotta_redstone_torch", () -> new StandingAndWallBlockItem(ORANGE_TERRACOTTA_REDSTONE_TORCH.get(), ORANGE_TERRACOTTA_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> ORANGE_TERRACOTTA_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("orange_terracotta_soul_torch", () -> new StandingAndWallBlockItem(ORANGE_TERRACOTTA_SOUL_TORCH.get(), ORANGE_TERRACOTTA_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> ORANGE_TERRACOTTA_TORCH_ITEM = MOD_ITEM_REGISTRY.register("orange_terracotta_torch", () -> new StandingAndWallBlockItem(ORANGE_TERRACOTTA_TORCH.get(), ORANGE_TERRACOTTA_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> ORANGE_WOOL_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("orange_wool_redstone_torch", () -> new StandingAndWallBlockItem(ORANGE_WOOL_REDSTONE_TORCH.get(), ORANGE_WOOL_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> ORANGE_WOOL_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("orange_wool_soul_torch", () -> new StandingAndWallBlockItem(ORANGE_WOOL_SOUL_TORCH.get(), ORANGE_WOOL_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> ORANGE_WOOL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("orange_wool_torch", () -> new StandingAndWallBlockItem(ORANGE_WOOL_TORCH.get(), ORANGE_WOOL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> OXIDIZED_COPPER_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("oxidized_copper_redstone_torch", () -> new StandingAndWallBlockItem(OXIDIZED_COPPER_REDSTONE_TORCH.get(), OXIDIZED_COPPER_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> OXIDIZED_COPPER_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("oxidized_copper_soul_torch", () -> new StandingAndWallBlockItem(OXIDIZED_COPPER_SOUL_TORCH.get(), OXIDIZED_COPPER_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> OXIDIZED_COPPER_TORCH_ITEM = MOD_ITEM_REGISTRY.register("oxidized_copper_torch", () -> new StandingAndWallBlockItem(OXIDIZED_COPPER_TORCH.get(), OXIDIZED_COPPER_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> OXIDIZED_CUT_COPPER_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("oxidized_cut_copper_redstone_torch", () -> new StandingAndWallBlockItem(OXIDIZED_CUT_COPPER_REDSTONE_TORCH.get(), OXIDIZED_CUT_COPPER_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> OXIDIZED_CUT_COPPER_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("oxidized_cut_copper_soul_torch", () -> new StandingAndWallBlockItem(OXIDIZED_CUT_COPPER_SOUL_TORCH.get(), OXIDIZED_CUT_COPPER_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> OXIDIZED_CUT_COPPER_TORCH_ITEM = MOD_ITEM_REGISTRY.register("oxidized_cut_copper_torch", () -> new StandingAndWallBlockItem(OXIDIZED_CUT_COPPER_TORCH.get(), OXIDIZED_CUT_COPPER_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> PACKED_ICE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("packed_ice_redstone_torch", () -> new StandingAndWallBlockItem(PACKED_ICE_REDSTONE_TORCH.get(), PACKED_ICE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> PACKED_ICE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("packed_ice_soul_torch", () -> new StandingAndWallBlockItem(PACKED_ICE_SOUL_TORCH.get(), PACKED_ICE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> PACKED_ICE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("packed_ice_torch", () -> new StandingAndWallBlockItem(PACKED_ICE_TORCH.get(), PACKED_ICE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> PACKED_MUD_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("packed_mud_redstone_torch", () -> new StandingAndWallBlockItem(PACKED_MUD_REDSTONE_TORCH.get(), PACKED_MUD_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> PACKED_MUD_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("packed_mud_soul_torch", () -> new StandingAndWallBlockItem(PACKED_MUD_SOUL_TORCH.get(), PACKED_MUD_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> PACKED_MUD_TORCH_ITEM = MOD_ITEM_REGISTRY.register("packed_mud_torch", () -> new StandingAndWallBlockItem(PACKED_MUD_TORCH.get(), PACKED_MUD_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> PEARLESCENT_FROGLIGHT_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("pearlescent_froglight_redstone_torch", () -> new StandingAndWallBlockItem(PEARLESCENT_FROGLIGHT_REDSTONE_TORCH.get(), PEARLESCENT_FROGLIGHT_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> PEARLESCENT_FROGLIGHT_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("pearlescent_froglight_soul_torch", () -> new StandingAndWallBlockItem(PEARLESCENT_FROGLIGHT_SOUL_TORCH.get(), PEARLESCENT_FROGLIGHT_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> PEARLESCENT_FROGLIGHT_TORCH_ITEM = MOD_ITEM_REGISTRY.register("pearlescent_froglight_torch", () -> new StandingAndWallBlockItem(PEARLESCENT_FROGLIGHT_TORCH.get(), PEARLESCENT_FROGLIGHT_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> PINK_TERRACOTTA_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("pink_terracotta_redstone_torch", () -> new StandingAndWallBlockItem(PINK_TERRACOTTA_REDSTONE_TORCH.get(), PINK_TERRACOTTA_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> PINK_TERRACOTTA_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("pink_terracotta_soul_torch", () -> new StandingAndWallBlockItem(PINK_TERRACOTTA_SOUL_TORCH.get(), PINK_TERRACOTTA_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> PINK_TERRACOTTA_TORCH_ITEM = MOD_ITEM_REGISTRY.register("pink_terracotta_torch", () -> new StandingAndWallBlockItem(PINK_TERRACOTTA_TORCH.get(), PINK_TERRACOTTA_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> PINK_WOOL_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("pink_wool_redstone_torch", () -> new StandingAndWallBlockItem(PINK_WOOL_REDSTONE_TORCH.get(), PINK_WOOL_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> PINK_WOOL_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("pink_wool_soul_torch", () -> new StandingAndWallBlockItem(PINK_WOOL_SOUL_TORCH.get(), PINK_WOOL_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> PINK_WOOL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("pink_wool_torch", () -> new StandingAndWallBlockItem(PINK_WOOL_TORCH.get(), PINK_WOOL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> POLISHED_ANDESITE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("polished_andesite_redstone_torch", () -> new StandingAndWallBlockItem(POLISHED_ANDESITE_REDSTONE_TORCH.get(), POLISHED_ANDESITE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> POLISHED_ANDESITE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("polished_andesite_soul_torch", () -> new StandingAndWallBlockItem(POLISHED_ANDESITE_SOUL_TORCH.get(), POLISHED_ANDESITE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> POLISHED_ANDESITE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("polished_andesite_torch", () -> new StandingAndWallBlockItem(POLISHED_ANDESITE_TORCH.get(), POLISHED_ANDESITE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> POLISHED_BASALT_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("polished_basalt_redstone_torch", () -> new StandingAndWallBlockItem(POLISHED_BASALT_REDSTONE_TORCH.get(), POLISHED_BASALT_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> POLISHED_BASALT_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("polished_basalt_soul_torch", () -> new StandingAndWallBlockItem(POLISHED_BASALT_SOUL_TORCH.get(), POLISHED_BASALT_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> POLISHED_BASALT_TORCH_ITEM = MOD_ITEM_REGISTRY.register("polished_basalt_torch", () -> new StandingAndWallBlockItem(POLISHED_BASALT_TORCH.get(), POLISHED_BASALT_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> POLISHED_BLACKSTONE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("polished_blackstone_redstone_torch", () -> new StandingAndWallBlockItem(POLISHED_BLACKSTONE_REDSTONE_TORCH.get(), POLISHED_BLACKSTONE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> POLISHED_BLACKSTONE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("polished_blackstone_soul_torch", () -> new StandingAndWallBlockItem(POLISHED_BLACKSTONE_SOUL_TORCH.get(), POLISHED_BLACKSTONE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> POLISHED_BLACKSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("polished_blackstone_torch", () -> new StandingAndWallBlockItem(POLISHED_BLACKSTONE_TORCH.get(), POLISHED_BLACKSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> POLISHED_BLACKSTONE_BRICKS_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("polished_blackstone_bricks_redstone_torch", () -> new StandingAndWallBlockItem(POLISHED_BLACKSTONE_BRICKS_REDSTONE_TORCH.get(), POLISHED_BLACKSTONE_BRICKS_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> POLISHED_BLACKSTONE_BRICKS_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("polished_blackstone_bricks_soul_torch", () -> new StandingAndWallBlockItem(POLISHED_BLACKSTONE_BRICKS_SOUL_TORCH.get(), POLISHED_BLACKSTONE_BRICKS_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> POLISHED_BLACKSTONE_BRICKS_TORCH_ITEM = MOD_ITEM_REGISTRY.register("polished_blackstone_bricks_torch", () -> new StandingAndWallBlockItem(POLISHED_BLACKSTONE_BRICKS_TORCH.get(), POLISHED_BLACKSTONE_BRICKS_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> POLISHED_DEEPSLATE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("polished_deepslate_redstone_torch", () -> new StandingAndWallBlockItem(POLISHED_DEEPSLATE_REDSTONE_TORCH.get(), POLISHED_DEEPSLATE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> POLISHED_DEEPSLATE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("polished_deepslate_soul_torch", () -> new StandingAndWallBlockItem(POLISHED_DEEPSLATE_SOUL_TORCH.get(), POLISHED_DEEPSLATE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> POLISHED_DEEPSLATE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("polished_deepslate_torch", () -> new StandingAndWallBlockItem(POLISHED_DEEPSLATE_TORCH.get(), POLISHED_DEEPSLATE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> POLISHED_DIORITE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("polished_diorite_redstone_torch", () -> new StandingAndWallBlockItem(POLISHED_DIORITE_REDSTONE_TORCH.get(), POLISHED_DIORITE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> POLISHED_DIORITE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("polished_diorite_soul_torch", () -> new StandingAndWallBlockItem(POLISHED_DIORITE_SOUL_TORCH.get(), POLISHED_DIORITE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> POLISHED_DIORITE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("polished_diorite_torch", () -> new StandingAndWallBlockItem(POLISHED_DIORITE_TORCH.get(), POLISHED_DIORITE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> POLISHED_GRANITE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("polished_granite_redstone_torch", () -> new StandingAndWallBlockItem(POLISHED_GRANITE_REDSTONE_TORCH.get(), POLISHED_GRANITE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> POLISHED_GRANITE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("polished_granite_soul_torch", () -> new StandingAndWallBlockItem(POLISHED_GRANITE_SOUL_TORCH.get(), POLISHED_GRANITE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> POLISHED_GRANITE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("polished_granite_torch", () -> new StandingAndWallBlockItem(POLISHED_GRANITE_TORCH.get(), POLISHED_GRANITE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> PRISMARINE_BRICKS_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("prismarine_bricks_redstone_torch", () -> new StandingAndWallBlockItem(PRISMARINE_BRICKS_REDSTONE_TORCH.get(), PRISMARINE_BRICKS_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> PRISMARINE_BRICKS_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("prismarine_bricks_soul_torch", () -> new StandingAndWallBlockItem(PRISMARINE_BRICKS_SOUL_TORCH.get(), PRISMARINE_BRICKS_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> PRISMARINE_BRICKS_TORCH_ITEM = MOD_ITEM_REGISTRY.register("prismarine_bricks_torch", () -> new StandingAndWallBlockItem(PRISMARINE_BRICKS_TORCH.get(), PRISMARINE_BRICKS_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> PUMPKIN_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("pumpkin_redstone_torch", () -> new StandingAndWallBlockItem(PUMPKIN_REDSTONE_TORCH.get(), PUMPKIN_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> PUMPKIN_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("pumpkin_soul_torch", () -> new StandingAndWallBlockItem(PUMPKIN_SOUL_TORCH.get(), PUMPKIN_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> PUMPKIN_TORCH_ITEM = MOD_ITEM_REGISTRY.register("pumpkin_torch", () -> new StandingAndWallBlockItem(PUMPKIN_TORCH.get(), PUMPKIN_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> PURPLE_TERRACOTTA_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("purple_terracotta_redstone_torch", () -> new StandingAndWallBlockItem(PURPLE_TERRACOTTA_REDSTONE_TORCH.get(), PURPLE_TERRACOTTA_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> PURPLE_TERRACOTTA_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("purple_terracotta_soul_torch", () -> new StandingAndWallBlockItem(PURPLE_TERRACOTTA_SOUL_TORCH.get(), PURPLE_TERRACOTTA_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> PURPLE_TERRACOTTA_TORCH_ITEM = MOD_ITEM_REGISTRY.register("purple_terracotta_torch", () -> new StandingAndWallBlockItem(PURPLE_TERRACOTTA_TORCH.get(), PURPLE_TERRACOTTA_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> PURPLE_WOOL_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("purple_wool_redstone_torch", () -> new StandingAndWallBlockItem(PURPLE_WOOL_REDSTONE_TORCH.get(), PURPLE_WOOL_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> PURPLE_WOOL_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("purple_wool_soul_torch", () -> new StandingAndWallBlockItem(PURPLE_WOOL_SOUL_TORCH.get(), PURPLE_WOOL_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> PURPLE_WOOL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("purple_wool_torch", () -> new StandingAndWallBlockItem(PURPLE_WOOL_TORCH.get(), PURPLE_WOOL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> PURPUR_BLOCK_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("purpur_block_redstone_torch", () -> new StandingAndWallBlockItem(PURPUR_BLOCK_REDSTONE_TORCH.get(), PURPUR_BLOCK_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> PURPUR_BLOCK_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("purpur_block_soul_torch", () -> new StandingAndWallBlockItem(PURPUR_BLOCK_SOUL_TORCH.get(), PURPUR_BLOCK_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> PURPUR_BLOCK_TORCH_ITEM = MOD_ITEM_REGISTRY.register("purpur_block_torch", () -> new StandingAndWallBlockItem(PURPUR_BLOCK_TORCH.get(), PURPUR_BLOCK_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> PURPUR_PILLAR_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("purpur_pillar_redstone_torch", () -> new StandingAndWallBlockItem(PURPUR_PILLAR_REDSTONE_TORCH.get(), PURPUR_PILLAR_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> PURPUR_PILLAR_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("purpur_pillar_soul_torch", () -> new StandingAndWallBlockItem(PURPUR_PILLAR_SOUL_TORCH.get(), PURPUR_PILLAR_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> PURPUR_PILLAR_TORCH_ITEM = MOD_ITEM_REGISTRY.register("purpur_pillar_torch", () -> new StandingAndWallBlockItem(PURPUR_PILLAR_TORCH.get(), PURPUR_PILLAR_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> QUARTZ_BLOCK_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("quartz_block_redstone_torch", () -> new StandingAndWallBlockItem(QUARTZ_BLOCK_REDSTONE_TORCH.get(), QUARTZ_BLOCK_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> QUARTZ_BLOCK_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("quartz_block_soul_torch", () -> new StandingAndWallBlockItem(QUARTZ_BLOCK_SOUL_TORCH.get(), QUARTZ_BLOCK_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> QUARTZ_BLOCK_TORCH_ITEM = MOD_ITEM_REGISTRY.register("quartz_block_torch", () -> new StandingAndWallBlockItem(QUARTZ_BLOCK_TORCH.get(), QUARTZ_BLOCK_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> QUARTZ_BRICKS_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("quartz_bricks_redstone_torch", () -> new StandingAndWallBlockItem(QUARTZ_BRICKS_REDSTONE_TORCH.get(), QUARTZ_BRICKS_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> QUARTZ_BRICKS_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("quartz_bricks_soul_torch", () -> new StandingAndWallBlockItem(QUARTZ_BRICKS_SOUL_TORCH.get(), QUARTZ_BRICKS_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> QUARTZ_BRICKS_TORCH_ITEM = MOD_ITEM_REGISTRY.register("quartz_bricks_torch", () -> new StandingAndWallBlockItem(QUARTZ_BRICKS_TORCH.get(), QUARTZ_BRICKS_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> QUARTZ_PILLAR_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("quartz_pillar_redstone_torch", () -> new StandingAndWallBlockItem(QUARTZ_PILLAR_REDSTONE_TORCH.get(), QUARTZ_PILLAR_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> QUARTZ_PILLAR_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("quartz_pillar_soul_torch", () -> new StandingAndWallBlockItem(QUARTZ_PILLAR_SOUL_TORCH.get(), QUARTZ_PILLAR_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> QUARTZ_PILLAR_TORCH_ITEM = MOD_ITEM_REGISTRY.register("quartz_pillar_torch", () -> new StandingAndWallBlockItem(QUARTZ_PILLAR_TORCH.get(), QUARTZ_PILLAR_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> RAW_COPPER_BLOCK_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("raw_copper_block_redstone_torch", () -> new StandingAndWallBlockItem(RAW_COPPER_BLOCK_REDSTONE_TORCH.get(), RAW_COPPER_BLOCK_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> RAW_COPPER_BLOCK_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("raw_copper_block_soul_torch", () -> new StandingAndWallBlockItem(RAW_COPPER_BLOCK_SOUL_TORCH.get(), RAW_COPPER_BLOCK_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> RAW_COPPER_BLOCK_TORCH_ITEM = MOD_ITEM_REGISTRY.register("raw_copper_block_torch", () -> new StandingAndWallBlockItem(RAW_COPPER_BLOCK_TORCH.get(), RAW_COPPER_BLOCK_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> RAW_GOLD_BLOCK_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("raw_gold_block_redstone_torch", () -> new StandingAndWallBlockItem(RAW_GOLD_BLOCK_REDSTONE_TORCH.get(), RAW_GOLD_BLOCK_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> RAW_GOLD_BLOCK_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("raw_gold_block_soul_torch", () -> new StandingAndWallBlockItem(RAW_GOLD_BLOCK_SOUL_TORCH.get(), RAW_GOLD_BLOCK_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> RAW_GOLD_BLOCK_TORCH_ITEM = MOD_ITEM_REGISTRY.register("raw_gold_block_torch", () -> new StandingAndWallBlockItem(RAW_GOLD_BLOCK_TORCH.get(), RAW_GOLD_BLOCK_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> RAW_IRON_BLOCK_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("raw_iron_block_redstone_torch", () -> new StandingAndWallBlockItem(RAW_IRON_BLOCK_REDSTONE_TORCH.get(), RAW_IRON_BLOCK_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> RAW_IRON_BLOCK_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("raw_iron_block_soul_torch", () -> new StandingAndWallBlockItem(RAW_IRON_BLOCK_SOUL_TORCH.get(), RAW_IRON_BLOCK_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> RAW_IRON_BLOCK_TORCH_ITEM = MOD_ITEM_REGISTRY.register("raw_iron_block_torch", () -> new StandingAndWallBlockItem(RAW_IRON_BLOCK_TORCH.get(), RAW_IRON_BLOCK_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> REDSTONE_BLOCK_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("redstone_block_redstone_torch", () -> new StandingAndWallBlockItem(REDSTONE_BLOCK_REDSTONE_TORCH.get(), REDSTONE_BLOCK_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> REDSTONE_BLOCK_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("redstone_block_soul_torch", () -> new StandingAndWallBlockItem(REDSTONE_BLOCK_SOUL_TORCH.get(), REDSTONE_BLOCK_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> REDSTONE_BLOCK_TORCH_ITEM = MOD_ITEM_REGISTRY.register("redstone_block_torch", () -> new StandingAndWallBlockItem(REDSTONE_BLOCK_TORCH.get(), REDSTONE_BLOCK_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> REDSTONE_ORE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("redstone_ore_redstone_torch", () -> new StandingAndWallBlockItem(REDSTONE_ORE_REDSTONE_TORCH.get(), REDSTONE_ORE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> REDSTONE_ORE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("redstone_ore_soul_torch", () -> new StandingAndWallBlockItem(REDSTONE_ORE_SOUL_TORCH.get(), REDSTONE_ORE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> REDSTONE_ORE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("redstone_ore_torch", () -> new StandingAndWallBlockItem(REDSTONE_ORE_TORCH.get(), REDSTONE_ORE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> RED_MUSHROOM_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("red_mushroom_redstone_torch", () -> new StandingAndWallBlockItem(RED_MUSHROOM_REDSTONE_TORCH.get(), RED_MUSHROOM_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> RED_MUSHROOM_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("red_mushroom_soul_torch", () -> new StandingAndWallBlockItem(RED_MUSHROOM_SOUL_TORCH.get(), RED_MUSHROOM_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> RED_MUSHROOM_TORCH_ITEM = MOD_ITEM_REGISTRY.register("red_mushroom_torch", () -> new StandingAndWallBlockItem(RED_MUSHROOM_TORCH.get(), RED_MUSHROOM_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> RED_MUSHROOM_BLOCK_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("red_mushroom_block_redstone_torch", () -> new StandingAndWallBlockItem(RED_MUSHROOM_BLOCK_REDSTONE_TORCH.get(), RED_MUSHROOM_BLOCK_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> RED_MUSHROOM_BLOCK_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("red_mushroom_block_soul_torch", () -> new StandingAndWallBlockItem(RED_MUSHROOM_BLOCK_SOUL_TORCH.get(), RED_MUSHROOM_BLOCK_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> RED_MUSHROOM_BLOCK_TORCH_ITEM = MOD_ITEM_REGISTRY.register("red_mushroom_block_torch", () -> new StandingAndWallBlockItem(RED_MUSHROOM_BLOCK_TORCH.get(), RED_MUSHROOM_BLOCK_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> RED_NETHER_BRICKS_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("red_nether_bricks_redstone_torch", () -> new StandingAndWallBlockItem(RED_NETHER_BRICKS_REDSTONE_TORCH.get(), RED_NETHER_BRICKS_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> RED_NETHER_BRICKS_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("red_nether_bricks_soul_torch", () -> new StandingAndWallBlockItem(RED_NETHER_BRICKS_SOUL_TORCH.get(), RED_NETHER_BRICKS_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> RED_NETHER_BRICKS_TORCH_ITEM = MOD_ITEM_REGISTRY.register("red_nether_bricks_torch", () -> new StandingAndWallBlockItem(RED_NETHER_BRICKS_TORCH.get(), RED_NETHER_BRICKS_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> RED_SAND_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("red_sand_redstone_torch", () -> new StandingAndWallBlockItem(RED_SAND_REDSTONE_TORCH.get(), RED_SAND_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> RED_SAND_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("red_sand_soul_torch", () -> new StandingAndWallBlockItem(RED_SAND_SOUL_TORCH.get(), RED_SAND_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> RED_SAND_TORCH_ITEM = MOD_ITEM_REGISTRY.register("red_sand_torch", () -> new StandingAndWallBlockItem(RED_SAND_TORCH.get(), RED_SAND_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> RED_SANDSTONE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("red_sandstone_redstone_torch", () -> new StandingAndWallBlockItem(RED_SANDSTONE_REDSTONE_TORCH.get(), RED_SANDSTONE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> RED_SANDSTONE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("red_sandstone_soul_torch", () -> new StandingAndWallBlockItem(RED_SANDSTONE_SOUL_TORCH.get(), RED_SANDSTONE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> RED_SANDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("red_sandstone_torch", () -> new StandingAndWallBlockItem(RED_SANDSTONE_TORCH.get(), RED_SANDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> RED_TERRACOTTA_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("red_terracotta_redstone_torch", () -> new StandingAndWallBlockItem(RED_TERRACOTTA_REDSTONE_TORCH.get(), RED_TERRACOTTA_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> RED_TERRACOTTA_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("red_terracotta_soul_torch", () -> new StandingAndWallBlockItem(RED_TERRACOTTA_SOUL_TORCH.get(), RED_TERRACOTTA_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> RED_TERRACOTTA_TORCH_ITEM = MOD_ITEM_REGISTRY.register("red_terracotta_torch", () -> new StandingAndWallBlockItem(RED_TERRACOTTA_TORCH.get(), RED_TERRACOTTA_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> RED_WOOL_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("red_wool_redstone_torch", () -> new StandingAndWallBlockItem(RED_WOOL_REDSTONE_TORCH.get(), RED_WOOL_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> RED_WOOL_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("red_wool_soul_torch", () -> new StandingAndWallBlockItem(RED_WOOL_SOUL_TORCH.get(), RED_WOOL_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> RED_WOOL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("red_wool_torch", () -> new StandingAndWallBlockItem(RED_WOOL_TORCH.get(), RED_WOOL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> REINFORCED_DEEPSLATE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("reinforced_deepslate_redstone_torch", () -> new StandingAndWallBlockItem(REINFORCED_DEEPSLATE_REDSTONE_TORCH.get(), REINFORCED_DEEPSLATE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> REINFORCED_DEEPSLATE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("reinforced_deepslate_soul_torch", () -> new StandingAndWallBlockItem(REINFORCED_DEEPSLATE_SOUL_TORCH.get(), REINFORCED_DEEPSLATE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> REINFORCED_DEEPSLATE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("reinforced_deepslate_torch", () -> new StandingAndWallBlockItem(REINFORCED_DEEPSLATE_TORCH.get(), REINFORCED_DEEPSLATE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> RESPAWN_ANCHOR_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("respawn_anchor_redstone_torch", () -> new StandingAndWallBlockItem(RESPAWN_ANCHOR_REDSTONE_TORCH.get(), RESPAWN_ANCHOR_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> RESPAWN_ANCHOR_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("respawn_anchor_soul_torch", () -> new StandingAndWallBlockItem(RESPAWN_ANCHOR_SOUL_TORCH.get(), RESPAWN_ANCHOR_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> RESPAWN_ANCHOR_TORCH_ITEM = MOD_ITEM_REGISTRY.register("respawn_anchor_torch", () -> new StandingAndWallBlockItem(RESPAWN_ANCHOR_TORCH.get(), RESPAWN_ANCHOR_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> ROOTED_DIRT_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("rooted_dirt_redstone_torch", () -> new StandingAndWallBlockItem(ROOTED_DIRT_REDSTONE_TORCH.get(), ROOTED_DIRT_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> ROOTED_DIRT_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("rooted_dirt_soul_torch", () -> new StandingAndWallBlockItem(ROOTED_DIRT_SOUL_TORCH.get(), ROOTED_DIRT_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> ROOTED_DIRT_TORCH_ITEM = MOD_ITEM_REGISTRY.register("rooted_dirt_torch", () -> new StandingAndWallBlockItem(ROOTED_DIRT_TORCH.get(), ROOTED_DIRT_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> SAND_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("sand_redstone_torch", () -> new StandingAndWallBlockItem(SAND_REDSTONE_TORCH.get(), SAND_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> SAND_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("sand_soul_torch", () -> new StandingAndWallBlockItem(SAND_SOUL_TORCH.get(), SAND_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> SAND_TORCH_ITEM = MOD_ITEM_REGISTRY.register("sand_torch", () -> new StandingAndWallBlockItem(SAND_TORCH.get(), SAND_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> SANDSTONE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("sandstone_redstone_torch", () -> new StandingAndWallBlockItem(SANDSTONE_REDSTONE_TORCH.get(), SANDSTONE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> SANDSTONE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("sandstone_soul_torch", () -> new StandingAndWallBlockItem(SANDSTONE_SOUL_TORCH.get(), SANDSTONE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> SANDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("sandstone_torch", () -> new StandingAndWallBlockItem(SANDSTONE_TORCH.get(), SANDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> SCULK_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("sculk_redstone_torch", () -> new StandingAndWallBlockItem(SCULK_REDSTONE_TORCH.get(), SCULK_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> SCULK_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("sculk_soul_torch", () -> new StandingAndWallBlockItem(SCULK_SOUL_TORCH.get(), SCULK_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> SCULK_TORCH_ITEM = MOD_ITEM_REGISTRY.register("sculk_torch", () -> new StandingAndWallBlockItem(SCULK_TORCH.get(), SCULK_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> SCULK_CATALYST_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("sculk_catalyst_redstone_torch", () -> new StandingAndWallBlockItem(SCULK_CATALYST_REDSTONE_TORCH.get(), SCULK_CATALYST_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> SCULK_CATALYST_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("sculk_catalyst_soul_torch", () -> new StandingAndWallBlockItem(SCULK_CATALYST_SOUL_TORCH.get(), SCULK_CATALYST_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> SCULK_CATALYST_TORCH_ITEM = MOD_ITEM_REGISTRY.register("sculk_catalyst_torch", () -> new StandingAndWallBlockItem(SCULK_CATALYST_TORCH.get(), SCULK_CATALYST_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> SHROOMLIGHT_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("shroomlight_redstone_torch", () -> new StandingAndWallBlockItem(SHROOMLIGHT_REDSTONE_TORCH.get(), SHROOMLIGHT_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> SHROOMLIGHT_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("shroomlight_soul_torch", () -> new StandingAndWallBlockItem(SHROOMLIGHT_SOUL_TORCH.get(), SHROOMLIGHT_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> SHROOMLIGHT_TORCH_ITEM = MOD_ITEM_REGISTRY.register("shroomlight_torch", () -> new StandingAndWallBlockItem(SHROOMLIGHT_TORCH.get(), SHROOMLIGHT_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> SLIME_BLOCK_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("slime_block_redstone_torch", () -> new StandingAndWallBlockItem(SLIME_BLOCK_REDSTONE_TORCH.get(), SLIME_BLOCK_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> SLIME_BLOCK_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("slime_block_soul_torch", () -> new StandingAndWallBlockItem(SLIME_BLOCK_SOUL_TORCH.get(), SLIME_BLOCK_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> SLIME_BLOCK_TORCH_ITEM = MOD_ITEM_REGISTRY.register("slime_block_torch", () -> new StandingAndWallBlockItem(SLIME_BLOCK_TORCH.get(), SLIME_BLOCK_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> SMOOTH_BASALT_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("smooth_basalt_redstone_torch", () -> new StandingAndWallBlockItem(SMOOTH_BASALT_REDSTONE_TORCH.get(), SMOOTH_BASALT_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> SMOOTH_BASALT_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("smooth_basalt_soul_torch", () -> new StandingAndWallBlockItem(SMOOTH_BASALT_SOUL_TORCH.get(), SMOOTH_BASALT_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> SMOOTH_BASALT_TORCH_ITEM = MOD_ITEM_REGISTRY.register("smooth_basalt_torch", () -> new StandingAndWallBlockItem(SMOOTH_BASALT_TORCH.get(), SMOOTH_BASALT_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> SMOOTH_QUARTZ_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("smooth_quartz_redstone_torch", () -> new StandingAndWallBlockItem(SMOOTH_QUARTZ_REDSTONE_TORCH.get(), SMOOTH_QUARTZ_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> SMOOTH_QUARTZ_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("smooth_quartz_soul_torch", () -> new StandingAndWallBlockItem(SMOOTH_QUARTZ_SOUL_TORCH.get(), SMOOTH_QUARTZ_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> SMOOTH_QUARTZ_TORCH_ITEM = MOD_ITEM_REGISTRY.register("smooth_quartz_torch", () -> new StandingAndWallBlockItem(SMOOTH_QUARTZ_TORCH.get(), SMOOTH_QUARTZ_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> SMOOTH_RED_SANDSTONE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("smooth_red_sandstone_redstone_torch", () -> new StandingAndWallBlockItem(SMOOTH_RED_SANDSTONE_REDSTONE_TORCH.get(), SMOOTH_RED_SANDSTONE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> SMOOTH_RED_SANDSTONE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("smooth_red_sandstone_soul_torch", () -> new StandingAndWallBlockItem(SMOOTH_RED_SANDSTONE_SOUL_TORCH.get(), SMOOTH_RED_SANDSTONE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> SMOOTH_RED_SANDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("smooth_red_sandstone_torch", () -> new StandingAndWallBlockItem(SMOOTH_RED_SANDSTONE_TORCH.get(), SMOOTH_RED_SANDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> SMOOTH_SANDSTONE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("smooth_sandstone_redstone_torch", () -> new StandingAndWallBlockItem(SMOOTH_SANDSTONE_REDSTONE_TORCH.get(), SMOOTH_SANDSTONE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> SMOOTH_SANDSTONE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("smooth_sandstone_soul_torch", () -> new StandingAndWallBlockItem(SMOOTH_SANDSTONE_SOUL_TORCH.get(), SMOOTH_SANDSTONE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> SMOOTH_SANDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("smooth_sandstone_torch", () -> new StandingAndWallBlockItem(SMOOTH_SANDSTONE_TORCH.get(), SMOOTH_SANDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> SMOOTH_STONE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("smooth_stone_redstone_torch", () -> new StandingAndWallBlockItem(SMOOTH_STONE_REDSTONE_TORCH.get(), SMOOTH_STONE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> SMOOTH_STONE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("smooth_stone_soul_torch", () -> new StandingAndWallBlockItem(SMOOTH_STONE_SOUL_TORCH.get(), SMOOTH_STONE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> SMOOTH_STONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("smooth_stone_torch", () -> new StandingAndWallBlockItem(SMOOTH_STONE_TORCH.get(), SMOOTH_STONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> SNOW_BLOCK_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("snow_block_redstone_torch", () -> new StandingAndWallBlockItem(SNOW_BLOCK_REDSTONE_TORCH.get(), SNOW_BLOCK_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> SNOW_BLOCK_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("snow_block_soul_torch", () -> new StandingAndWallBlockItem(SNOW_BLOCK_SOUL_TORCH.get(), SNOW_BLOCK_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> SNOW_BLOCK_TORCH_ITEM = MOD_ITEM_REGISTRY.register("snow_block_torch", () -> new StandingAndWallBlockItem(SNOW_BLOCK_TORCH.get(), SNOW_BLOCK_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> SOUL_SAND_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("soul_sand_redstone_torch", () -> new StandingAndWallBlockItem(SOUL_SAND_REDSTONE_TORCH.get(), SOUL_SAND_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> SOUL_SAND_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("soul_sand_soul_torch", () -> new StandingAndWallBlockItem(SOUL_SAND_SOUL_TORCH.get(), SOUL_SAND_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> SOUL_SAND_TORCH_ITEM = MOD_ITEM_REGISTRY.register("soul_sand_torch", () -> new StandingAndWallBlockItem(SOUL_SAND_TORCH.get(), SOUL_SAND_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> SOUL_SOIL_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("soul_soil_redstone_torch", () -> new StandingAndWallBlockItem(SOUL_SOIL_REDSTONE_TORCH.get(), SOUL_SOIL_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> SOUL_SOIL_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("soul_soil_soul_torch", () -> new StandingAndWallBlockItem(SOUL_SOIL_SOUL_TORCH.get(), SOUL_SOIL_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> SOUL_SOIL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("soul_soil_torch", () -> new StandingAndWallBlockItem(SOUL_SOIL_TORCH.get(), SOUL_SOIL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> SPONGE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("sponge_redstone_torch", () -> new StandingAndWallBlockItem(SPONGE_REDSTONE_TORCH.get(), SPONGE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> SPONGE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("sponge_soul_torch", () -> new StandingAndWallBlockItem(SPONGE_SOUL_TORCH.get(), SPONGE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> SPONGE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("sponge_torch", () -> new StandingAndWallBlockItem(SPONGE_TORCH.get(), SPONGE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> SPRUCE_LOG_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("spruce_log_redstone_torch", () -> new StandingAndWallBlockItem(SPRUCE_LOG_REDSTONE_TORCH.get(), SPRUCE_LOG_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> SPRUCE_LOG_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("spruce_log_soul_torch", () -> new StandingAndWallBlockItem(SPRUCE_LOG_SOUL_TORCH.get(), SPRUCE_LOG_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> SPRUCE_LOG_TORCH_ITEM = MOD_ITEM_REGISTRY.register("spruce_log_torch", () -> new StandingAndWallBlockItem(SPRUCE_LOG_TORCH.get(), SPRUCE_LOG_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> SPRUCE_PLANKS_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("spruce_planks_redstone_torch", () -> new StandingAndWallBlockItem(SPRUCE_PLANKS_REDSTONE_TORCH.get(), SPRUCE_PLANKS_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> SPRUCE_PLANKS_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("spruce_planks_soul_torch", () -> new StandingAndWallBlockItem(SPRUCE_PLANKS_SOUL_TORCH.get(), SPRUCE_PLANKS_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> SPRUCE_PLANKS_TORCH_ITEM = MOD_ITEM_REGISTRY.register("spruce_planks_torch", () -> new StandingAndWallBlockItem(SPRUCE_PLANKS_TORCH.get(), SPRUCE_PLANKS_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> STONE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("stone_redstone_torch", () -> new StandingAndWallBlockItem(STONE_REDSTONE_TORCH.get(), STONE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> STONE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("stone_soul_torch", () -> new StandingAndWallBlockItem(STONE_SOUL_TORCH.get(), STONE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> STONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("stone_torch", () -> new StandingAndWallBlockItem(STONE_TORCH.get(), STONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> STONE_BRICKS_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("stone_bricks_redstone_torch", () -> new StandingAndWallBlockItem(STONE_BRICKS_REDSTONE_TORCH.get(), STONE_BRICKS_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> STONE_BRICKS_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("stone_bricks_soul_torch", () -> new StandingAndWallBlockItem(STONE_BRICKS_SOUL_TORCH.get(), STONE_BRICKS_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> STONE_BRICKS_TORCH_ITEM = MOD_ITEM_REGISTRY.register("stone_bricks_torch", () -> new StandingAndWallBlockItem(STONE_BRICKS_TORCH.get(), STONE_BRICKS_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> STRIPPED_ACACIA_LOG_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("stripped_acacia_log_redstone_torch", () -> new StandingAndWallBlockItem(STRIPPED_ACACIA_LOG_REDSTONE_TORCH.get(), STRIPPED_ACACIA_LOG_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> STRIPPED_ACACIA_LOG_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("stripped_acacia_log_soul_torch", () -> new StandingAndWallBlockItem(STRIPPED_ACACIA_LOG_SOUL_TORCH.get(), STRIPPED_ACACIA_LOG_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> STRIPPED_ACACIA_LOG_TORCH_ITEM = MOD_ITEM_REGISTRY.register("stripped_acacia_log_torch", () -> new StandingAndWallBlockItem(STRIPPED_ACACIA_LOG_TORCH.get(), STRIPPED_ACACIA_LOG_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	
	public static final DeferredHolder<Item, Item> STRIPPED_BAMBOO_BLOCK_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("stripped_bamboo_block_redstone_torch", () -> new StandingAndWallBlockItem( STRIPPED_BAMBOO_BLOCK_REDSTONE_TORCH.get(), STRIPPED_BAMBOO_BLOCK_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> STRIPPED_BAMBOO_BLOCK_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register(    "stripped_bamboo_block_soul_torch", () -> new StandingAndWallBlockItem(     STRIPPED_BAMBOO_BLOCK_SOUL_TORCH.get(),     STRIPPED_BAMBOO_BLOCK_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> STRIPPED_BAMBOO_BLOCK_TORCH_ITEM = MOD_ITEM_REGISTRY.register(         "stripped_bamboo_block_torch", () -> new StandingAndWallBlockItem(          STRIPPED_BAMBOO_BLOCK_TORCH.get(),          STRIPPED_BAMBOO_BLOCK_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	
	public static final DeferredHolder<Item, Item> STRIPPED_BIRCH_LOG_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("stripped_birch_log_redstone_torch", () -> new StandingAndWallBlockItem(STRIPPED_BIRCH_LOG_REDSTONE_TORCH.get(), STRIPPED_BIRCH_LOG_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> STRIPPED_BIRCH_LOG_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("stripped_birch_log_soul_torch", () -> new StandingAndWallBlockItem(STRIPPED_BIRCH_LOG_SOUL_TORCH.get(), STRIPPED_BIRCH_LOG_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> STRIPPED_BIRCH_LOG_TORCH_ITEM = MOD_ITEM_REGISTRY.register("stripped_birch_log_torch", () -> new StandingAndWallBlockItem(STRIPPED_BIRCH_LOG_TORCH.get(), STRIPPED_BIRCH_LOG_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> STRIPPED_CRIMSON_HYPHAE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("stripped_crimson_hyphae_redstone_torch", () -> new StandingAndWallBlockItem(STRIPPED_CRIMSON_HYPHAE_REDSTONE_TORCH.get(), STRIPPED_CRIMSON_HYPHAE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> STRIPPED_CRIMSON_HYPHAE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("stripped_crimson_hyphae_soul_torch", () -> new StandingAndWallBlockItem(STRIPPED_CRIMSON_HYPHAE_SOUL_TORCH.get(), STRIPPED_CRIMSON_HYPHAE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> STRIPPED_CRIMSON_HYPHAE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("stripped_crimson_hyphae_torch", () -> new StandingAndWallBlockItem(STRIPPED_CRIMSON_HYPHAE_TORCH.get(), STRIPPED_CRIMSON_HYPHAE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> STRIPPED_DARK_OAK_LOG_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("stripped_dark_oak_log_redstone_torch", () -> new StandingAndWallBlockItem(STRIPPED_DARK_OAK_LOG_REDSTONE_TORCH.get(), STRIPPED_DARK_OAK_LOG_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> STRIPPED_DARK_OAK_LOG_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("stripped_dark_oak_log_soul_torch", () -> new StandingAndWallBlockItem(STRIPPED_DARK_OAK_LOG_SOUL_TORCH.get(), STRIPPED_DARK_OAK_LOG_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> STRIPPED_DARK_OAK_LOG_TORCH_ITEM = MOD_ITEM_REGISTRY.register("stripped_dark_oak_log_torch", () -> new StandingAndWallBlockItem(STRIPPED_DARK_OAK_LOG_TORCH.get(), STRIPPED_DARK_OAK_LOG_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> STRIPPED_JUNGLE_LOG_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("stripped_jungle_log_redstone_torch", () -> new StandingAndWallBlockItem(STRIPPED_JUNGLE_LOG_REDSTONE_TORCH.get(), STRIPPED_JUNGLE_LOG_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> STRIPPED_JUNGLE_LOG_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("stripped_jungle_log_soul_torch", () -> new StandingAndWallBlockItem(STRIPPED_JUNGLE_LOG_SOUL_TORCH.get(), STRIPPED_JUNGLE_LOG_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> STRIPPED_JUNGLE_LOG_TORCH_ITEM = MOD_ITEM_REGISTRY.register("stripped_jungle_log_torch", () -> new StandingAndWallBlockItem(STRIPPED_JUNGLE_LOG_TORCH.get(), STRIPPED_JUNGLE_LOG_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> STRIPPED_MANGROVE_LOG_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("stripped_mangrove_log_redstone_torch", () -> new StandingAndWallBlockItem(STRIPPED_MANGROVE_LOG_REDSTONE_TORCH.get(), STRIPPED_MANGROVE_LOG_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> STRIPPED_MANGROVE_LOG_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("stripped_mangrove_log_soul_torch", () -> new StandingAndWallBlockItem(STRIPPED_MANGROVE_LOG_SOUL_TORCH.get(), STRIPPED_MANGROVE_LOG_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> STRIPPED_MANGROVE_LOG_TORCH_ITEM = MOD_ITEM_REGISTRY.register("stripped_mangrove_log_torch", () -> new StandingAndWallBlockItem(STRIPPED_MANGROVE_LOG_TORCH.get(), STRIPPED_MANGROVE_LOG_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> STRIPPED_OAK_LOG_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("stripped_oak_log_redstone_torch", () -> new StandingAndWallBlockItem(STRIPPED_OAK_LOG_REDSTONE_TORCH.get(), STRIPPED_OAK_LOG_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> STRIPPED_OAK_LOG_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("stripped_oak_log_soul_torch", () -> new StandingAndWallBlockItem(STRIPPED_OAK_LOG_SOUL_TORCH.get(), STRIPPED_OAK_LOG_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> STRIPPED_OAK_LOG_TORCH_ITEM = MOD_ITEM_REGISTRY.register("stripped_oak_log_torch", () -> new StandingAndWallBlockItem(STRIPPED_OAK_LOG_TORCH.get(), STRIPPED_OAK_LOG_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> STRIPPED_SPRUCE_LOG_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("stripped_spruce_log_redstone_torch", () -> new StandingAndWallBlockItem(STRIPPED_SPRUCE_LOG_REDSTONE_TORCH.get(), STRIPPED_SPRUCE_LOG_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> STRIPPED_SPRUCE_LOG_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("stripped_spruce_log_soul_torch", () -> new StandingAndWallBlockItem(STRIPPED_SPRUCE_LOG_SOUL_TORCH.get(), STRIPPED_SPRUCE_LOG_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> STRIPPED_SPRUCE_LOG_TORCH_ITEM = MOD_ITEM_REGISTRY.register("stripped_spruce_log_torch", () -> new StandingAndWallBlockItem(STRIPPED_SPRUCE_LOG_TORCH.get(), STRIPPED_SPRUCE_LOG_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> STRIPPED_WARPED_HYPHAE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("stripped_warped_hyphae_redstone_torch", () -> new StandingAndWallBlockItem(STRIPPED_WARPED_HYPHAE_REDSTONE_TORCH.get(), STRIPPED_WARPED_HYPHAE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> STRIPPED_WARPED_HYPHAE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("stripped_warped_hyphae_soul_torch", () -> new StandingAndWallBlockItem(STRIPPED_WARPED_HYPHAE_SOUL_TORCH.get(), STRIPPED_WARPED_HYPHAE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> STRIPPED_WARPED_HYPHAE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("stripped_warped_hyphae_torch", () -> new StandingAndWallBlockItem(STRIPPED_WARPED_HYPHAE_TORCH.get(), STRIPPED_WARPED_HYPHAE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> TARGET_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("target_redstone_torch", () -> new StandingAndWallBlockItem(TARGET_REDSTONE_TORCH.get(), TARGET_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> TARGET_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("target_soul_torch", () -> new StandingAndWallBlockItem(TARGET_SOUL_TORCH.get(), TARGET_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> TARGET_TORCH_ITEM = MOD_ITEM_REGISTRY.register("target_torch", () -> new StandingAndWallBlockItem(TARGET_TORCH.get(), TARGET_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> TERRACOTTA_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("terracotta_redstone_torch", () -> new StandingAndWallBlockItem(TERRACOTTA_REDSTONE_TORCH.get(), TERRACOTTA_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> TERRACOTTA_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("terracotta_soul_torch", () -> new StandingAndWallBlockItem(TERRACOTTA_SOUL_TORCH.get(), TERRACOTTA_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> TERRACOTTA_TORCH_ITEM = MOD_ITEM_REGISTRY.register("terracotta_torch", () -> new StandingAndWallBlockItem(TERRACOTTA_TORCH.get(), TERRACOTTA_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> TNT_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("tnt_redstone_torch", () -> new StandingAndWallBlockItem(TNT_REDSTONE_TORCH.get(), TNT_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> TNT_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("tnt_soul_torch", () -> new StandingAndWallBlockItem(TNT_SOUL_TORCH.get(), TNT_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> TNT_TORCH_ITEM = MOD_ITEM_REGISTRY.register("tnt_torch", () -> new StandingAndWallBlockItem(TNT_TORCH.get(), TNT_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> TUBE_CORAL_BLOCK_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("tube_coral_block_redstone_torch", () -> new StandingAndWallBlockItem(TUBE_CORAL_BLOCK_REDSTONE_TORCH.get(), TUBE_CORAL_BLOCK_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> TUBE_CORAL_BLOCK_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("tube_coral_block_soul_torch", () -> new StandingAndWallBlockItem(TUBE_CORAL_BLOCK_SOUL_TORCH.get(), TUBE_CORAL_BLOCK_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> TUBE_CORAL_BLOCK_TORCH_ITEM = MOD_ITEM_REGISTRY.register("tube_coral_block_torch", () -> new StandingAndWallBlockItem(TUBE_CORAL_BLOCK_TORCH.get(), TUBE_CORAL_BLOCK_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> TUFF_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("tuff_redstone_torch", () -> new StandingAndWallBlockItem(TUFF_REDSTONE_TORCH.get(), TUFF_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> TUFF_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("tuff_soul_torch", () -> new StandingAndWallBlockItem(TUFF_SOUL_TORCH.get(), TUFF_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> TUFF_TORCH_ITEM = MOD_ITEM_REGISTRY.register("tuff_torch", () -> new StandingAndWallBlockItem(TUFF_TORCH.get(), TUFF_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> VERDANT_FROGLIGHT_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("verdant_froglight_redstone_torch", () -> new StandingAndWallBlockItem(VERDANT_FROGLIGHT_REDSTONE_TORCH.get(), VERDANT_FROGLIGHT_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> VERDANT_FROGLIGHT_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("verdant_froglight_soul_torch", () -> new StandingAndWallBlockItem(VERDANT_FROGLIGHT_SOUL_TORCH.get(), VERDANT_FROGLIGHT_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> VERDANT_FROGLIGHT_TORCH_ITEM = MOD_ITEM_REGISTRY.register("verdant_froglight_torch", () -> new StandingAndWallBlockItem(VERDANT_FROGLIGHT_TORCH.get(), VERDANT_FROGLIGHT_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> WARPED_FUNGUS_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("warped_fungus_redstone_torch", () -> new StandingAndWallBlockItem(WARPED_FUNGUS_REDSTONE_TORCH.get(), WARPED_FUNGUS_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> WARPED_FUNGUS_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("warped_fungus_soul_torch", () -> new StandingAndWallBlockItem(WARPED_FUNGUS_SOUL_TORCH.get(), WARPED_FUNGUS_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> WARPED_FUNGUS_TORCH_ITEM = MOD_ITEM_REGISTRY.register("warped_fungus_torch", () -> new StandingAndWallBlockItem(WARPED_FUNGUS_TORCH.get(), WARPED_FUNGUS_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> WARPED_HYPHAE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("warped_hyphae_redstone_torch", () -> new StandingAndWallBlockItem(WARPED_HYPHAE_REDSTONE_TORCH.get(), WARPED_HYPHAE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> WARPED_HYPHAE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("warped_hyphae_soul_torch", () -> new StandingAndWallBlockItem(WARPED_HYPHAE_SOUL_TORCH.get(), WARPED_HYPHAE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> WARPED_HYPHAE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("warped_hyphae_torch", () -> new StandingAndWallBlockItem(WARPED_HYPHAE_TORCH.get(), WARPED_HYPHAE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> WARPED_NYLIUM_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("warped_nylium_redstone_torch", () -> new StandingAndWallBlockItem(WARPED_NYLIUM_REDSTONE_TORCH.get(), WARPED_NYLIUM_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> WARPED_NYLIUM_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("warped_nylium_soul_torch", () -> new StandingAndWallBlockItem(WARPED_NYLIUM_SOUL_TORCH.get(), WARPED_NYLIUM_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> WARPED_NYLIUM_TORCH_ITEM = MOD_ITEM_REGISTRY.register("warped_nylium_torch", () -> new StandingAndWallBlockItem(WARPED_NYLIUM_TORCH.get(), WARPED_NYLIUM_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> WARPED_PLANKS_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("warped_planks_redstone_torch", () -> new StandingAndWallBlockItem(WARPED_PLANKS_REDSTONE_TORCH.get(), WARPED_PLANKS_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> WARPED_PLANKS_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("warped_planks_soul_torch", () -> new StandingAndWallBlockItem(WARPED_PLANKS_SOUL_TORCH.get(), WARPED_PLANKS_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> WARPED_PLANKS_TORCH_ITEM = MOD_ITEM_REGISTRY.register("warped_planks_torch", () -> new StandingAndWallBlockItem(WARPED_PLANKS_TORCH.get(), WARPED_PLANKS_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> WARPED_ROOTS_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("warped_roots_redstone_torch", () -> new StandingAndWallBlockItem(WARPED_ROOTS_REDSTONE_TORCH.get(), WARPED_ROOTS_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> WARPED_ROOTS_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("warped_roots_soul_torch", () -> new StandingAndWallBlockItem(WARPED_ROOTS_SOUL_TORCH.get(), WARPED_ROOTS_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> WARPED_ROOTS_TORCH_ITEM = MOD_ITEM_REGISTRY.register("warped_roots_torch", () -> new StandingAndWallBlockItem(WARPED_ROOTS_TORCH.get(), WARPED_ROOTS_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> WARPED_WART_BLOCK_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("warped_wart_block_redstone_torch", () -> new StandingAndWallBlockItem(WARPED_WART_BLOCK_REDSTONE_TORCH.get(), WARPED_WART_BLOCK_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> WARPED_WART_BLOCK_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("warped_wart_block_soul_torch", () -> new StandingAndWallBlockItem(WARPED_WART_BLOCK_SOUL_TORCH.get(), WARPED_WART_BLOCK_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> WARPED_WART_BLOCK_TORCH_ITEM = MOD_ITEM_REGISTRY.register("warped_wart_block_torch", () -> new StandingAndWallBlockItem(WARPED_WART_BLOCK_TORCH.get(), WARPED_WART_BLOCK_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> WEATHERED_COPPER_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("weathered_copper_redstone_torch", () -> new StandingAndWallBlockItem(WEATHERED_COPPER_REDSTONE_TORCH.get(), WEATHERED_COPPER_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> WEATHERED_COPPER_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("weathered_copper_soul_torch", () -> new StandingAndWallBlockItem(WEATHERED_COPPER_SOUL_TORCH.get(), WEATHERED_COPPER_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> WEATHERED_COPPER_TORCH_ITEM = MOD_ITEM_REGISTRY.register("weathered_copper_torch", () -> new StandingAndWallBlockItem(WEATHERED_COPPER_TORCH.get(), WEATHERED_COPPER_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> WEATHERED_CUT_COPPER_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("weathered_cut_copper_redstone_torch", () -> new StandingAndWallBlockItem(WEATHERED_CUT_COPPER_REDSTONE_TORCH.get(), WEATHERED_CUT_COPPER_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> WEATHERED_CUT_COPPER_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("weathered_cut_copper_soul_torch", () -> new StandingAndWallBlockItem(WEATHERED_CUT_COPPER_SOUL_TORCH.get(), WEATHERED_CUT_COPPER_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> WEATHERED_CUT_COPPER_TORCH_ITEM = MOD_ITEM_REGISTRY.register("weathered_cut_copper_torch", () -> new StandingAndWallBlockItem(WEATHERED_CUT_COPPER_TORCH.get(), WEATHERED_CUT_COPPER_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> WET_SPONGE_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("wet_sponge_redstone_torch", () -> new StandingAndWallBlockItem(WET_SPONGE_REDSTONE_TORCH.get(), WET_SPONGE_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> WET_SPONGE_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("wet_sponge_soul_torch", () -> new StandingAndWallBlockItem(WET_SPONGE_SOUL_TORCH.get(), WET_SPONGE_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> WET_SPONGE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("wet_sponge_torch", () -> new StandingAndWallBlockItem(WET_SPONGE_TORCH.get(), WET_SPONGE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> WHITE_TERRACOTTA_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("white_terracotta_redstone_torch", () -> new StandingAndWallBlockItem(WHITE_TERRACOTTA_REDSTONE_TORCH.get(), WHITE_TERRACOTTA_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> WHITE_TERRACOTTA_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("white_terracotta_soul_torch", () -> new StandingAndWallBlockItem(WHITE_TERRACOTTA_SOUL_TORCH.get(), WHITE_TERRACOTTA_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> WHITE_TERRACOTTA_TORCH_ITEM = MOD_ITEM_REGISTRY.register("white_terracotta_torch", () -> new StandingAndWallBlockItem(WHITE_TERRACOTTA_TORCH.get(), WHITE_TERRACOTTA_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> WHITE_WOOL_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("white_wool_redstone_torch", () -> new StandingAndWallBlockItem(WHITE_WOOL_REDSTONE_TORCH.get(), WHITE_WOOL_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> WHITE_WOOL_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("white_wool_soul_torch", () -> new StandingAndWallBlockItem(WHITE_WOOL_SOUL_TORCH.get(), WHITE_WOOL_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> WHITE_WOOL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("white_wool_torch", () -> new StandingAndWallBlockItem(WHITE_WOOL_TORCH.get(), WHITE_WOOL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> YELLOW_TERRACOTTA_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("yellow_terracotta_redstone_torch", () -> new StandingAndWallBlockItem(YELLOW_TERRACOTTA_REDSTONE_TORCH.get(), YELLOW_TERRACOTTA_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> YELLOW_TERRACOTTA_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("yellow_terracotta_soul_torch", () -> new StandingAndWallBlockItem(YELLOW_TERRACOTTA_SOUL_TORCH.get(), YELLOW_TERRACOTTA_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> YELLOW_TERRACOTTA_TORCH_ITEM = MOD_ITEM_REGISTRY.register("yellow_terracotta_torch", () -> new StandingAndWallBlockItem(YELLOW_TERRACOTTA_TORCH.get(), YELLOW_TERRACOTTA_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> YELLOW_WOOL_REDSTONE_TORCH_ITEM = MOD_ITEM_REGISTRY.register("yellow_wool_redstone_torch", () -> new StandingAndWallBlockItem(YELLOW_WOOL_REDSTONE_TORCH.get(), YELLOW_WOOL_REDSTONE_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> YELLOW_WOOL_SOUL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("yellow_wool_soul_torch", () -> new StandingAndWallBlockItem(YELLOW_WOOL_SOUL_TORCH.get(), YELLOW_WOOL_SOUL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	public static final DeferredHolder<Item, Item> YELLOW_WOOL_TORCH_ITEM = MOD_ITEM_REGISTRY.register("yellow_wool_torch", () -> new StandingAndWallBlockItem(YELLOW_WOOL_TORCH.get(), YELLOW_WOOL_WALL_TORCH.get(), new Item.Properties(), Direction.DOWN ));
	
	
	
	/** Registers a RegistryObject Block into our DeferredRegister, MOD_BLOCK_REGISTRY */
	private static <T extends Block> DeferredHolder<Block, T> registerBlock(String name, Supplier<T> block) {
		DeferredHolder<Block, T> toReturn = MOD_BLOCK_REGISTRY.register(name, block);
		return toReturn;
	}
	
	/** Registers two Blocks as an RegistryObject Item into our DeferredRegister, MOD_ITEM_REGISTRY */
	private static <T extends Block> DeferredHolder<Item, Item> registerStandingAndWallBlockItem(String name, DeferredHolder<Block, Block> floor_block, DeferredHolder<Block, Block> wall_block) {
		return MOD_ITEM_REGISTRY.register(name, () -> new StandingAndWallBlockItem(floor_block.get(), wall_block.get(), new Item.Properties(), Direction.DOWN ));
	}
	
	/** Registers both Blocks and BlockItems for our Torches*/
	public static void register(IEventBus bus) {
		MOD_BLOCK_REGISTRY.register(bus);
		MOD_ITEM_REGISTRY.register(bus);
	}
}
